{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/cute/Documents/vsc/HTV/frontend/app/poc/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { Chat } from \"@/components/Chat\";\nimport Link from \"next/link\";\nimport Image from \"next/image\";\nimport { useState, useRef, useEffect } from \"react\";\nimport PresetCard from \"@/components/PresetCard\";\nimport { handlePhase1 } from \"@/lib/chat/validator-and-calls\";\nimport { Phase1Response, Idea, Ingredient } from \"@/lib/chat/types\";\n\ninterface Message {\n  role: \"user\" | \"assistant\";\n  content: string;\n  id: string;\n  phase1Data?: Phase1Response;\n}\n\nexport default function Home() {\n  const [prompt, setPrompt] = useState(\"\");\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [isChatMode, setIsChatMode] = useState(false);\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [chatInput, setChatInput] = useState(\"\");\n  const [animationPhase, setAnimationPhase] = useState(0);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const [animatedMessageIds, setAnimatedMessageIds] = useState<Set<string>>(\n    new Set()\n  );\n  const [selectedIdea, setSelectedIdea] = useState<Idea | null>(null);\n  const [extractedIngredients, setExtractedIngredients] = useState<\n    Ingredient[]\n  >([]);\n\n  const presets = [\n    {\n      icon: \"/turtle.svg\",\n      title: \"Generate a fashion accessory\",\n      description: \"from recycled ocean plastic...\",\n      text: \"Generate a fashion accessory from recycled ocean plastic...\",\n    },\n    {\n      icon: \"/glass.svg\",\n      title: \"Make home decor from recycled\",\n      description: \"glass bottles...\",\n      text: \"Make home decor from recycled glass bottles...\",\n    },\n    {\n      icon: \"/plastic.svg\",\n      title: \"Help me make something from\",\n      description: \"plastic bottles....\",\n      text: \"Help me make something from plastic bottles....\",\n    },\n  ];\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleGenerate = async () => {\n    if (!prompt.trim()) return;\n    setIsGenerating(true);\n\n    const initialMessage = prompt;\n\n    // Animation sequence\n    // Phase 1: Fade out examples (0-300ms)\n    setAnimationPhase(1);\n\n    setTimeout(() => {\n      // Phase 2: Fade out title and button (300-600ms)\n      setAnimationPhase(2);\n    }, 300);\n\n    setTimeout(() => {\n      // Phase 3: Clear input, slide to top (600-1000ms)\n      setAnimationPhase(3);\n      setPrompt(\"\");\n    }, 600);\n\n    setTimeout(() => {\n      // Phase 4: Expand box (1000-1800ms)\n      setAnimationPhase(4);\n    }, 1000);\n\n    setTimeout(() => {\n      // Phase 5: Prepare for transition (1800ms) - wait for grow to finish\n      setAnimationPhase(5);\n    }, 1800);\n\n    setTimeout(() => {\n      // Phase 6: Switch to chat mode and show first message (1900ms)\n      const messageId = Date.now().toString();\n      setMessages([\n        {\n          role: \"user\",\n          content: initialMessage,\n          id: messageId,\n        },\n      ]);\n      setAnimatedMessageIds(new Set([messageId]));\n      setIsChatMode(true);\n      setAnimationPhase(6);\n    }, 1900);\n\n    setTimeout(() => {\n      // Phase 6.5: Show chat input after chat interface renders (2200ms)\n      setAnimationPhase(7);\n    }, 2200);\n\n    setTimeout(async () => {\n      // Phase 8: Fetch AI response\n      setAnimationPhase(8);\n      setIsGenerating(false);\n\n      // Call Phase 1 API with the initial message\n      try {\n        const phase1Response = await handlePhase1(initialMessage);\n        const assistantId = (Date.now() + 1).toString();\n\n        setMessages((prev) => [\n          ...prev,\n          {\n            role: \"assistant\",\n            content: \"I've analyzed your materials! Here's what I found:\",\n            id: assistantId,\n            phase1Data: phase1Response,\n          },\n        ]);\n        setAnimatedMessageIds((prev) => new Set([...prev, assistantId]));\n        setExtractedIngredients(phase1Response.ingredients);\n      } catch (error) {\n        console.error(\"Phase 1 API error:\", error);\n        const assistantId = (Date.now() + 1).toString();\n        setMessages((prev) => [\n          ...prev,\n          {\n            role: \"assistant\",\n            content:\n              \"I'm sorry, I encountered an error analyzing your materials. Please try again.\",\n            id: assistantId,\n          },\n        ]);\n        setAnimatedMessageIds((prev) => new Set([...prev, assistantId]));\n      }\n    }, 1900);\n  };\n\n  const handleSendMessage = async () => {\n    if (!chatInput.trim()) return;\n\n    const userMessageId = Date.now().toString();\n    const userMessage: Message = {\n      role: \"user\",\n      content: chatInput,\n      id: userMessageId,\n    };\n\n    setMessages((prev) => [...prev, userMessage]);\n    setAnimatedMessageIds((prev) => new Set([...prev, userMessageId]));\n    setChatInput(\"\");\n\n    // Call Phase 1 API with the follow-up message\n    try {\n      const phase1Response = await handlePhase1(chatInput);\n      const assistantId = (Date.now() + 1).toString();\n\n      setMessages((prev) => [\n        ...prev,\n        {\n          role: \"assistant\",\n          content: \"Here's an updated analysis based on your input:\",\n          id: assistantId,\n          phase1Data: phase1Response,\n        },\n      ]);\n      setAnimatedMessageIds((prev) => new Set([...prev, assistantId]));\n      setExtractedIngredients(phase1Response.ingredients);\n    } catch (error) {\n      console.error(\"Phase 1 API error:\", error);\n      const assistantId = (Date.now() + 1).toString();\n      setMessages((prev) => [\n        ...prev,\n        {\n          role: \"assistant\",\n          content: \"I'm sorry, I encountered an error. Please try again.\",\n          id: assistantId,\n        },\n      ]);\n      setAnimatedMessageIds((prev) => new Set([...prev, assistantId]));\n    }\n  };\n\n  const handleIdeaSelect = (idea: Idea) => {\n    setSelectedIdea(idea);\n    const assistantId = Date.now().toString();\n    setMessages((prev) => [\n      ...prev,\n      {\n        role: \"assistant\",\n        content: `Great choice! You selected \"${idea.title}\". Ready to visualize this project? (Phase 2 coming soon)`,\n        id: assistantId,\n      },\n    ]);\n    setAnimatedMessageIds((prev) => new Set([...prev, assistantId]));\n  };\n\n  const handleExampleClick = (text: string) => {\n    setPrompt(text);\n  };\n\n  if (isChatMode) {\n    // Chat Interface\n    return (\n      <div className=\"min-h-screen bg-[#181A25] flex flex-col overflow-hidden font-menlo\">\n        {/* Header */}\n        <div className=\"p-4 bg-[#1E2433] border-b border-[#2A3142] flex items-center gap-4\">\n          <Image\n            src=\"/logo_text.svg\"\n            alt=\"Orbit\"\n            width={80}\n            height={27}\n            className=\"opacity-90 mr-auto\"\n          />\n          <Link\n            href=\"/poc/trellis\"\n            className=\"text-blue-400 hover:text-blue-300 font-semibold transition-colors\"\n          >\n            Try Trellis 3D Generator →\n          </Link>\n          <Link\n            href=\"/poc/magic-pencil\"\n            className=\"text-purple-400 hover:text-purple-300 font-semibold transition-colors\"\n          >\n            Try Magic Pencil ✨ →\n          </Link>\n        </div>\n\n        {/* Chat Container */}\n        <div className=\"flex-1 flex flex-col max-w-8xl px-16 mx-auto w-full py-8\">\n          {/* Messages Area - This is the grown textarea transformed */}\n          <div\n            className=\"bg-[#232937] border border-[#4ade80] p-6 overflow-y-auto\"\n            style={{\n              height:\n                animationPhase >= 7\n                  ? \"calc(100vh - 280px)\"\n                  : \"calc(100vh - 200px)\",\n              transition: \"height 300ms ease-out\",\n            }}\n          >\n            <div className=\"space-y-4\">\n              {messages.map((message) => {\n                const shouldAnimate = animatedMessageIds.has(message.id);\n                return (\n                  <div key={message.id}>\n                    <div\n                      className={`flex ${\n                        message.role === \"user\"\n                          ? \"justify-end\"\n                          : \"justify-start\"\n                      }`}\n                    >\n                      <div\n                        className={`max-w-[70%] px-4 py-3 rounded-lg ${\n                          message.role === \"user\"\n                            ? \"bg-[#4ade80] text-black\"\n                            : \"bg-[#2A3142] text-white\"\n                        }`}\n                        style={\n                          shouldAnimate\n                            ? {\n                                animation:\n                                  \"popIn 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55) forwards\",\n                              }\n                            : undefined\n                        }\n                      >\n                        {message.content}\n                      </div>\n                    </div>\n\n                    {/* Render Phase 1 data if present */}\n                    {message.phase1Data && (\n                      <div className=\"mt-4 space-y-4\">\n                        {/* Ingredients Section */}\n                        <div className=\"bg-[#1a2030] border border-[#3a4560] rounded-lg p-4\">\n                          <h3 className=\"text-[#4ade80] text-lg font-semibold mb-3\">\n                            📦 Extracted Materials\n                          </h3>\n                          <div className=\"space-y-2\">\n                            {message.phase1Data.ingredients.map(\n                              (ingredient, idx) => (\n                                <div\n                                  key={idx}\n                                  className=\"bg-[#232937] rounded p-3 border border-[#2A3142]\"\n                                >\n                                  <div className=\"flex items-start justify-between\">\n                                    <div className=\"flex-1\">\n                                      <span className=\"text-white font-medium\">\n                                        {ingredient.name || \"Unknown\"}\n                                      </span>\n                                      <div className=\"text-sm text-gray-400 mt-1 flex flex-wrap gap-3\">\n                                        <span>\n                                          Material:{\" \"}\n                                          {ingredient.material || \"N/A\"}\n                                        </span>\n                                        {ingredient.size && (\n                                          <span>Size: {ingredient.size}</span>\n                                        )}\n                                        {ingredient.condition && (\n                                          <span>\n                                            Condition: {ingredient.condition}\n                                          </span>\n                                        )}\n                                      </div>\n                                    </div>\n                                    <span\n                                      className={`text-xs px-2 py-1 rounded ml-2 ${\n                                        ingredient.confidence >= 0.8\n                                          ? \"bg-green-900 text-green-200\"\n                                          : ingredient.confidence >= 0.6\n                                          ? \"bg-yellow-900 text-yellow-200\"\n                                          : \"bg-red-900 text-red-200\"\n                                      }`}\n                                    >\n                                      {Math.round(ingredient.confidence * 100)}%\n                                    </span>\n                                  </div>\n                                </div>\n                              )\n                            )}\n                          </div>\n                        </div>\n\n                        {/* Clarifying Questions */}\n                        {message.phase1Data.needs_clarification &&\n                          message.phase1Data.clarifying_questions &&\n                          message.phase1Data.clarifying_questions.length >\n                            0 && (\n                            <div className=\"bg-yellow-900/20 border border-yellow-700/50 rounded-lg p-4\">\n                              <h3 className=\"text-yellow-400 text-lg font-semibold mb-2\">\n                                ❓ Need More Information\n                              </h3>\n                              <ul className=\"space-y-2\">\n                                {message.phase1Data.clarifying_questions.map(\n                                  (question, idx) => (\n                                    <li\n                                      key={idx}\n                                      className=\"text-yellow-200 text-sm\"\n                                    >\n                                      • {question}\n                                    </li>\n                                  )\n                                )}\n                              </ul>\n                            </div>\n                          )}\n\n                        {/* Ideas Section */}\n                        <div>\n                          <h3 className=\"text-[#4ade80] text-lg font-semibold mb-3\">\n                            💡 Project Ideas\n                          </h3>\n                          <div className=\"grid grid-cols-1 gap-3\">\n                            {message.phase1Data.ideas.map((idea) => (\n                              <div\n                                key={idea.id}\n                                onClick={() => handleIdeaSelect(idea)}\n                                className=\"bg-[#1a2030] border border-[#3a4560] hover:border-[#4ade80] rounded-lg p-4 cursor-pointer transition-all hover:scale-[1.02]\"\n                                style={{\n                                  animation: \"fadeIn 0.5s ease-out forwards\",\n                                }}\n                              >\n                                <h4 className=\"text-white font-semibold mb-1\">\n                                  {idea.title}\n                                </h4>\n                                <p className=\"text-gray-400 text-sm\">\n                                  {idea.one_liner}\n                                </p>\n                              </div>\n                            ))}\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                );\n              })}\n              <div ref={messagesEndRef} />\n            </div>\n          </div>\n\n          {/* Chat Input */}\n          <div\n            className=\"mt-4 transition-all duration-500 ease-out\"\n            style={{\n              transform:\n                animationPhase >= 7 ? \"translateY(0)\" : \"translateY(100px)\",\n              opacity: animationPhase >= 7 ? 1 : 0,\n              pointerEvents: animationPhase >= 7 ? \"auto\" : \"none\",\n            }}\n          >\n            <div className=\"flex gap-3 items-end\">\n              <textarea\n                value={chatInput}\n                onChange={(e) => setChatInput(e.target.value)}\n                onKeyDown={(e) => {\n                  if (e.key === \"Enter\" && !e.shiftKey) {\n                    e.preventDefault();\n                    handleSendMessage();\n                  }\n                }}\n                placeholder=\"Continue the conversation...\"\n                className=\"flex-1 bg-[#232937] text-white text-base border border-[#4ade80] p-4 resize-none focus:outline-none focus:border-[#3bc970] transition-colors placeholder:text-gray-500 rounded\"\n                rows={2}\n              />\n              <button\n                onClick={handleSendMessage}\n                disabled={!chatInput.trim()}\n                className=\"px-8 py-4 bg-[#4ade80] hover:bg-[#3bc970] disabled:bg-gray-600 disabled:cursor-not-allowed text-black font-semibold transition-colors uppercase rounded\"\n              >\n                Send\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Initial Form UI\n  return (\n    <div className=\"min-h-screen bg-[#181A25] overflow-hidden font-menlo\">\n      {/* Header */}\n      <div className=\"p-4 bg-[#1E2433] border-b border-[#2A3142] flex items-center gap-4\">\n        <Image\n          src=\"/logo_text.svg\"\n          alt=\"Orbit\"\n          width={80}\n          height={27}\n          className=\"opacity-90 mr-auto\"\n        />\n        <Link\n          href=\"/poc/trellis\"\n          className=\"text-blue-400 hover:text-blue-300 font-semibold transition-colors\"\n        >\n          Try Trellis 3D Generator →\n        </Link>\n        <Link\n          href=\"/poc/magic-pencil\"\n          className=\"text-purple-400 hover:text-purple-300 font-semibold transition-colors\"\n        >\n          Try Magic Pencil ✨ →\n        </Link>\n      </div>\n\n      {/* Main Content */}\n      <div\n        className=\"mx-auto transition-all duration-500 ease-out\"\n        style={{\n          maxWidth: animationPhase >= 3 ? \"100%\" : \"var(--max-width-8xl)\",\n          paddingLeft: animationPhase >= 3 ? \"4rem\" : \"4rem\",\n          paddingRight: animationPhase >= 3 ? \"4rem\" : \"4rem\",\n          paddingTop: animationPhase >= 3 ? \"2rem\" : \"4rem\",\n          paddingBottom: animationPhase >= 3 ? \"0\" : \"0\",\n        }}\n      >\n        {/* Title */}\n        <div className=\"overflow-hidden\">\n          <h1\n            className=\"text-4xl text-white mb-2 transition-all duration-500 ease-out\"\n            style={{\n              transform:\n                animationPhase >= 2 ? \"translateY(-150%)\" : \"translateY(0)\",\n              opacity: animationPhase >= 2 ? 0 : 1,\n            }}\n          >\n            Turn Waste into Products\n          </h1>\n        </div>\n\n        {/* Input Section */}\n        <div\n          className=\"transition-all duration-500 ease-out\"\n          style={{\n            marginTop: animationPhase >= 3 ? \"0\" : \"3rem\",\n            marginBottom: animationPhase >= 3 ? \"0\" : \"2rem\",\n            transform:\n              animationPhase >= 3 ? \"translateY(-50px)\" : \"translateY(0)\",\n          }}\n        >\n          <div className=\"overflow-hidden\">\n            {animationPhase < 2 && (\n              <label\n                className=\"block text-[#4ade80] text-base mb-4 font-mono transition-all duration-500 ease-out\"\n                style={{\n                  transform:\n                    animationPhase >= 2 ? \"translateY(-150%)\" : \"translateY(0)\",\n                  opacity: animationPhase >= 2 ? 0 : 1,\n                }}\n              >\n                Describe your waste material\n              </label>\n            )}\n          </div>\n          <div className=\"relative\">\n            <textarea\n              value={prompt}\n              onChange={(e) => setPrompt(e.target.value)}\n              onKeyDown={(e) => {\n                if (e.key === \"Enter\" && e.ctrlKey) {\n                  handleGenerate();\n                }\n              }}\n              placeholder={\n                animationPhase < 3\n                  ? \"Describe what you want to make and what materials you have.\"\n                  : \"\"\n              }\n              style={{\n                height: animationPhase >= 4 ? \"60vh\" : \"10rem\",\n                transition: \"height 800ms cubic-bezier(0.4, 0, 0.2, 1)\",\n              }}\n              className=\"w-full bg-[#232937] text-white text-base border p-5 resize-none focus:outline-none border-[#4ade80] placeholder:text-gray-500\"\n            />\n          </div>\n        </div>\n\n        {/* Generate Button */}\n        <div className=\"overflow-hidden\">\n          <div\n            className=\"transition-all duration-500 ease-out\"\n            style={{\n              transform:\n                animationPhase >= 1 ? \"translateY(150%)\" : \"translateY(0)\",\n              opacity: animationPhase >= 1 ? 0 : 1,\n            }}\n          >\n            <button\n              onClick={handleGenerate}\n              disabled={!prompt.trim() || isGenerating}\n              className=\"w-full bg-[#4ade80] hover:bg-[#3bc970] disabled:bg-gray-600 disabled:cursor-not-allowed text-black py-3 transition-all duration-300 uppercase text-base\"\n            >\n              {isGenerating ? \"GENERATING...\" : \"GENERATE\"}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Examples Section */}\n      <div className=\"overflow-hidden\">\n        <div\n          className=\"max-w-8xl px-16 mx-auto pb-16 transition-all duration-500 ease-out\"\n          style={{\n            transform:\n              animationPhase >= 1 ? \"translateY(100%)\" : \"translateY(0)\",\n            opacity: animationPhase >= 1 ? 0 : 1,\n          }}\n        >\n          <h2 className=\"text-[#4ade80] text-base mb-4 font-mono\">\n            Try these examples\n          </h2>\n          <div className=\"flex justify-between\">\n            {presets.map((example, index) => (\n              <div key={index} onClick={() => handleExampleClick(example.text)}>\n                <PresetCard\n                  title={example.title}\n                  description={example.description}\n                  image={example.icon}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}