{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///Users/cute/Documents/vsc/HTV/frontend/components/PresetCard.tsx"],"sourcesContent":["import Image from \"next/image\";\n\ninterface PresetCardProps {\n  title: string;\n  description: string;\n  image: string;\n}\n\nexport default function PresetCard({\n  title,\n  description,\n  image,\n}: PresetCardProps) {\n  return (\n    <div className=\"w-[413px] h-[188px] flex flex-col items-center justify-center bg-[#2a3038] border-[0.5px] border-solid border-[#67b68b] relative\">\n      <div className=\"flex w-[35px] h-[33px] items-center justify-center absolute top-[50px] rounded-[2.92px] border border-solid border-[#67b68b]\">\n        <Image\n          className=\"relative\"\n          alt=\"Vector\"\n          src={image}\n          width={16}\n          height={11}\n        />\n      </div>\n      <p className=\"font-menlo font-normal text-neutral-100 text-[17px] text-center tracking-[0] leading-5 mt-8 px-8\">\n        {title}\n        <br />\n        {description}\n      </p>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAA;;;AAQe,SAAS,WAAW,EACjC,KAAK,EACL,WAAW,EACX,KAAK,EACW;IAChB,qBACE,qRAAC;QAAI,WAAU;;0BACb,qRAAC;gBAAI,WAAU;0BACb,cAAA,qRAAC,+KAAK;oBACJ,WAAU;oBACV,KAAI;oBACJ,KAAK;oBACL,OAAO;oBACP,QAAQ;;;;;;;;;;;0BAGZ,qRAAC;gBAAE,WAAU;;oBACV;kCACD,qRAAC;;;;;oBACA;;;;;;;;;;;;;AAIT","debugId":null}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["file:///Users/cute/Documents/vsc/HTV/frontend/app/poc/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { Chat } from \"@/components/Chat\";\nimport Link from \"next/link\";\nimport Image from \"next/image\";\nimport { useState, useRef, useEffect } from \"react\";\nimport PresetCard from \"@/components/PresetCard\";\nimport { handlePhase1 } from \"@/lib/chat/validator-and-calls\";\nimport { Phase1Response, Idea, Ingredient } from \"@/lib/chat/types\";\n\ninterface Message {\n  role: \"user\" | \"assistant\";\n  content: string;\n  id: string;\n  phase1Data?: Phase1Response;\n}\n\nexport default function Home() {\n  const [prompt, setPrompt] = useState(\"\");\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [isChatMode, setIsChatMode] = useState(false);\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [chatInput, setChatInput] = useState(\"\");\n  const [animationPhase, setAnimationPhase] = useState(0);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const [animatedMessageIds, setAnimatedMessageIds] = useState<Set<string>>(\n    new Set()\n  );\n  const [selectedIdea, setSelectedIdea] = useState<Idea | null>(null);\n  const [extractedIngredients, setExtractedIngredients] = useState<Ingredient[]>([]);\n\n  const presets = [\n    {\n      icon: \"/turtle.svg\",\n      title: \"Generate a fashion accessory\",\n      description: \"from recycled ocean plastic...\",\n      text: \"Generate a fashion accessory from recycled ocean plastic...\",\n    },\n    {\n      icon: \"/glass.svg\",\n      title: \"Make home decor from recycled\",\n      description: \"glass bottles...\",\n      text: \"Make home decor from recycled glass bottles...\",\n    },\n    {\n      icon: \"/plastic.svg\",\n      title: \"Help me make something from\",\n      description: \"plastic bottles....\",\n      text: \"Help me make something from plastic bottles....\",\n    },\n  ];\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleGenerate = async () => {\n    if (!prompt.trim()) return;\n    setIsGenerating(true);\n\n    const initialMessage = prompt;\n\n    // Animation sequence\n    // Phase 1: Fade out examples (0-300ms)\n    setAnimationPhase(1);\n\n    setTimeout(() => {\n      // Phase 2: Clear input and start transform (300-600ms)\n      setAnimationPhase(2);\n      setPrompt(\"\");\n    }, 300);\n\n    setTimeout(() => {\n      // Phase 3: Expand box (600-1000ms)\n      setAnimationPhase(3);\n    }, 600);\n\n    setTimeout(() => {\n      // Phase 4: Prepare for transition (1300ms) - wait for grow to finish\n      setAnimationPhase(4);\n    }, 1300);\n\n    setTimeout(() => {\n      // Phase 5: Switch to chat mode and show first message (1400ms)\n      const messageId = Date.now().toString();\n      setMessages([\n        {\n          role: \"user\",\n          content: initialMessage,\n          id: messageId,\n        },\n      ]);\n      setAnimatedMessageIds(new Set([messageId]));\n      setIsChatMode(true);\n      setAnimationPhase(5);\n    }, 1400);\n\n    setTimeout(() => {\n      // Phase 6: Animation complete, fetch AI response\n      setAnimationPhase(6);\n      setIsGenerating(false);\n\n      // TODO: Call API and add assistant response\n      // For now, mock response\n      setTimeout(() => {\n        const assistantId = (Date.now() + 1).toString();\n        setMessages((prev) => [\n          ...prev,\n          {\n            role: \"assistant\",\n            content:\n              \"I understand you want to create something from waste materials. Let me help you with that!\",\n            id: assistantId,\n          },\n        ]);\n        setAnimatedMessageIds((prev) => new Set([...prev, assistantId]));\n      }, 500);\n    }, 1900);\n  };\n\n  const handleSendMessage = async () => {\n    if (!chatInput.trim()) return;\n\n    const userMessageId = Date.now().toString();\n    const userMessage: Message = {\n      role: \"user\",\n      content: chatInput,\n      id: userMessageId,\n    };\n\n    setMessages((prev) => [...prev, userMessage]);\n    setAnimatedMessageIds((prev) => new Set([...prev, userMessageId]));\n    setChatInput(\"\");\n\n    // TODO: Call API for response\n    setTimeout(() => {\n      const assistantId = (Date.now() + 1).toString();\n      setMessages((prev) => [\n        ...prev,\n        {\n          role: \"assistant\",\n          content:\n            \"This is a mock response. Integration with Gemini API pending.\",\n          id: assistantId,\n        },\n      ]);\n      setAnimatedMessageIds((prev) => new Set([...prev, assistantId]));\n    }, 1000);\n  };\n\n  const handleExampleClick = (text: string) => {\n    setPrompt(text);\n  };\n\n  if (isChatMode) {\n    // Chat Interface\n    return (\n      <div className=\"min-h-screen bg-[#181A25] flex flex-col overflow-hidden\">\n        {/* Header */}\n        <div className=\"p-4 bg-[#1E2433] border-b border-[#2A3142] flex items-center gap-4\">\n          <Image\n            src=\"/logo_text.svg\"\n            alt=\"Orbit\"\n            width={80}\n            height={27}\n            className=\"opacity-90 mr-auto\"\n          />\n          <Link\n            href=\"/poc/trellis\"\n            className=\"text-blue-400 hover:text-blue-300 font-semibold transition-colors\"\n          >\n            Try Trellis 3D Generator →\n          </Link>\n          <Link\n            href=\"/poc/magic-pencil\"\n            className=\"text-purple-400 hover:text-purple-300 font-semibold transition-colors\"\n          >\n            Try Magic Pencil ✨ →\n          </Link>\n        </div>\n\n        {/* Chat Container */}\n        <div className=\"flex-1 flex flex-col max-w-8xl px-16 mx-auto w-full py-8\">\n          <h1 className=\"text-5xl font-light text-white mb-8\">\n            Turn Waste into Products\n          </h1>\n\n          {/* Messages Area - This is the grown textarea transformed */}\n          <div className=\"flex-1 bg-[#232937] border border-[#4ade80] p-6 mb-4 overflow-y-auto\">\n            <div className=\"space-y-4\">\n              {messages.map((message) => {\n                const shouldAnimate = animatedMessageIds.has(message.id);\n                return (\n                  <div\n                    key={message.id}\n                    className={`flex ${\n                      message.role === \"user\" ? \"justify-end\" : \"justify-start\"\n                    }`}\n                  >\n                    <div\n                      className={`max-w-[70%] px-4 py-3 rounded-lg ${\n                        message.role === \"user\"\n                          ? \"bg-[#4ade80] text-black\"\n                          : \"bg-[#2A3142] text-white\"\n                      }`}\n                      style={\n                        shouldAnimate\n                          ? {\n                              animation:\n                                \"popIn 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55) forwards\",\n                            }\n                          : undefined\n                      }\n                    >\n                      {message.content}\n                    </div>\n                  </div>\n                );\n              })}\n              <div ref={messagesEndRef} />\n            </div>\n          </div>\n\n          {/* Chat Input */}\n          <div\n            className={`transition-all duration-500 ease-out ${\n              animationPhase >= 5\n                ? \"translate-y-0 scale-100 opacity-100\"\n                : \"translate-y-full scale-95 opacity-0\"\n            }`}\n          >\n            <div className=\"flex gap-3 items-end\">\n              <textarea\n                value={chatInput}\n                onChange={(e) => setChatInput(e.target.value)}\n                onKeyDown={(e) => {\n                  if (e.key === \"Enter\" && !e.shiftKey) {\n                    e.preventDefault();\n                    handleSendMessage();\n                  }\n                }}\n                placeholder=\"Continue the conversation...\"\n                className=\"flex-1 bg-[#232937] text-white text-base border border-[#4ade80] p-4 resize-none focus:outline-none focus:border-[#3bc970] transition-colors placeholder:text-gray-500 rounded\"\n                rows={2}\n              />\n              <button\n                onClick={handleSendMessage}\n                disabled={!chatInput.trim()}\n                className=\"px-8 py-4 bg-[#4ade80] hover:bg-[#3bc970] disabled:bg-gray-600 disabled:cursor-not-allowed text-black font-semibold transition-colors uppercase rounded\"\n              >\n                Send\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Initial Form UI\n  return (\n    <div className=\"min-h-screen bg-[#181A25] overflow-hidden\">\n      {/* Header */}\n      <div className=\"p-4 bg-[#1E2433] border-b border-[#2A3142] flex items-center gap-4\">\n        <Image\n          src=\"/logo_text.svg\"\n          alt=\"Orbit\"\n          width={80}\n          height={27}\n          className=\"opacity-90 mr-auto\"\n        />\n        <Link\n          href=\"/poc/trellis\"\n          className=\"text-blue-400 hover:text-blue-300 font-semibold transition-colors\"\n        >\n          Try Trellis 3D Generator →\n        </Link>\n        <Link\n          href=\"/poc/magic-pencil\"\n          className=\"text-purple-400 hover:text-purple-300 font-semibold transition-colors\"\n        >\n          Try Magic Pencil ✨ →\n        </Link>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"max-w-8xl px-16 mx-auto py-16\">\n        {/* Title */}\n        <h1 className=\"text-5xl font-light text-white mb-2\">\n          Turn Waste into Products\n        </h1>\n\n        {/* Input Section */}\n        <div className=\"mt-12 mb-8\">\n          {animationPhase < 2 && (\n            <label className=\"block text-[#4ade80] text-base mb-4 font-mono transition-opacity duration-300\">\n              Describe your waste material\n            </label>\n          )}\n          <div className=\"relative\">\n            <textarea\n              value={prompt}\n              onChange={(e) => setPrompt(e.target.value)}\n              onKeyDown={(e) => {\n                if (e.key === \"Enter\" && e.ctrlKey) {\n                  handleGenerate();\n                }\n              }}\n              placeholder={\n                animationPhase < 2\n                  ? \"Describe what you want to make and what materials you have.\"\n                  : \"\"\n              }\n              style={{\n                height: animationPhase >= 3 ? \"60vh\" : \"10rem\",\n                transition: \"height 800ms cubic-bezier(0.4, 0, 0.2, 1)\",\n              }}\n              className=\"w-full bg-[#232937] text-white text-base border p-5 resize-none focus:outline-none border-[#4ade80] placeholder:text-gray-500\"\n            />\n          </div>\n        </div>\n\n        {/* Generate Button */}\n        {animationPhase < 2 && (\n          <button\n            onClick={handleGenerate}\n            disabled={!prompt.trim() || isGenerating}\n            className=\"w-full bg-[#4ade80] hover:bg-[#3bc970] disabled:bg-gray-600 disabled:cursor-not-allowed text-black py-3 transition-all duration-300 uppercase text-base\"\n          >\n            {isGenerating ? \"GENERATING...\" : \"GENERATE\"}\n          </button>\n        )}\n      </div>\n\n      {/* Examples Section */}\n      {animationPhase < 1 && (\n        <div className=\"max-w-8xl px-16 mx-auto pb-16 transition-all duration-300 ease-out\">\n          <h2 className=\"text-[#4ade80] text-base mb-4 font-mono\">\n            Try these examples\n          </h2>\n          <div className=\"flex justify-between\">\n            {presets.map((example, index) => (\n              <div key={index} onClick={() => handleExampleClick(example.text)}>\n                <PresetCard\n                  title={example.title}\n                  description={example.description}\n                  image={example.icon}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AACA;AANA;;;;;;AAiBe,SAAS;IACtB,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,wPAAQ,EAAC;IACrC,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,wPAAQ,EAAC;IACjD,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,wPAAQ,EAAC;IAC7C,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,wPAAQ,EAAY,EAAE;IACtD,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,wPAAQ,EAAC;IAC3C,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,IAAA,wPAAQ,EAAC;IACrD,MAAM,iBAAiB,IAAA,sPAAM,EAAiB;IAC9C,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,IAAA,wPAAQ,EAC1D,IAAI;IAEN,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,wPAAQ,EAAc;IAC9D,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,IAAA,wPAAQ,EAAe,EAAE;IAEjF,MAAM,UAAU;QACd;YACE,MAAM;YACN,OAAO;YACP,aAAa;YACb,MAAM;QACR;QACA;YACE,MAAM;YACN,OAAO;YACP,aAAa;YACb,MAAM;QACR;QACA;YACE,MAAM;YACN,OAAO;YACP,aAAa;YACb,MAAM;QACR;KACD;IAED,MAAM,iBAAiB;QACrB,eAAe,OAAO,EAAE,eAAe;YAAE,UAAU;QAAS;IAC9D;IAEA,IAAA,yPAAS,EAAC;QACR;IACF,GAAG;QAAC;KAAS;IAEb,MAAM,iBAAiB;QACrB,IAAI,CAAC,OAAO,IAAI,IAAI;QACpB,gBAAgB;QAEhB,MAAM,iBAAiB;QAEvB,qBAAqB;QACrB,uCAAuC;QACvC,kBAAkB;QAElB,WAAW;YACT,uDAAuD;YACvD,kBAAkB;YAClB,UAAU;QACZ,GAAG;QAEH,WAAW;YACT,mCAAmC;YACnC,kBAAkB;QACpB,GAAG;QAEH,WAAW;YACT,qEAAqE;YACrE,kBAAkB;QACpB,GAAG;QAEH,WAAW;YACT,+DAA+D;YAC/D,MAAM,YAAY,KAAK,GAAG,GAAG,QAAQ;YACrC,YAAY;gBACV;oBACE,MAAM;oBACN,SAAS;oBACT,IAAI;gBACN;aACD;YACD,sBAAsB,IAAI,IAAI;gBAAC;aAAU;YACzC,cAAc;YACd,kBAAkB;QACpB,GAAG;QAEH,WAAW;YACT,iDAAiD;YACjD,kBAAkB;YAClB,gBAAgB;YAEhB,4CAA4C;YAC5C,yBAAyB;YACzB,WAAW;gBACT,MAAM,cAAc,CAAC,KAAK,GAAG,KAAK,CAAC,EAAE,QAAQ;gBAC7C,YAAY,CAAC,OAAS;2BACjB;wBACH;4BACE,MAAM;4BACN,SACE;4BACF,IAAI;wBACN;qBACD;gBACD,sBAAsB,CAAC,OAAS,IAAI,IAAI;2BAAI;wBAAM;qBAAY;YAChE,GAAG;QACL,GAAG;IACL;IAEA,MAAM,oBAAoB;QACxB,IAAI,CAAC,UAAU,IAAI,IAAI;QAEvB,MAAM,gBAAgB,KAAK,GAAG,GAAG,QAAQ;QACzC,MAAM,cAAuB;YAC3B,MAAM;YACN,SAAS;YACT,IAAI;QACN;QAEA,YAAY,CAAC,OAAS;mBAAI;gBAAM;aAAY;QAC5C,sBAAsB,CAAC,OAAS,IAAI,IAAI;mBAAI;gBAAM;aAAc;QAChE,aAAa;QAEb,8BAA8B;QAC9B,WAAW;YACT,MAAM,cAAc,CAAC,KAAK,GAAG,KAAK,CAAC,EAAE,QAAQ;YAC7C,YAAY,CAAC,OAAS;uBACjB;oBACH;wBACE,MAAM;wBACN,SACE;wBACF,IAAI;oBACN;iBACD;YACD,sBAAsB,CAAC,OAAS,IAAI,IAAI;uBAAI;oBAAM;iBAAY;QAChE,GAAG;IACL;IAEA,MAAM,qBAAqB,CAAC;QAC1B,UAAU;IACZ;IAEA,IAAI,YAAY;QACd,iBAAiB;QACjB,qBACE,qRAAC;YAAI,WAAU;;8BAEb,qRAAC;oBAAI,WAAU;;sCACb,qRAAC,+KAAK;4BACJ,KAAI;4BACJ,KAAI;4BACJ,OAAO;4BACP,QAAQ;4BACR,WAAU;;;;;;sCAEZ,qRAAC,8MAAI;4BACH,MAAK;4BACL,WAAU;sCACX;;;;;;sCAGD,qRAAC,8MAAI;4BACH,MAAK;4BACL,WAAU;sCACX;;;;;;;;;;;;8BAMH,qRAAC;oBAAI,WAAU;;sCACb,qRAAC;4BAAG,WAAU;sCAAsC;;;;;;sCAKpD,qRAAC;4BAAI,WAAU;sCACb,cAAA,qRAAC;gCAAI,WAAU;;oCACZ,SAAS,GAAG,CAAC,CAAC;wCACb,MAAM,gBAAgB,mBAAmB,GAAG,CAAC,QAAQ,EAAE;wCACvD,qBACE,qRAAC;4CAEC,WAAW,CAAC,KAAK,EACf,QAAQ,IAAI,KAAK,SAAS,gBAAgB,iBAC1C;sDAEF,cAAA,qRAAC;gDACC,WAAW,CAAC,iCAAiC,EAC3C,QAAQ,IAAI,KAAK,SACb,4BACA,2BACJ;gDACF,OACE,gBACI;oDACE,WACE;gDACJ,IACA;0DAGL,QAAQ,OAAO;;;;;;2CApBb,QAAQ,EAAE;;;;;oCAwBrB;kDACA,qRAAC;wCAAI,KAAK;;;;;;;;;;;;;;;;;sCAKd,qRAAC;4BACC,WAAW,CAAC,qCAAqC,EAC/C,kBAAkB,IACd,wCACA,uCACJ;sCAEF,cAAA,qRAAC;gCAAI,WAAU;;kDACb,qRAAC;wCACC,OAAO;wCACP,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;wCAC5C,WAAW,CAAC;4CACV,IAAI,EAAE,GAAG,KAAK,WAAW,CAAC,EAAE,QAAQ,EAAE;gDACpC,EAAE,cAAc;gDAChB;4CACF;wCACF;wCACA,aAAY;wCACZ,WAAU;wCACV,MAAM;;;;;;kDAER,qRAAC;wCACC,SAAS;wCACT,UAAU,CAAC,UAAU,IAAI;wCACzB,WAAU;kDACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAQb;IAEA,kBAAkB;IAClB,qBACE,qRAAC;QAAI,WAAU;;0BAEb,qRAAC;gBAAI,WAAU;;kCACb,qRAAC,+KAAK;wBACJ,KAAI;wBACJ,KAAI;wBACJ,OAAO;wBACP,QAAQ;wBACR,WAAU;;;;;;kCAEZ,qRAAC,8MAAI;wBACH,MAAK;wBACL,WAAU;kCACX;;;;;;kCAGD,qRAAC,8MAAI;wBACH,MAAK;wBACL,WAAU;kCACX;;;;;;;;;;;;0BAMH,qRAAC;gBAAI,WAAU;;kCAEb,qRAAC;wBAAG,WAAU;kCAAsC;;;;;;kCAKpD,qRAAC;wBAAI,WAAU;;4BACZ,iBAAiB,mBAChB,qRAAC;gCAAM,WAAU;0CAAgF;;;;;;0CAInG,qRAAC;gCAAI,WAAU;0CACb,cAAA,qRAAC;oCACC,OAAO;oCACP,UAAU,CAAC,IAAM,UAAU,EAAE,MAAM,CAAC,KAAK;oCACzC,WAAW,CAAC;wCACV,IAAI,EAAE,GAAG,KAAK,WAAW,EAAE,OAAO,EAAE;4CAClC;wCACF;oCACF;oCACA,aACE,iBAAiB,IACb,gEACA;oCAEN,OAAO;wCACL,QAAQ,kBAAkB,IAAI,SAAS;wCACvC,YAAY;oCACd;oCACA,WAAU;;;;;;;;;;;;;;;;;oBAMf,iBAAiB,mBAChB,qRAAC;wBACC,SAAS;wBACT,UAAU,CAAC,OAAO,IAAI,MAAM;wBAC5B,WAAU;kCAET,eAAe,kBAAkB;;;;;;;;;;;;YAMvC,iBAAiB,mBAChB,qRAAC;gBAAI,WAAU;;kCACb,qRAAC;wBAAG,WAAU;kCAA0C;;;;;;kCAGxD,qRAAC;wBAAI,WAAU;kCACZ,QAAQ,GAAG,CAAC,CAAC,SAAS,sBACrB,qRAAC;gCAAgB,SAAS,IAAM,mBAAmB,QAAQ,IAAI;0CAC7D,cAAA,qRAAC,2KAAU;oCACT,OAAO,QAAQ,KAAK;oCACpB,aAAa,QAAQ,WAAW;oCAChC,OAAO,QAAQ,IAAI;;;;;;+BAJb;;;;;;;;;;;;;;;;;;;;;;AAaxB","debugId":null}}]
}