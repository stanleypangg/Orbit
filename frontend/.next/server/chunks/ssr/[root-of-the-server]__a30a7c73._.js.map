{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///Users/cute/Documents/vsc/HTV/frontend/lib/chat/useChat.ts"],"sourcesContent":["\"use client\";\n\nimport { useState, useRef, useCallback } from 'react';\nimport { ChatMessage, ChatOptions, StreamEvent } from './types';\n\ninterface UseChatOptions {\n  apiUrl?: string;\n  initialMessages?: ChatMessage[];\n  options?: ChatOptions;\n}\n\ninterface UseChatReturn {\n  messages: ChatMessage[];\n  input: string;\n  isStreaming: boolean;\n  error: string | null;\n  setInput: (input: string) => void;\n  send: (text?: string) => Promise<void>;\n  clearError: () => void;\n}\n\n/**\n * Hook for managing chat state and streaming lifecycle.\n * Handles optimistic updates, SSE streaming, and error states.\n */\nexport function useChat({\n  apiUrl = 'http://localhost:8000/api/chat',\n  initialMessages = [],\n  options = {},\n}: UseChatOptions = {}): UseChatReturn {\n  const [messages, setMessages] = useState<ChatMessage[]>(initialMessages);\n  const [input, setInput] = useState('');\n  const [isStreaming, setIsStreaming] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const abortControllerRef = useRef<AbortController | null>(null);\n\n  const clearError = useCallback(() => {\n    setError(null);\n  }, []);\n\n  const send = useCallback(async (text?: string) => {\n    const messageText = text ?? input;\n    \n    if (!messageText.trim() || isStreaming) {\n      return;\n    }\n\n    // Clear previous errors\n    setError(null);\n\n    // Create user message\n    const userMessage: ChatMessage = {\n      id: `user-${Date.now()}`,\n      role: 'user',\n      content: messageText.trim(),\n    };\n\n    // Optimistically add user message\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setIsStreaming(true);\n\n    // Create assistant message placeholder\n    const assistantMessage: ChatMessage = {\n      id: `assistant-${Date.now()}`,\n      role: 'assistant',\n      content: '',\n    };\n\n    setMessages(prev => [...prev, assistantMessage]);\n\n    // Prepare abort controller\n    abortControllerRef.current = new AbortController();\n\n    try {\n      // Prepare request payload\n      const requestPayload = {\n        messages: [...messages, userMessage],\n        options: {\n          temperature: options.temperature ?? 0.7,\n          max_tokens: options.maxTokens ?? 1024,\n          system_prompt: options.systemPrompt,\n        },\n      };\n\n      // Make streaming request\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(requestPayload),\n        signal: abortControllerRef.current.signal,\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      if (!response.body) {\n        throw new Error('No response body');\n      }\n\n      // Read SSE stream\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder();\n      let buffer = '';\n      let assistantContent = '';\n\n      while (true) {\n        const { done, value } = await reader.read();\n        \n        if (done) {\n          break;\n        }\n\n        // Decode chunk and add to buffer\n        buffer += decoder.decode(value, { stream: true });\n\n        // Process complete SSE events\n        const lines = buffer.split('\\n');\n        buffer = lines.pop() || ''; // Keep incomplete line in buffer\n\n        for (const line of lines) {\n          if (line.startsWith('data: ')) {\n            const data = line.slice(6); // Remove 'data: ' prefix\n            \n            try {\n              const event: StreamEvent = JSON.parse(data);\n\n              if (event.error) {\n                throw new Error(event.error.message);\n              }\n\n              if (event.delta) {\n                // Append token to assistant message\n                assistantContent += event.delta;\n                setMessages(prev => {\n                  const updated = [...prev];\n                  const lastMessage = updated[updated.length - 1];\n                  if (lastMessage.role === 'assistant') {\n                    lastMessage.content = assistantContent;\n                  }\n                  return updated;\n                });\n              }\n\n              if (event.done) {\n                break;\n              }\n            } catch (e) {\n              console.error('Failed to parse SSE event:', e);\n            }\n          }\n        }\n      }\n\n    } catch (err: any) {\n      // Handle errors\n      if (err.name === 'AbortError') {\n        setError('Request cancelled');\n      } else {\n        setError(err.message || 'An error occurred while sending message');\n      }\n\n      // Remove incomplete assistant message on error\n      setMessages(prev => {\n        const updated = [...prev];\n        const lastMessage = updated[updated.length - 1];\n        if (lastMessage.role === 'assistant' && !lastMessage.content) {\n          updated.pop();\n        }\n        return updated;\n      });\n\n      console.error('Chat error:', err);\n    } finally {\n      setIsStreaming(false);\n      abortControllerRef.current = null;\n    }\n  }, [input, messages, isStreaming, apiUrl, options]);\n\n  return {\n    messages,\n    input,\n    isStreaming,\n    error,\n    setInput,\n    send,\n    clearError,\n  };\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 178, "column": 0}, "map": {"version":3,"sources":["file:///Users/cute/Documents/vsc/HTV/frontend/components/Chat.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useRef, KeyboardEvent } from 'react';\nimport { useChat } from '@/lib/chat/useChat';\nimport { ChatMessage as ChatMessageType } from '@/lib/chat/types';\n\ninterface ChatProps {\n  initialMessages?: ChatMessageType[];\n  onSend?: (text: string) => void;\n  systemPrompt?: string;\n}\n\n/**\n * Minimal chat UI component with streaming support.\n * Features:\n * - Message list with user/assistant bubbles\n * - Textarea input with Enter to send, Shift+Enter for newline\n * - Loading state and error handling\n * - Auto-scroll as tokens arrive\n * - Accessible with proper ARIA labels\n */\nexport function Chat({ initialMessages, onSend, systemPrompt }: ChatProps) {\n  const { messages, input, isStreaming, error, setInput, send, clearError } = useChat({\n    initialMessages,\n    options: { systemPrompt },\n  });\n\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n\n  // Auto-scroll to bottom when new messages arrive\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  // Focus textarea on mount\n  useEffect(() => {\n    textareaRef.current?.focus();\n  }, []);\n\n  const handleKeyDown = (e: KeyboardEvent<HTMLTextAreaElement>) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n\n  const handleSend = async () => {\n    if (input.trim() && !isStreaming) {\n      const text = input;\n      await send(text);\n      onSend?.(text);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col h-full max-w-4xl mx-auto\">\n      {/* Header */}\n      <div className=\"flex-none px-6 py-4 border-b border-gray-200\">\n        <h1 className=\"text-2xl font-semibold text-gray-900\">Chat</h1>\n        <p className=\"text-sm text-gray-500 mt-1\">Ask me anything</p>\n      </div>\n\n      {/* Messages area */}\n      <div className=\"flex-1 overflow-y-auto px-6 py-4 space-y-4\">\n        {messages.length === 0 && (\n          <div className=\"text-center text-gray-400 mt-12\">\n            <p className=\"text-lg\">Start a conversation</p>\n            <p className=\"text-sm mt-2\">Type a message below to begin</p>\n          </div>\n        )}\n\n        {messages.map((message, index) => (\n          <MessageBubble\n            key={message.id || index}\n            message={message}\n            isStreaming={isStreaming && index === messages.length - 1}\n          />\n        ))}\n\n        {error && (\n          <div className=\"flex justify-center\">\n            <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-lg max-w-lg\">\n              <div className=\"flex items-start\">\n                <span className=\"text-sm\">{error}</span>\n                <button\n                  onClick={clearError}\n                  className=\"ml-auto pl-3 text-red-500 hover:text-red-700\"\n                  aria-label=\"Dismiss error\"\n                >\n                  ×\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div ref={messagesEndRef} />\n      </div>\n\n      {/* Input area */}\n      <div className=\"flex-none border-t border-gray-200 px-6 py-4\">\n        <div className=\"flex gap-3\">\n          <div className=\"flex-1 relative\">\n            <textarea\n              ref={textareaRef}\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              onKeyDown={handleKeyDown}\n              disabled={isStreaming}\n              placeholder=\"Type your message... (Enter to send, Shift+Enter for new line)\"\n              className=\"w-full px-4 py-3 border border-gray-300 rounded-lg resize-none focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:bg-gray-50 disabled:text-gray-500\"\n              rows={3}\n              aria-label=\"Chat message input\"\n            />\n          </div>\n          <button\n            onClick={handleSend}\n            disabled={!input.trim() || isStreaming}\n            className=\"px-6 py-3 bg-blue-600 text-white rounded-lg font-medium hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\"\n            aria-label=\"Send message\"\n          >\n            {isStreaming ? (\n              <span className=\"flex items-center gap-2\">\n                <Spinner />\n                Sending...\n              </span>\n            ) : (\n              'Send'\n            )}\n          </button>\n        </div>\n        <p className=\"text-xs text-gray-400 mt-2\">\n          Press Enter to send, Shift+Enter for new line\n        </p>\n      </div>\n    </div>\n  );\n}\n\ninterface MessageBubbleProps {\n  message: ChatMessageType;\n  isStreaming: boolean;\n}\n\nfunction MessageBubble({ message, isStreaming }: MessageBubbleProps) {\n  const isUser = message.role === 'user';\n\n  return (\n    <div className={`flex ${isUser ? 'justify-end' : 'justify-start'}`}>\n      <div\n        className={`max-w-[70%] rounded-lg px-4 py-3 ${\n          isUser\n            ? 'bg-blue-600 text-white'\n            : 'bg-gray-100 text-gray-900'\n        }`}\n        role=\"article\"\n        aria-label={`${message.role} message`}\n      >\n        {/* Role label */}\n        <div className={`text-xs font-semibold mb-1 ${isUser ? 'text-blue-100' : 'text-gray-500'}`}>\n          {message.role === 'user' ? 'You' : 'Assistant'}\n        </div>\n\n        {/* Message content */}\n        <div\n          className=\"whitespace-pre-wrap break-words\"\n          aria-live={isStreaming ? 'polite' : 'off'}\n        >\n          {message.content || (isStreaming && <Spinner />)}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Spinner() {\n  return (\n    <svg\n      className=\"animate-spin h-4 w-4 inline-block\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      aria-hidden=\"true\"\n    >\n      <circle\n        className=\"opacity-25\"\n        cx=\"12\"\n        cy=\"12\"\n        r=\"10\"\n        stroke=\"currentColor\"\n        strokeWidth=\"4\"\n      />\n      <path\n        className=\"opacity-75\"\n        fill=\"currentColor\"\n        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n      />\n    </svg>\n  );\n}\n\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAqBO,SAAS,KAAK,EAAE,eAAe,EAAE,MAAM,EAAE,YAAY,EAAa;IACvE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,IAAA,wKAAO,EAAC;QAClF;QACA,SAAS;YAAE;QAAa;IAC1B;IAEA,MAAM,iBAAiB,IAAA,sPAAM,EAAiB;IAC9C,MAAM,cAAc,IAAA,sPAAM,EAAsB;IAEhD,iDAAiD;IACjD,IAAA,yPAAS,EAAC;QACR,eAAe,OAAO,EAAE,eAAe;YAAE,UAAU;QAAS;IAC9D,GAAG;QAAC;KAAS;IAEb,0BAA0B;IAC1B,IAAA,yPAAS,EAAC;QACR,YAAY,OAAO,EAAE;IACvB,GAAG,EAAE;IAEL,MAAM,gBAAgB,CAAC;QACrB,IAAI,EAAE,GAAG,KAAK,WAAW,CAAC,EAAE,QAAQ,EAAE;YACpC,EAAE,cAAc;YAChB;QACF;IACF;IAEA,MAAM,aAAa;QACjB,IAAI,MAAM,IAAI,MAAM,CAAC,aAAa;YAChC,MAAM,OAAO;YACb,MAAM,KAAK;YACX,SAAS;QACX;IACF;IAEA,qBACE,qRAAC;QAAI,WAAU;;0BAEb,qRAAC;gBAAI,WAAU;;kCACb,qRAAC;wBAAG,WAAU;kCAAuC;;;;;;kCACrD,qRAAC;wBAAE,WAAU;kCAA6B;;;;;;;;;;;;0BAI5C,qRAAC;gBAAI,WAAU;;oBACZ,SAAS,MAAM,KAAK,mBACnB,qRAAC;wBAAI,WAAU;;0CACb,qRAAC;gCAAE,WAAU;0CAAU;;;;;;0CACvB,qRAAC;gCAAE,WAAU;0CAAe;;;;;;;;;;;;oBAI/B,SAAS,GAAG,CAAC,CAAC,SAAS,sBACtB,qRAAC;4BAEC,SAAS;4BACT,aAAa,eAAe,UAAU,SAAS,MAAM,GAAG;2BAFnD,QAAQ,EAAE,IAAI;;;;;oBAMtB,uBACC,qRAAC;wBAAI,WAAU;kCACb,cAAA,qRAAC;4BAAI,WAAU;sCACb,cAAA,qRAAC;gCAAI,WAAU;;kDACb,qRAAC;wCAAK,WAAU;kDAAW;;;;;;kDAC3B,qRAAC;wCACC,SAAS;wCACT,WAAU;wCACV,cAAW;kDACZ;;;;;;;;;;;;;;;;;;;;;;kCAQT,qRAAC;wBAAI,KAAK;;;;;;;;;;;;0BAIZ,qRAAC;gBAAI,WAAU;;kCACb,qRAAC;wBAAI,WAAU;;0CACb,qRAAC;gCAAI,WAAU;0CACb,cAAA,qRAAC;oCACC,KAAK;oCACL,OAAO;oCACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;oCACxC,WAAW;oCACX,UAAU;oCACV,aAAY;oCACZ,WAAU;oCACV,MAAM;oCACN,cAAW;;;;;;;;;;;0CAGf,qRAAC;gCACC,SAAS;gCACT,UAAU,CAAC,MAAM,IAAI,MAAM;gCAC3B,WAAU;gCACV,cAAW;0CAEV,4BACC,qRAAC;oCAAK,WAAU;;sDACd,qRAAC;;;;;wCAAU;;;;;;2CAIb;;;;;;;;;;;;kCAIN,qRAAC;wBAAE,WAAU;kCAA6B;;;;;;;;;;;;;;;;;;AAMlD;AAOA,SAAS,cAAc,EAAE,OAAO,EAAE,WAAW,EAAsB;IACjE,MAAM,SAAS,QAAQ,IAAI,KAAK;IAEhC,qBACE,qRAAC;QAAI,WAAW,CAAC,KAAK,EAAE,SAAS,gBAAgB,iBAAiB;kBAChE,cAAA,qRAAC;YACC,WAAW,CAAC,iCAAiC,EAC3C,SACI,2BACA,6BACJ;YACF,MAAK;YACL,cAAY,GAAG,QAAQ,IAAI,CAAC,QAAQ,CAAC;;8BAGrC,qRAAC;oBAAI,WAAW,CAAC,2BAA2B,EAAE,SAAS,kBAAkB,iBAAiB;8BACvF,QAAQ,IAAI,KAAK,SAAS,QAAQ;;;;;;8BAIrC,qRAAC;oBACC,WAAU;oBACV,aAAW,cAAc,WAAW;8BAEnC,QAAQ,OAAO,IAAK,6BAAe,qRAAC;;;;;;;;;;;;;;;;;;;;;AAK/C;AAEA,SAAS;IACP,qBACE,qRAAC;QACC,WAAU;QACV,OAAM;QACN,MAAK;QACL,SAAQ;QACR,eAAY;;0BAEZ,qRAAC;gBACC,WAAU;gBACV,IAAG;gBACH,IAAG;gBACH,GAAE;gBACF,QAAO;gBACP,aAAY;;;;;;0BAEd,qRAAC;gBACC,WAAU;gBACV,MAAK;gBACL,GAAE;;;;;;;;;;;;AAIV","debugId":null}}]
}