{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///Users/cute/Documents/vsc/HTV/frontend/components/PresetCard.tsx"],"sourcesContent":["import Image from \"next/image\";\n\ninterface PresetCardProps {\n  title: string;\n  description: string;\n  image: string;\n}\n\nexport default function PresetCard({\n  title,\n  description,\n  image,\n}: PresetCardProps) {\n  return (\n    <div className=\"w-[413px] h-[188px] flex flex-col items-center justify-center bg-[#2a3038] border-[0.5px] border-solid border-[#67b68b] relative\">\n      <div className=\"flex w-[35px] h-[33px] items-center justify-center absolute top-[50px] rounded-[2.92px] border border-solid border-[#67b68b]\">\n        <Image\n          className=\"relative\"\n          alt=\"Vector\"\n          src={image}\n          width={16}\n          height={11}\n        />\n      </div>\n      <p className=\"font-menlo font-normal text-neutral-100 text-[17px] text-center tracking-[0] leading-5 mt-8 px-8\">\n        {title}\n        <br />\n        {description}\n      </p>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAA;;;AAQe,SAAS,WAAW,EACjC,KAAK,EACL,WAAW,EACX,KAAK,EACW;IAChB,qBACE,qRAAC;QAAI,WAAU;;0BACb,qRAAC;gBAAI,WAAU;0BACb,cAAA,qRAAC,+KAAK;oBACJ,WAAU;oBACV,KAAI;oBACJ,KAAK;oBACL,OAAO;oBACP,QAAQ;;;;;;;;;;;0BAGZ,qRAAC;gBAAE,WAAU;;oBACV;kCACD,qRAAC;;;;;oBACA;;;;;;;;;;;;;AAIT","debugId":null}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["file:///Users/cute/Documents/vsc/HTV/frontend/lib/chat/schemas-and-prompts.ts"],"sourcesContent":["// schemas-and-prompts.ts\n\n// ---------------\n// Base INGREDIENT_SCHEMA (unchanged)\n// ---------------\nexport const INGREDIENT_SCHEMA = {\n  type: \"object\",\n  properties: {\n    ingredients: {\n      type: \"array\",\n      items: {\n        type: \"object\",\n        properties: {\n          name: { type: [\"string\", \"null\"] },\n          size: { type: [\"string\", \"null\"] },\n          material: { type: [\"string\", \"null\"] },\n          category: { type: [\"string\", \"null\"] },\n          condition: { type: [\"string\", \"null\"] },\n          confidence: { type: \"number\", minimum: 0, maximum: 1 }\n        },\n        required: [\"name\", \"size\", \"material\"]\n      }\n    },\n    confidence: { type: \"number\", minimum: 0, maximum: 1 },\n    needs_clarification: { type: \"boolean\" }\n  },\n  required: [\"ingredients\", \"confidence\", \"needs_clarification\"]\n} as const;\n\n// ---------------\n// Requirements Loop Schema\n// ---------------\nexport const REQUIREMENTS_SCHEMA = {\n  type: \"object\",\n  properties: {\n    ingredients: INGREDIENT_SCHEMA.properties.ingredients,\n    confidence: { type: \"number\", minimum: 0, maximum: 1 },\n    needs_clarification: { type: \"boolean\" },\n    clarifying_questions: {\n      type: \"array\",\n      items: { type: \"string\" }\n    },\n    assumptions: {\n      type: \"array\",\n      items: { type: \"string\" }\n    }\n  },\n  required: [\"ingredients\", \"confidence\", \"needs_clarification\"]\n} as const;\n\n// ---------------\n// 1) Phase-1 response schema (superset of INGREDIENT_SCHEMA)\n//    - Reuses all INGREDIENT_SCHEMA properties and required\n//    - Adds ideas[] and optional clarifying_questions[]\n// ---------------\nexport const PHASE1_SCHEMA = {\n  type: \"object\",\n  properties: {\n    ...INGREDIENT_SCHEMA.properties,\n    clarifying_questions: {\n      type: \"array\",\n      items: { type: \"string\" }\n    },\n    ideas: {\n      type: \"array\",\n      items: {\n        type: \"object\",\n        properties: {\n          id: { type: \"string\" },\n          title: { type: \"string\" },\n          one_liner: { type: \"string\" }\n        },\n        required: [\"id\", \"title\", \"one_liner\"]\n      },\n      minItems: 3,\n      maxItems: 5\n    }\n  },\n  required: [\n    ...INGREDIENT_SCHEMA.required, // \"ingredients\",\"confidence\",\"needs_clarification\"\n    \"ideas\"\n  ]\n} as const;\n\n// ---------------\n// Ideation Drafts Schema\n// ---------------\nexport const IDEATION_DRAFTS_SCHEMA = {\n  type: \"object\",\n  properties: {\n    drafts: {\n      type: \"array\",\n      items: {\n        type: \"object\",\n        properties: {\n          id: { type: \"string\" },\n          name: { type: \"string\" },\n          one_liner: { type: \"string\" },\n          assumptions: {\n            type: \"array\",\n            items: { type: \"string\" }\n          },\n          draft_image: {\n            type: \"object\",\n            properties: {\n              url: { type: \"string\" },\n              seed: { type: [\"number\", \"null\"] },\n              notes: { type: \"string\" }\n            }\n          }\n        },\n        required: [\"id\", \"name\", \"one_liner\"]\n      },\n      minItems: 3,\n      maxItems: 3\n    }\n  },\n  required: [\"drafts\"]\n} as const;\n\n// ---------------\n// Refined Brief Schema\n// ---------------\nexport const REFINED_BRIEF_SCHEMA = {\n  type: \"object\",\n  properties: {\n    idea_id: { type: \"string\" },\n    prompt: { type: \"string\" },\n    negative_prompt: { type: \"string\" },\n    camera: {\n      type: \"object\",\n      properties: {\n        view: { type: \"string\", enum: [\"front\", \"three-quarter\", \"top\", \"detail\"] }\n      },\n      required: [\"view\"]\n    },\n    lighting: { type: \"string\" },\n    background: { type: \"string\" },\n    render: {\n      type: \"object\",\n      properties: {\n        count: { type: \"integer\", minimum: 1, maximum: 1 },\n        aspect_ratio: { type: \"string\" },\n        image_size: { type: \"string\" },\n        seed: { type: [\"integer\", \"null\"] }\n      },\n      required: [\"count\", \"aspect_ratio\", \"image_size\"]\n    },\n    acceptance_criteria: {\n      type: \"array\",\n      items: { type: \"string\" }\n    }\n  },\n  required: [\"idea_id\", \"prompt\", \"camera\", \"render\"]\n} as const;\n\n// ---------------\n// 2) Phase-2 Imaging Brief schema (Legacy - for backward compatibility)\n// ---------------\nexport const IMAGING_BRIEF_SCHEMA = {\n  type: \"object\",\n  properties: {\n    idea_id: { type: \"string\" },\n    prompt: { type: \"string\" },\n    negative_prompt: { type: \"string\" },\n    camera: {\n      type: \"object\",\n      properties: {\n        view: { type: \"string\", enum: [\"front\", \"three-quarter\", \"top\", \"detail\"] },\n        focal_length_mm: { type: \"number\" },\n        aperture_f: { type: \"number\" },\n        distance_m: { type: \"number\" }\n      },\n      required: [\"view\"]\n    },\n    lighting: { type: \"string\" },\n    background: { type: \"string\" },\n    constraints: {\n      type: \"object\",\n      properties: {\n        materials_must_match: { type: \"boolean\" },\n        show_construction_details: { type: \"boolean\" },\n        show_scale_reference: { type: \"boolean\" }\n      }\n    },\n    render: {\n      type: \"object\",\n      properties: {\n        aspect_ratio: { type: \"string\", enum: [\"1:1\",\"4:3\",\"3:4\",\"16:9\",\"9:16\"], default: \"1:1\" },\n        image_size: { type: \"string\", enum: [\"1K\",\"2K\"], default: \"1K\" },\n        count: { type: \"integer\", minimum: 1, maximum: 4, default: 4 },\n        seed: { type: [\"integer\",\"null\"] }\n      },\n      required: [\"aspect_ratio\",\"count\"]\n    },\n    acceptance_criteria: { type: \"array\", items: { type: \"string\" } },\n    assumptions: { type: \"array\", items: { type: \"string\" } },\n    needs_clarification: { type: \"boolean\" },\n    clarifying_questions: { type: \"array\", items: { type: \"string\" } }\n  },\n  required: [\"idea_id\",\"prompt\",\"render\"]\n} as const;\n\n// ---------------\n// System prompts\n// ---------------\n\nexport const REQUIREMENTS_SYSTEM_PROMPT = `\nYou extract DIY requirements and fill a standardized ingredients schema.\nOutput ONLY valid JSON that matches the provided responseSchema.\n\nRules:\n1) Populate \"ingredients\" from user text. Keep strings short and literal.\n2) If any essential field is unknown:\n   - If it is safe to infer and confidence ≥ 0.6, fill it and add a plain-language entry to \"assumptions\".\n   - If it is safety-related or confidence < 0.6, set \"needs_clarification\": true and include up to 3 concise \"clarifying_questions\".\n3) Set an overall \"confidence\" in [0,1].\n4) No commentary outside fields.\n`.trim();\n\nexport const IDEATION_SYSTEM_PROMPT = `\nYou propose 3 distinct DIY ideas and return general, less-refined imaging briefs for each. Output ONLY valid JSON.\n\nRules:\n1) Ideas must be materially faithful to PROJECT_CONTEXT.ingredients.\n2) Return:\n   {\n     \"drafts\": [{ \"id\",\"name\",\"one_liner\",\"assumptions\":[] }, x3],\n     \"imaging_briefs\": [{\n       \"draft_id\",\"prompt\",\"negative_prompt\",\n       \"render\":{\"count\":1,\"aspect_ratio\":\"1:1\"},\n       \"notes\":\"why this view helps\"\n     }, x3]\n   }\n3) Keep prompts general and literal. Do not over-style. These are visual aids.\n4) No commentary outside JSON.\n`.trim();\n\nexport const REFINED_BRIEF_SYSTEM_PROMPT = `\nYou create ONE refined brief for the selected idea. Output ONLY valid JSON.\n\nRules:\n1) Use PROJECT_CONTEXT (including chosen_idea) to produce a crisp, reproducible prompt that matches the materials.\n2) Provide camera, lighting, background, render, and acceptance_criteria as short fields.\n3) Keep seed null unless reproducibility is requested.\n`.trim();\n\n// Legacy system prompts (for backward compatibility)\nexport const PHASE1_SYSTEM_PROMPT = `\nYou extract DIY upcycling requirements and propose ideas.\nOutput ONLY valid JSON that follows the provided responseSchema.\n\nRules:\n1) Populate \"ingredients\" from the user's materials using short, literal strings. \n2) Set an overall \"confidence\" in [0,1]. If any essential field is < 0.6 confidence, set \"needs_clarification\": true and propose up to 3 concise \"clarifying_questions\".\n3) Propose 3–5 distinct \"ideas\" with id, title, and a one-liner. Do not include step-by-step instructions here.\n4) Prefer common tools/materials when unspecified. Do not include unsafe actions. \n5) No commentary outside JSON fields.\n`.trim();\n\nexport const PHASE2_SYSTEM_PROMPT = `\nYou are a rendering director. Output ONLY valid JSON that follows the responseSchema.\n\nInput: chosen idea, ingredients, user tweaks, and optional prior feedback.\nTasks:\n1) Produce an \"Imaging Brief\" that can be sent directly to the image model.\n2) If any critical visual detail is ambiguous, set \"needs_clarification\": true and propose up to 3 \"clarifying_questions\".\n3) Keep \"prompt\" concise and literal. Avoid commentary.\n4) If feedback is provided, revise the brief to address it while staying faithful to the materials and chosen idea.\n5) Keep or change \"seed\" only if the user requests reproducibility or variation, respectively.\n`.trim();\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 570, "column": 0}, "map": {"version":3,"sources":["file:///Users/cute/Documents/vsc/HTV/frontend/lib/chat/validator-and-calls.ts"],"sourcesContent":["// validator-and-calls.ts\n\nimport Ajv from \"ajv\";\nimport addFormats from \"ajv-formats\";\nimport {\n  PHASE1_SCHEMA,\n  IMAGING_BRIEF_SCHEMA,\n} from \"./schemas-and-prompts\";\n\nconst ajv = new Ajv({ allErrors: true, strict: false });\naddFormats(ajv);\n\nconst validatePhase1 = ajv.compile(PHASE1_SCHEMA);\nconst validateBrief = ajv.compile(IMAGING_BRIEF_SCHEMA);\n\ntype Validation<T> = { ok: true; value: T } | { ok: false; errors: string[] };\n\nexport function validateJson<T>(data: unknown, kind: \"phase1\" | \"brief\"): Validation<T> {\n  const validate = kind === \"phase1\" ? validatePhase1 : validateBrief;\n  const ok = validate(data);\n  if (ok) return { ok: true, value: data as T };\n  const errors = (validate.errors || []).map((e: any) => `${e.instancePath || \"(root)\"} ${e.message}`);\n  return { ok: false, errors };\n}\n\n// ---------- Backend API calls ----------\n\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8000';\n\nexport async function callPhase1(userTextOrObj: string | object) {\n  const input = typeof userTextOrObj === \"string\" ? { text: userTextOrObj } : userTextOrObj;\n  \n  const response = await fetch(`${API_BASE_URL}/api/chat/phase1`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(input),\n  });\n\n  if (!response.ok) {\n    throw new Error(`Phase 1 API error: ${response.status} ${response.statusText}`);\n  }\n\n  return await response.json();\n}\n\nexport async function callPhase2(payload: {\n  ideaId: string;\n  ingredients: unknown;\n  tweaks?: Record<string, any>;\n  previousBrief?: unknown;\n  feedback?: unknown;\n}) {\n  const response = await fetch(`${API_BASE_URL}/api/chat/phase2`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(payload),\n  });\n\n  if (!response.ok) {\n    throw new Error(`Phase 2 API error: ${response.status} ${response.statusText}`);\n  }\n\n  return await response.json();\n}\n\n// ---------- Chatbot-friendly handlers (minimal) ----------\n\n export async function handlePhase1(input: string) {\n  const raw = await callPhase1(input);\n  const v = validateJson<typeof raw>(raw, \"phase1\");\n  if (v.ok) return v.value;\n\n  // If validation fails, throw error with details\n  throw new Error(`Phase1 validation failed: ${v.errors.join(\"; \")}`);\n}\n\nexport async function handlePhase2(phase2Input: {\n  ideaId: string;\n  ingredients: unknown;\n  tweaks?: Record<string, any>;\n  previousBrief?: unknown;\n  feedback?: unknown;\n}) {\n  const raw = await callPhase2(phase2Input);\n  const v = validateJson<typeof raw>(raw, \"brief\");\n  if (v.ok) return v.value;\n\n  // If validation fails, throw error with details\n  throw new Error(`Phase2 validation failed: ${v.errors.join(\"; \")}`);\n}\n"],"names":[],"mappings":"AAAA,yBAAyB;;;;;;;;;;;;;AAEzB;AACA;AACA;;;;AAKA,MAAM,MAAM,IAAI,oLAAG,CAAC;IAAE,WAAW;IAAM,QAAQ;AAAM;AACrD,IAAA,iMAAU,EAAC;AAEX,MAAM,iBAAiB,IAAI,OAAO,CAAC,gMAAa;AAChD,MAAM,gBAAgB,IAAI,OAAO,CAAC,uMAAoB;AAI/C,SAAS,aAAgB,IAAa,EAAE,IAAwB;IACrE,MAAM,WAAW,SAAS,WAAW,iBAAiB;IACtD,MAAM,KAAK,SAAS;IACpB,IAAI,IAAI,OAAO;QAAE,IAAI;QAAM,OAAO;IAAU;IAC5C,MAAM,SAAS,CAAC,SAAS,MAAM,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,IAAW,GAAG,EAAE,YAAY,IAAI,SAAS,CAAC,EAAE,EAAE,OAAO,EAAE;IACnG,OAAO;QAAE,IAAI;QAAO;IAAO;AAC7B;AAEA,0CAA0C;AAE1C,MAAM,eAAe,QAAQ,GAAG,CAAC,mBAAmB,IAAI;AAEjD,eAAe,WAAW,aAA8B;IAC7D,MAAM,QAAQ,OAAO,kBAAkB,WAAW;QAAE,MAAM;IAAc,IAAI;IAE5E,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,gBAAgB,CAAC,EAAE;QAC9D,QAAQ;QACR,SAAS;YACP,gBAAgB;QAClB;QACA,MAAM,KAAK,SAAS,CAAC;IACvB;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM,CAAC,mBAAmB,EAAE,SAAS,MAAM,CAAC,CAAC,EAAE,SAAS,UAAU,EAAE;IAChF;IAEA,OAAO,MAAM,SAAS,IAAI;AAC5B;AAEO,eAAe,WAAW,OAMhC;IACC,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,gBAAgB,CAAC,EAAE;QAC9D,QAAQ;QACR,SAAS;YACP,gBAAgB;QAClB;QACA,MAAM,KAAK,SAAS,CAAC;IACvB;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM,CAAC,mBAAmB,EAAE,SAAS,MAAM,CAAC,CAAC,EAAE,SAAS,UAAU,EAAE;IAChF;IAEA,OAAO,MAAM,SAAS,IAAI;AAC5B;AAIQ,eAAe,aAAa,KAAa;IAC/C,MAAM,MAAM,MAAM,WAAW;IAC7B,MAAM,IAAI,aAAyB,KAAK;IACxC,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,KAAK;IAExB,gDAAgD;IAChD,MAAM,IAAI,MAAM,CAAC,0BAA0B,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO;AACpE;AAEO,eAAe,aAAa,WAMlC;IACC,MAAM,MAAM,MAAM,WAAW;IAC7B,MAAM,IAAI,aAAyB,KAAK;IACxC,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,KAAK;IAExB,gDAAgD;IAChD,MAAM,IAAI,MAAM,CAAC,0BAA0B,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO;AACpE","debugId":null}},
    {"offset": {"line": 658, "column": 0}, "map": {"version":3,"sources":["file:///Users/cute/Documents/vsc/HTV/frontend/app/poc/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { Chat } from \"@/components/Chat\";\nimport Link from \"next/link\";\nimport Image from \"next/image\";\nimport { useState, useRef, useEffect } from \"react\";\nimport PresetCard from \"@/components/PresetCard\";\nimport { handlePhase1 } from \"@/lib/chat/validator-and-calls\";\nimport { Phase1Response, Idea, Ingredient } from \"@/lib/chat/types\";\n\ninterface Message {\n  role: \"user\" | \"assistant\";\n  content: string;\n  id: string;\n  phase1Data?: Phase1Response;\n}\n\nexport default function Home() {\n  const [prompt, setPrompt] = useState(\"\");\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [isChatMode, setIsChatMode] = useState(false);\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [chatInput, setChatInput] = useState(\"\");\n  const [animationPhase, setAnimationPhase] = useState(0);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const [animatedMessageIds, setAnimatedMessageIds] = useState<Set<string>>(\n    new Set()\n  );\n  const [selectedIdea, setSelectedIdea] = useState<Idea | null>(null);\n  const [extractedIngredients, setExtractedIngredients] = useState<\n    Ingredient[]\n  >([]);\n\n  const presets = [\n    {\n      icon: \"/turtle.svg\",\n      title: \"Generate a fashion accessory\",\n      description: \"from recycled ocean plastic...\",\n      text: \"Generate a fashion accessory from recycled ocean plastic...\",\n    },\n    {\n      icon: \"/glass.svg\",\n      title: \"Make home decor from recycled\",\n      description: \"glass bottles...\",\n      text: \"Make home decor from recycled glass bottles...\",\n    },\n    {\n      icon: \"/plastic.svg\",\n      title: \"Help me make something from\",\n      description: \"plastic bottles....\",\n      text: \"Help me make something from plastic bottles....\",\n    },\n  ];\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleGenerate = async () => {\n    if (!prompt.trim()) return;\n    setIsGenerating(true);\n\n    const initialMessage = prompt;\n\n    // Animation sequence\n    // Phase 1: Fade out examples (0-300ms)\n    setAnimationPhase(1);\n\n    setTimeout(() => {\n      // Phase 2: Fade out title and button (300-600ms)\n      setAnimationPhase(2);\n    }, 300);\n\n    setTimeout(() => {\n      // Phase 3: Clear input, slide to top (600-1000ms)\n      setAnimationPhase(3);\n      setPrompt(\"\");\n    }, 600);\n\n    setTimeout(() => {\n      // Phase 4: Expand box (1000-1800ms)\n      setAnimationPhase(4);\n    }, 1000);\n\n    setTimeout(() => {\n      // Phase 5: Prepare for transition (1800ms) - wait for grow to finish\n      setAnimationPhase(5);\n    }, 1800);\n\n    setTimeout(() => {\n      // Phase 6: Switch to chat mode and show first message (1900ms)\n      const messageId = Date.now().toString();\n      setMessages([\n        {\n          role: \"user\",\n          content: initialMessage,\n          id: messageId,\n        },\n      ]);\n      setAnimatedMessageIds(new Set([messageId]));\n      setIsChatMode(true);\n      setAnimationPhase(6);\n    }, 1900);\n\n    setTimeout(() => {\n      // Phase 6.5: Show chat input after chat interface renders (2200ms)\n      setAnimationPhase(7);\n    }, 2200);\n\n    setTimeout(async () => {\n      // Phase 8: Fetch AI response\n      setAnimationPhase(8);\n      setIsGenerating(false);\n\n      // Call Phase 1 API with the initial message\n      try {\n        const phase1Response = await handlePhase1(initialMessage);\n        const assistantId = (Date.now() + 1).toString();\n\n        setMessages((prev) => [\n          ...prev,\n          {\n            role: \"assistant\",\n            content: \"I've analyzed your materials! Here's what I found:\",\n            id: assistantId,\n            phase1Data: phase1Response,\n          },\n        ]);\n        setAnimatedMessageIds((prev) => new Set([...prev, assistantId]));\n        setExtractedIngredients(phase1Response.ingredients);\n      } catch (error) {\n        console.error(\"Phase 1 API error:\", error);\n        const assistantId = (Date.now() + 1).toString();\n        setMessages((prev) => [\n          ...prev,\n          {\n            role: \"assistant\",\n            content:\n              \"I'm sorry, I encountered an error analyzing your materials. Please try again.\",\n            id: assistantId,\n          },\n        ]);\n        setAnimatedMessageIds((prev) => new Set([...prev, assistantId]));\n      }\n    }, 1900);\n  };\n\n  const handleSendMessage = async () => {\n    if (!chatInput.trim()) return;\n\n    const userMessageId = Date.now().toString();\n    const userMessage: Message = {\n      role: \"user\",\n      content: chatInput,\n      id: userMessageId,\n    };\n\n    setMessages((prev) => [...prev, userMessage]);\n    setAnimatedMessageIds((prev) => new Set([...prev, userMessageId]));\n    setChatInput(\"\");\n\n    // Call Phase 1 API with the follow-up message\n    try {\n      const phase1Response = await handlePhase1(chatInput);\n      const assistantId = (Date.now() + 1).toString();\n\n      setMessages((prev) => [\n        ...prev,\n        {\n          role: \"assistant\",\n          content: \"Here's an updated analysis based on your input:\",\n          id: assistantId,\n          phase1Data: phase1Response,\n        },\n      ]);\n      setAnimatedMessageIds((prev) => new Set([...prev, assistantId]));\n      setExtractedIngredients(phase1Response.ingredients);\n    } catch (error) {\n      console.error(\"Phase 1 API error:\", error);\n      const assistantId = (Date.now() + 1).toString();\n      setMessages((prev) => [\n        ...prev,\n        {\n          role: \"assistant\",\n          content: \"I'm sorry, I encountered an error. Please try again.\",\n          id: assistantId,\n        },\n      ]);\n      setAnimatedMessageIds((prev) => new Set([...prev, assistantId]));\n    }\n  };\n\n  const handleIdeaSelect = (idea: Idea) => {\n    setSelectedIdea(idea);\n    const assistantId = Date.now().toString();\n    setMessages((prev) => [\n      ...prev,\n      {\n        role: \"assistant\",\n        content: `Great choice! You selected \"${idea.title}\". Ready to visualize this project? (Phase 2 coming soon)`,\n        id: assistantId,\n      },\n    ]);\n    setAnimatedMessageIds((prev) => new Set([...prev, assistantId]));\n  };\n\n  const handleExampleClick = (text: string) => {\n    setPrompt(text);\n  };\n\n  if (isChatMode) {\n    // Chat Interface\n    return (\n      <div className=\"min-h-screen bg-[#181A25] flex flex-col overflow-hidden font-menlo\">\n        {/* Header */}\n        <div className=\"p-4 bg-[#1E2433] border-b border-[#2A3142] flex items-center gap-4\">\n          <Image\n            src=\"/logo_text.svg\"\n            alt=\"Orbit\"\n            width={80}\n            height={27}\n            className=\"opacity-90 mr-auto\"\n          />\n          <Link\n            href=\"/poc/trellis\"\n            className=\"text-blue-400 hover:text-blue-300 font-semibold transition-colors\"\n          >\n            Try Trellis 3D Generator →\n          </Link>\n          <Link\n            href=\"/poc/magic-pencil\"\n            className=\"text-purple-400 hover:text-purple-300 font-semibold transition-colors\"\n          >\n            Try Magic Pencil ✨ →\n          </Link>\n        </div>\n\n        {/* Chat Container */}\n        <div className=\"flex-1 flex flex-col max-w-8xl px-16 mx-auto w-full py-8\">\n          {/* Messages Area - This is the grown textarea transformed */}\n          <div\n            className=\"bg-[#232937] border border-[#4ade80] p-6 overflow-y-auto\"\n            style={{\n              height:\n                animationPhase >= 7\n                  ? \"calc(100vh - 280px)\"\n                  : \"calc(100vh - 200px)\",\n              transition: \"height 300ms ease-out\",\n            }}\n          >\n            <div className=\"space-y-4\">\n              {messages.map((message) => {\n                const shouldAnimate = animatedMessageIds.has(message.id);\n                return (\n                  <div key={message.id}>\n                    <div\n                      className={`flex ${\n                        message.role === \"user\"\n                          ? \"justify-end\"\n                          : \"justify-start\"\n                      }`}\n                    >\n                      <div\n                        className={`max-w-[70%] px-4 py-3 rounded-lg ${\n                          message.role === \"user\"\n                            ? \"bg-[#4ade80] text-black\"\n                            : \"bg-[#2A3142] text-white\"\n                        }`}\n                        style={\n                          shouldAnimate\n                            ? {\n                                animation:\n                                  \"popIn 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55) forwards\",\n                              }\n                            : undefined\n                        }\n                      >\n                        {message.content}\n                      </div>\n                    </div>\n\n                    {/* Render Phase 1 data if present */}\n                    {message.phase1Data && (\n                      <div className=\"mt-4 space-y-4\">\n                        {/* Ingredients Section */}\n                        <div className=\"bg-[#1a2030] border border-[#3a4560] rounded-lg p-4\">\n                          <h3 className=\"text-[#4ade80] text-lg font-semibold mb-3\">\n                            📦 Extracted Materials\n                          </h3>\n                          <div className=\"space-y-2\">\n                            {message.phase1Data.ingredients.map(\n                              (ingredient, idx) => (\n                                <div\n                                  key={idx}\n                                  className=\"bg-[#232937] rounded p-3 border border-[#2A3142]\"\n                                >\n                                  <div className=\"flex items-start justify-between\">\n                                    <div className=\"flex-1\">\n                                      <span className=\"text-white font-medium\">\n                                        {ingredient.name || \"Unknown\"}\n                                      </span>\n                                      <div className=\"text-sm text-gray-400 mt-1 flex flex-wrap gap-3\">\n                                        <span>\n                                          Material:{\" \"}\n                                          {ingredient.material || \"N/A\"}\n                                        </span>\n                                        {ingredient.size && (\n                                          <span>Size: {ingredient.size}</span>\n                                        )}\n                                        {ingredient.condition && (\n                                          <span>\n                                            Condition: {ingredient.condition}\n                                          </span>\n                                        )}\n                                      </div>\n                                    </div>\n                                    <span\n                                      className={`text-xs px-2 py-1 rounded ml-2 ${\n                                        ingredient.confidence >= 0.8\n                                          ? \"bg-green-900 text-green-200\"\n                                          : ingredient.confidence >= 0.6\n                                          ? \"bg-yellow-900 text-yellow-200\"\n                                          : \"bg-red-900 text-red-200\"\n                                      }`}\n                                    >\n                                      {Math.round(ingredient.confidence * 100)}%\n                                    </span>\n                                  </div>\n                                </div>\n                              )\n                            )}\n                          </div>\n                        </div>\n\n                        {/* Clarifying Questions */}\n                        {message.phase1Data.needs_clarification &&\n                          message.phase1Data.clarifying_questions &&\n                          message.phase1Data.clarifying_questions.length >\n                            0 && (\n                            <div className=\"bg-yellow-900/20 border border-yellow-700/50 rounded-lg p-4\">\n                              <h3 className=\"text-yellow-400 text-lg font-semibold mb-2\">\n                                ❓ Need More Information\n                              </h3>\n                              <ul className=\"space-y-2\">\n                                {message.phase1Data.clarifying_questions.map(\n                                  (question, idx) => (\n                                    <li\n                                      key={idx}\n                                      className=\"text-yellow-200 text-sm\"\n                                    >\n                                      • {question}\n                                    </li>\n                                  )\n                                )}\n                              </ul>\n                            </div>\n                          )}\n\n                        {/* Ideas Section */}\n                        <div>\n                          <h3 className=\"text-[#4ade80] text-lg font-semibold mb-3\">\n                            💡 Project Ideas\n                          </h3>\n                          <div className=\"grid grid-cols-1 gap-3\">\n                            {message.phase1Data.ideas.map((idea) => (\n                              <div\n                                key={idea.id}\n                                onClick={() => handleIdeaSelect(idea)}\n                                className=\"bg-[#1a2030] border border-[#3a4560] hover:border-[#4ade80] rounded-lg p-4 cursor-pointer transition-all hover:scale-[1.02]\"\n                                style={{\n                                  animation: \"fadeIn 0.5s ease-out forwards\",\n                                }}\n                              >\n                                <h4 className=\"text-white font-semibold mb-1\">\n                                  {idea.title}\n                                </h4>\n                                <p className=\"text-gray-400 text-sm\">\n                                  {idea.one_liner}\n                                </p>\n                              </div>\n                            ))}\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                );\n              })}\n              <div ref={messagesEndRef} />\n            </div>\n          </div>\n\n          {/* Chat Input */}\n          <div\n            className=\"mt-4 transition-all duration-500 ease-out\"\n            style={{\n              transform:\n                animationPhase >= 7 ? \"translateY(0)\" : \"translateY(100px)\",\n              opacity: animationPhase >= 7 ? 1 : 0,\n              pointerEvents: animationPhase >= 7 ? \"auto\" : \"none\",\n            }}\n          >\n            <div className=\"flex gap-3 items-end\">\n              <textarea\n                value={chatInput}\n                onChange={(e) => setChatInput(e.target.value)}\n                onKeyDown={(e) => {\n                  if (e.key === \"Enter\" && !e.shiftKey) {\n                    e.preventDefault();\n                    handleSendMessage();\n                  }\n                }}\n                placeholder=\"Continue the conversation...\"\n                className=\"flex-1 bg-[#232937] text-white text-base border border-[#4ade80] p-4 resize-none focus:outline-none focus:border-[#3bc970] transition-colors placeholder:text-gray-500 rounded\"\n                rows={2}\n              />\n              <button\n                onClick={handleSendMessage}\n                disabled={!chatInput.trim()}\n                className=\"px-8 py-4 bg-[#4ade80] hover:bg-[#3bc970] disabled:bg-gray-600 disabled:cursor-not-allowed text-black font-semibold transition-colors uppercase rounded\"\n              >\n                Send\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Initial Form UI\n  return (\n    <div className=\"min-h-screen bg-[#181A25] overflow-hidden font-menlo\">\n      {/* Header */}\n      <div className=\"p-4 bg-[#1E2433] border-b border-[#2A3142] flex items-center gap-4\">\n        <Image\n          src=\"/logo_text.svg\"\n          alt=\"Orbit\"\n          width={80}\n          height={27}\n          className=\"opacity-90 mr-auto\"\n        />\n        <Link\n          href=\"/poc/trellis\"\n          className=\"text-blue-400 hover:text-blue-300 font-semibold transition-colors\"\n        >\n          Try Trellis 3D Generator →\n        </Link>\n        <Link\n          href=\"/poc/magic-pencil\"\n          className=\"text-purple-400 hover:text-purple-300 font-semibold transition-colors\"\n        >\n          Try Magic Pencil ✨ →\n        </Link>\n      </div>\n\n      {/* Main Content */}\n      <div\n        className=\"mx-auto transition-all duration-500 ease-out\"\n        style={{\n          maxWidth: animationPhase >= 3 ? \"100%\" : \"var(--max-width-8xl)\",\n          paddingLeft: animationPhase >= 3 ? \"4rem\" : \"4rem\",\n          paddingRight: animationPhase >= 3 ? \"4rem\" : \"4rem\",\n          paddingTop: animationPhase >= 3 ? \"2rem\" : \"4rem\",\n          paddingBottom: animationPhase >= 3 ? \"0\" : \"0\",\n        }}\n      >\n        {/* Title */}\n        <div className=\"overflow-hidden\">\n          <h1\n            className=\"text-4xl text-white mb-2 transition-all duration-500 ease-out\"\n            style={{\n              transform:\n                animationPhase >= 2 ? \"translateY(-150%)\" : \"translateY(0)\",\n              opacity: animationPhase >= 2 ? 0 : 1,\n            }}\n          >\n            Turn Waste into Products\n          </h1>\n        </div>\n\n        {/* Input Section */}\n        <div\n          className=\"transition-all duration-500 ease-out\"\n          style={{\n            marginTop: animationPhase >= 3 ? \"0\" : \"3rem\",\n            marginBottom: animationPhase >= 3 ? \"0\" : \"2rem\",\n            transform:\n              animationPhase >= 3 ? \"translateY(-50px)\" : \"translateY(0)\",\n          }}\n        >\n          <div className=\"overflow-hidden\">\n            {animationPhase < 2 && (\n              <label\n                className=\"block text-[#4ade80] text-base mb-4 font-mono transition-all duration-500 ease-out\"\n                style={{\n                  transform:\n                    animationPhase >= 2 ? \"translateY(-150%)\" : \"translateY(0)\",\n                  opacity: animationPhase >= 2 ? 0 : 1,\n                }}\n              >\n                Describe your waste material\n              </label>\n            )}\n          </div>\n          <div className=\"relative\">\n            <textarea\n              value={prompt}\n              onChange={(e) => setPrompt(e.target.value)}\n              onKeyDown={(e) => {\n                if (e.key === \"Enter\" && e.ctrlKey) {\n                  handleGenerate();\n                }\n              }}\n              placeholder={\n                animationPhase < 3\n                  ? \"Describe what you want to make and what materials you have.\"\n                  : \"\"\n              }\n              style={{\n                height: animationPhase >= 4 ? \"60vh\" : \"10rem\",\n                transition: \"height 800ms cubic-bezier(0.4, 0, 0.2, 1)\",\n              }}\n              className=\"w-full bg-[#232937] text-white text-base border p-5 resize-none focus:outline-none border-[#4ade80] placeholder:text-gray-500\"\n            />\n          </div>\n        </div>\n\n        {/* Generate Button */}\n        <div className=\"overflow-hidden\">\n          <div\n            className=\"transition-all duration-500 ease-out\"\n            style={{\n              transform:\n                animationPhase >= 1 ? \"translateY(150%)\" : \"translateY(0)\",\n              opacity: animationPhase >= 1 ? 0 : 1,\n            }}\n          >\n            <button\n              onClick={handleGenerate}\n              disabled={!prompt.trim() || isGenerating}\n              className=\"w-full bg-[#4ade80] hover:bg-[#3bc970] disabled:bg-gray-600 disabled:cursor-not-allowed text-black py-3 transition-all duration-300 uppercase text-base\"\n            >\n              {isGenerating ? \"GENERATING...\" : \"GENERATE\"}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Examples Section */}\n      <div className=\"overflow-hidden\">\n        <div\n          className=\"max-w-8xl px-16 mx-auto pb-16 transition-all duration-500 ease-out\"\n          style={{\n            transform:\n              animationPhase >= 1 ? \"translateY(100%)\" : \"translateY(0)\",\n            opacity: animationPhase >= 1 ? 0 : 1,\n          }}\n        >\n          <h2 className=\"text-[#4ade80] text-base mb-4 font-mono\">\n            Try these examples\n          </h2>\n          <div className=\"flex justify-between\">\n            {presets.map((example, index) => (\n              <div key={index} onClick={() => handleExampleClick(example.text)}>\n                <PresetCard\n                  title={example.title}\n                  description={example.description}\n                  image={example.icon}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}