(globalThis.TURBOPACK || (globalThis.TURBOPACK = [])).push([typeof document === "object" ? document.currentScript : undefined,
"[project]/Documents/vsc/HTV/frontend/node_modules/@swc/helpers/cjs/_class_private_method_get.cjs [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

function _class_private_method_get(receiver, privateSet, fn) {
    if (!privateSet.has(receiver)) throw new TypeError("attempted to get private field on non-instance");
    return fn;
}
exports._ = _class_private_method_get;
}),
"[project]/Documents/vsc/HTV/frontend/node_modules/@swc/helpers/cjs/_check_private_redeclaration.cjs [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

function _check_private_redeclaration(obj, privateCollection) {
    if (privateCollection.has(obj)) {
        throw new TypeError("Cannot initialize the same private elements twice on an object");
    }
}
exports._ = _check_private_redeclaration;
}),
"[project]/Documents/vsc/HTV/frontend/node_modules/@swc/helpers/cjs/_class_private_method_init.cjs [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

var _check_private_redeclaration = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/@swc/helpers/cjs/_check_private_redeclaration.cjs [app-client] (ecmascript)");
function _class_private_method_init(obj, privateSet) {
    _check_private_redeclaration._(obj, privateSet);
    privateSet.add(obj);
}
exports._ = _class_private_method_init;
}),
"[project]/Documents/vsc/HTV/frontend/node_modules/@swc/helpers/cjs/_tagged_template_literal.cjs [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

function _tagged_template_literal(strings, raw) {
    if (!raw) raw = strings.slice(0);
    return Object.freeze(Object.defineProperties(strings, {
        raw: {
            value: Object.freeze(raw)
        }
    }));
}
exports._ = _tagged_template_literal;
}),
"[project]/Documents/vsc/HTV/frontend/node_modules/tailwindcss/dist/lib.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

var _class_private_method_get = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/@swc/helpers/cjs/_class_private_method_get.cjs [app-client] (ecmascript)");
var _class_private_method_init = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/@swc/helpers/cjs/_class_private_method_init.cjs [app-client] (ecmascript)");
var _define_property = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/@swc/helpers/cjs/_define_property.cjs [app-client] (ecmascript)");
var _tagged_template_literal = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/@swc/helpers/cjs/_tagged_template_literal.cjs [app-client] (ecmascript)");
function _templateObject() {
    const data = _tagged_template_literal._([
        "_"
    ], [
        "\\_"
    ]);
    _templateObject = function() {
        return data;
    };
    return data;
}
var _r, _e, _t, _class;
var Ci = Object.defineProperty;
var $i = (e, r)=>{
    for(var i in r)Ci(e, i, {
        get: r[i],
        enumerable: !0
    });
};
var vt = {};
$i(vt, {
    Features: ()=>Ae,
    Polyfills: ()=>tt,
    __unstable__loadDesignSystem: ()=>po,
    compile: ()=>fo,
    compileAst: ()=>Ai,
    default: ()=>We
});
var Wt = "4.1.14";
var Pe = 92, Be = 47, qe = 42, Bt = 34, qt = 39, Vi = 58, Ge = 59, oe = 10, Ye = 13, Oe = 32, He = 9, Ht = 123, kt = 125, xt = 40, Gt = 41, Si = 91, Ei = 93, Yt = 45, yt = 64, Ti = 33;
function ve(e, r) {
    let i = (r === null || r === void 0 ? void 0 : r.from) ? {
        file: r.from,
        code: e
    } : null;
    e[0] === "\uFEFF" && (e = " " + e.slice(1));
    let t = [], n = [], s = [], a = null, p = null, u = "", c = "", m = 0, g;
    for(let d = 0; d < e.length; d++){
        let w = e.charCodeAt(d);
        if (!(w === Ye && (g = e.charCodeAt(d + 1), g === oe))) if (w === Pe) u === "" && (m = d), u += e.slice(d, d + 2), d += 1;
        else if (w === Be && e.charCodeAt(d + 1) === qe) {
            let v = d;
            for(let x = d + 2; x < e.length; x++)if (g = e.charCodeAt(x), g === Pe) x += 1;
            else if (g === qe && e.charCodeAt(x + 1) === Be) {
                d = x + 1;
                break;
            }
            let k1 = e.slice(v, d + 1);
            if (k1.charCodeAt(2) === Ti) {
                let x = Ze(k1.slice(2, -2));
                n.push(x), i && (x.src = [
                    i,
                    v,
                    d + 1
                ], x.dst = [
                    i,
                    v,
                    d + 1
                ]);
            }
        } else if (w === qt || w === Bt) {
            let v = Zt(e, d, w);
            u += e.slice(d, v + 1), d = v;
        } else {
            if ((w === Oe || w === oe || w === He) && (g = e.charCodeAt(d + 1)) && (g === Oe || g === oe || g === He || g === Ye && (g = e.charCodeAt(d + 2)) && g == oe)) continue;
            if (w === oe) {
                if (u.length === 0) continue;
                g = u.charCodeAt(u.length - 1), g !== Oe && g !== oe && g !== He && (u += " ");
            } else if (w === Yt && e.charCodeAt(d + 1) === Yt && u.length === 0) {
                let v = "", k1 = d, x = -1;
                for(let C = d + 2; C < e.length; C++)if (g = e.charCodeAt(C), g === Pe) C += 1;
                else if (g === qt || g === Bt) C = Zt(e, C, g);
                else if (g === Be && e.charCodeAt(C + 1) === qe) {
                    for(let b = C + 2; b < e.length; b++)if (g = e.charCodeAt(b), g === Pe) b += 1;
                    else if (g === qe && e.charCodeAt(b + 1) === Be) {
                        C = b + 1;
                        break;
                    }
                } else if (x === -1 && g === Vi) x = u.length + C - k1;
                else if (g === Ge && v.length === 0) {
                    u += e.slice(k1, C), d = C;
                    break;
                } else if (g === xt) v += ")";
                else if (g === Si) v += "]";
                else if (g === Ht) v += "}";
                else if ((g === kt || e.length - 1 === C) && v.length === 0) {
                    d = C - 1, u += e.slice(k1, C);
                    break;
                } else (g === Gt || g === Ei || g === kt) && v.length > 0 && e[C] === v[v.length - 1] && (v = v.slice(0, -1));
                let S = bt(u, x);
                if (!S) throw new Error("Invalid custom property, expected a value");
                i && (S.src = [
                    i,
                    k1,
                    d
                ], S.dst = [
                    i,
                    k1,
                    d
                ]), a ? a.nodes.push(S) : t.push(S), u = "";
            } else if (w === Ge && u.charCodeAt(0) === yt) p = _e1(u), i && (p.src = [
                i,
                m,
                d
            ], p.dst = [
                i,
                m,
                d
            ]), a ? a.nodes.push(p) : t.push(p), u = "", p = null;
            else if (w === Ge && c[c.length - 1] !== ")") {
                let v = bt(u);
                if (!v) {
                    if (u.length === 0) continue;
                    throw new Error("Invalid declaration: `".concat(u.trim(), "`"));
                }
                i && (v.src = [
                    i,
                    m,
                    d
                ], v.dst = [
                    i,
                    m,
                    d
                ]), a ? a.nodes.push(v) : t.push(v), u = "";
            } else if (w === Ht && c[c.length - 1] !== ")") c += "}", p = Y(u.trim()), i && (p.src = [
                i,
                m,
                d
            ], p.dst = [
                i,
                m,
                d
            ]), a && a.nodes.push(p), s.push(a), a = p, u = "", p = null;
            else if (w === kt && c[c.length - 1] !== ")") {
                if (c === "") throw new Error("Missing opening {");
                if (c = c.slice(0, -1), u.length > 0) if (u.charCodeAt(0) === yt) p = _e1(u), i && (p.src = [
                    i,
                    m,
                    d
                ], p.dst = [
                    i,
                    m,
                    d
                ]), a ? a.nodes.push(p) : t.push(p), u = "", p = null;
                else {
                    let k1 = u.indexOf(":");
                    if (a) {
                        let x = bt(u, k1);
                        if (!x) throw new Error("Invalid declaration: `".concat(u.trim(), "`"));
                        i && (x.src = [
                            i,
                            m,
                            d
                        ], x.dst = [
                            i,
                            m,
                            d
                        ]), a.nodes.push(x);
                    }
                }
                var _s_pop;
                let v = (_s_pop = s.pop()) !== null && _s_pop !== void 0 ? _s_pop : null;
                v === null && a && t.push(a), a = v, u = "", p = null;
            } else if (w === xt) c += ")", u += "(";
            else if (w === Gt) {
                if (c[c.length - 1] !== ")") throw new Error("Missing opening (");
                c = c.slice(0, -1), u += ")";
            } else {
                if (u.length === 0 && (w === Oe || w === oe || w === He)) continue;
                u === "" && (m = d), u += String.fromCharCode(w);
            }
        }
    }
    if (u.charCodeAt(0) === yt) {
        let d = _e1(u);
        i && (d.src = [
            i,
            m,
            e.length
        ], d.dst = [
            i,
            m,
            e.length
        ]), t.push(d);
    }
    if (c.length > 0 && a) {
        if (a.kind === "rule") throw new Error("Missing closing } at ".concat(a.selector));
        if (a.kind === "at-rule") throw new Error("Missing closing } at ".concat(a.name, " ").concat(a.params));
    }
    return n.length > 0 ? n.concat(t) : t;
}
function _e1(e) {
    let r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    let i = e, t = "";
    for(let n = 5; n < e.length; n++){
        let s = e.charCodeAt(n);
        if (s === Oe || s === xt) {
            i = e.slice(0, n), t = e.slice(n);
            break;
        }
    }
    return F(i.trim(), t.trim(), r);
}
function bt(e) {
    let r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : e.indexOf(":");
    if (r === -1) return null;
    let i = e.indexOf("!important", r + 1);
    return o(e.slice(0, r).trim(), e.slice(r + 1, i === -1 ? e.length : i).trim(), i !== -1);
}
function Zt(e, r, i) {
    let t;
    for(let n = r + 1; n < e.length; n++)if (t = e.charCodeAt(n), t === Pe) n += 1;
    else {
        if (t === i) return n;
        if (t === Ge && (e.charCodeAt(n + 1) === oe || e.charCodeAt(n + 1) === Ye && e.charCodeAt(n + 2) === oe)) throw new Error("Unterminated string: ".concat(e.slice(r, n + 1) + String.fromCharCode(i)));
        if (t === oe || t === Ye && e.charCodeAt(n + 1) === oe) throw new Error("Unterminated string: ".concat(e.slice(r, n) + String.fromCharCode(i)));
    }
    return r;
}
function de(e) {
    if (arguments.length === 0) throw new TypeError("`CSS.escape` requires an argument.");
    let r = String(e), i = r.length, t = -1, n, s = "", a = r.charCodeAt(0);
    if (i === 1 && a === 45) return "\\" + r;
    for(; ++t < i;){
        if (n = r.charCodeAt(t), n === 0) {
            s += "\uFFFD";
            continue;
        }
        if (n >= 1 && n <= 31 || n === 127 || t === 0 && n >= 48 && n <= 57 || t === 1 && n >= 48 && n <= 57 && a === 45) {
            s += "\\" + n.toString(16) + " ";
            continue;
        }
        if (n >= 128 || n === 45 || n === 95 || n >= 48 && n <= 57 || n >= 65 && n <= 90 || n >= 97 && n <= 122) {
            s += r.charAt(t);
            continue;
        }
        s += "\\" + r.charAt(t);
    }
    return s;
}
function we(e) {
    return e.replace(/\\([\dA-Fa-f]{1,6}[\t\n\f\r ]?|[\S\s])/g, (r)=>r.length > 2 ? String.fromCodePoint(Number.parseInt(r.slice(1).trim(), 16)) : r[1]);
}
var Qt = new Map([
    [
        "--font",
        [
            "--font-weight",
            "--font-size"
        ]
    ],
    [
        "--inset",
        [
            "--inset-shadow",
            "--inset-ring"
        ]
    ],
    [
        "--text",
        [
            "--text-color",
            "--text-decoration-color",
            "--text-decoration-thickness",
            "--text-indent",
            "--text-shadow",
            "--text-underline-offset"
        ]
    ],
    [
        "--grid-column",
        [
            "--grid-column-start",
            "--grid-column-end"
        ]
    ],
    [
        "--grid-row",
        [
            "--grid-row-start",
            "--grid-row-end"
        ]
    ]
]);
function Jt(e, r) {
    var _Qt_get;
    return ((_Qt_get = Qt.get(r)) !== null && _Qt_get !== void 0 ? _Qt_get : []).some((i)=>e === i || e.startsWith("".concat(i, "-")));
}
var Je = (_r = /*#__PURE__*/ new WeakSet(), _e = /*#__PURE__*/ new WeakSet(), _t = /*#__PURE__*/ new WeakSet(), _class = class {
    get size() {
        return this.values.size;
    }
    add(r, i) {
        let t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0, n = arguments.length > 3 ? arguments[3] : void 0;
        if (r.endsWith("-*")) {
            if (i !== "initial") throw new Error("Invalid theme value `".concat(i, "` for namespace `").concat(r, "`"));
            r === "--*" ? this.values.clear() : this.clearNamespace(r.slice(0, -2), 0);
        }
        if (t & 4) {
            let s = this.values.get(r);
            if (s && !(s.options & 4)) return;
        }
        i === "initial" ? this.values.delete(r) : this.values.set(r, {
            value: i,
            options: t,
            src: n
        });
    }
    keysInNamespaces(r) {
        let i = [];
        for (let t of r){
            let n = "".concat(t, "-");
            for (let s of this.values.keys())s.startsWith(n) && s.indexOf("--", 2) === -1 && (Jt(s, t) || i.push(s.slice(n.length)));
        }
        return i;
    }
    get(r) {
        for (let i of r){
            let t = this.values.get(i);
            if (t) return t.value;
        }
        return null;
    }
    hasDefault(r) {
        return (this.getOptions(r) & 4) === 4;
    }
    getOptions(r1) {
        var _this_values_get;
        var _this_values_get_options;
        return r1 = we(_class_private_method_get._(this, _r, r).call(this, r1)), (_this_values_get_options = (_this_values_get = this.values.get(r1)) === null || _this_values_get === void 0 ? void 0 : _this_values_get.options) !== null && _this_values_get_options !== void 0 ? _this_values_get_options : 0;
    }
    entries() {
        return this.prefix ? Array.from(this.values, (r)=>(r[0] = this.prefixKey(r[0]), r)) : this.values.entries();
    }
    prefixKey(r) {
        return this.prefix ? "--".concat(this.prefix, "-").concat(r.slice(2)) : r;
    }
    clearNamespace(r, i) {
        var _Qt_get;
        let t = (_Qt_get = Qt.get(r)) !== null && _Qt_get !== void 0 ? _Qt_get : [];
        e: for (let n of this.values.keys())if (n.startsWith(r)) {
            if (i !== 0 && (this.getOptions(n) & i) !== i) continue;
            for (let s of t)if (n.startsWith(s)) continue e;
            this.values.delete(n);
        }
    }
    markUsedVariable(r1) {
        let i = we(_class_private_method_get._(this, _r, r).call(this, r1)), t = this.values.get(i);
        if (!t) return !1;
        let n = t.options & 16;
        return t.options |= 16, !n;
    }
    resolve(r, i) {
        let t1 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
        let n = _class_private_method_get._(this, _e, e).call(this, r, i);
        if (!n) return null;
        let s = this.values.get(n);
        return (t1 | s.options) & 1 ? s.value : _class_private_method_get._(this, _t, t).call(this, n);
    }
    resolveValue(r, i) {
        let t = _class_private_method_get._(this, _e, e).call(this, r, i);
        return t ? this.values.get(t).value : null;
    }
    resolveWith(r, i) {
        let t1 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
        let n = _class_private_method_get._(this, _e, e).call(this, r, i);
        if (!n) return null;
        let s = {};
        for (let p of t1){
            let u = "".concat(n).concat(p), c = this.values.get(u);
            c && (c.options & 1 ? s[p] = c.value : s[p] = _class_private_method_get._(this, _t, t).call(this, u));
        }
        let a = this.values.get(n);
        return a.options & 1 ? [
            a.value,
            s
        ] : [
            _class_private_method_get._(this, _t, t).call(this, n),
            s
        ];
    }
    namespace(r) {
        let i = new Map, t = "".concat(r, "-");
        for (let [n, s] of this.values)n === r ? i.set(null, s.value) : n.startsWith("".concat(t, "-")) ? i.set(n.slice(r.length), s.value) : n.startsWith(t) && i.set(n.slice(t.length), s.value);
        return i;
    }
    addKeyframes(r) {
        this.keyframes.add(r);
    }
    getKeyframes() {
        return Array.from(this.keyframes);
    }
    constructor(r = new Map, i = new Set([])){
        _class_private_method_init._(this, _r);
        _class_private_method_init._(this, _e);
        _class_private_method_init._(this, _t);
        _define_property._(this, "prefix", null);
        this.values = r;
        this.keyframes = i;
    }
}, _class);
var W = class extends Map {
    get(i) {
        let t = super.get(i);
        return t === void 0 && (t = this.factory(i, this), this.set(i, t)), t;
    }
    constructor(i){
        super();
        this.factory = i;
    }
};
function Ct(e) {
    return {
        kind: "word",
        value: e
    };
}
function Ri(e, r) {
    return {
        kind: "function",
        value: e,
        nodes: r
    };
}
function Pi(e) {
    return {
        kind: "separator",
        value: e
    };
}
function ee(e, r) {
    let i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
    for(let t = 0; t < e.length; t++){
        var _r;
        let n = e[t], s = !1, a = 0, p = (_r = r(n, {
            parent: i,
            replaceWith (u) {
                s || (s = !0, Array.isArray(u) ? u.length === 0 ? (e.splice(t, 1), a = 0) : u.length === 1 ? (e[t] = u[0], a = 1) : (e.splice(t, 1, ...u), a = u.length) : e[t] = u);
            }
        })) !== null && _r !== void 0 ? _r : 0;
        if (s) {
            p === 0 ? t-- : t += a - 1;
            continue;
        }
        if (p === 2) return 2;
        if (p !== 1 && n.kind === "function" && ee(n.nodes, r, n) === 2) return 2;
    }
}
function J(e) {
    let r = "";
    for (let i of e)switch(i.kind){
        case "word":
        case "separator":
            {
                r += i.value;
                break;
            }
        case "function":
            r += i.value + "(" + J(i.nodes) + ")";
    }
    return r;
}
var Xt = 92, Oi = 41, er = 58, tr = 44, _i = 34, rr = 61, ir = 62, nr = 60, or = 10, Di = 40, Ki = 39, lr = 47, ar = 32, sr = 9;
function G(e) {
    e = e.replaceAll("\r\n", "\n");
    let r = [], i = [], t = null, n = "", s;
    for(let a = 0; a < e.length; a++){
        let p = e.charCodeAt(a);
        switch(p){
            case Xt:
                {
                    n += e[a] + e[a + 1], a++;
                    break;
                }
            case er:
            case tr:
            case rr:
            case ir:
            case nr:
            case or:
            case lr:
            case ar:
            case sr:
                {
                    if (n.length > 0) {
                        let g = Ct(n);
                        t ? t.nodes.push(g) : r.push(g), n = "";
                    }
                    let u = a, c = a + 1;
                    for(; c < e.length && (s = e.charCodeAt(c), !(s !== er && s !== tr && s !== rr && s !== ir && s !== nr && s !== or && s !== lr && s !== ar && s !== sr)); c++);
                    a = c - 1;
                    let m = Pi(e.slice(u, c));
                    t ? t.nodes.push(m) : r.push(m);
                    break;
                }
            case Ki:
            case _i:
                {
                    let u = a;
                    for(let c = a + 1; c < e.length; c++)if (s = e.charCodeAt(c), s === Xt) c += 1;
                    else if (s === p) {
                        a = c;
                        break;
                    }
                    n += e.slice(u, a + 1);
                    break;
                }
            case Di:
                {
                    let u = Ri(n, []);
                    n = "", t ? t.nodes.push(u) : r.push(u), i.push(u), t = u;
                    break;
                }
            case Oi:
                {
                    let u = i.pop();
                    if (n.length > 0) {
                        let c = Ct(n);
                        u === null || u === void 0 ? void 0 : u.nodes.push(c), n = "";
                    }
                    i.length > 0 ? t = i[i.length - 1] : t = null;
                    break;
                }
            default:
                n += String.fromCharCode(p);
        }
    }
    return n.length > 0 && r.push(Ct(n)), r;
}
function Qe(e) {
    let r = [];
    return ee(G(e), (i)=>{
        if (!(i.kind !== "function" || i.value !== "var")) return ee(i.nodes, (t)=>{
            t.kind !== "word" || t.value[0] !== "-" || t.value[1] !== "-" || r.push(t.value);
        }), 1;
    }), r;
}
var Li = 64;
function B(e) {
    let r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    return {
        kind: "rule",
        selector: e,
        nodes: r
    };
}
function F(e) {
    let r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "", i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
    return {
        kind: "at-rule",
        name: e,
        params: r,
        nodes: i
    };
}
function Y(e) {
    let r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    return e.charCodeAt(0) === Li ? _e1(e, r) : B(e, r);
}
function o(e, r) {
    let i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1;
    return {
        kind: "declaration",
        property: e,
        value: r,
        important: i
    };
}
function Ze(e) {
    return {
        kind: "comment",
        value: e
    };
}
function se(e, r) {
    return {
        kind: "context",
        context: e,
        nodes: r
    };
}
function z(e) {
    return {
        kind: "at-root",
        nodes: e
    };
}
function L(e, r) {
    let i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [], t = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    for(let n = 0; n < e.length; n++){
        var _i_;
        let s = e[n], a = (_i_ = i[i.length - 1]) !== null && _i_ !== void 0 ? _i_ : null;
        if (s.kind === "context") {
            if (L(s.nodes, r, i, {
                ...t,
                ...s.context
            }) === 2) return 2;
            continue;
        }
        i.push(s);
        var _r;
        let p = !1, u = 0, c = (_r = r(s, {
            parent: a,
            context: t,
            path: i,
            replaceWith (m) {
                p || (p = !0, Array.isArray(m) ? m.length === 0 ? (e.splice(n, 1), u = 0) : m.length === 1 ? (e[n] = m[0], u = 1) : (e.splice(n, 1, ...m), u = m.length) : (e[n] = m, u = 1));
            }
        })) !== null && _r !== void 0 ? _r : 0;
        if (i.pop(), p) {
            c === 0 ? n-- : n += u - 1;
            continue;
        }
        if (c === 2) return 2;
        if (c !== 1 && "nodes" in s) {
            i.push(s);
            let m = L(s.nodes, r, i, t);
            if (i.pop(), m === 2) return 2;
        }
    }
}
function Xe(e, r) {
    let i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [], t = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    for(let n = 0; n < e.length; n++){
        var _i_;
        let s = e[n], a = (_i_ = i[i.length - 1]) !== null && _i_ !== void 0 ? _i_ : null;
        if (s.kind === "rule" || s.kind === "at-rule") i.push(s), Xe(s.nodes, r, i, t), i.pop();
        else if (s.kind === "context") {
            Xe(s.nodes, r, i, {
                ...t,
                ...s.context
            });
            continue;
        }
        i.push(s), r(s, {
            parent: a,
            context: t,
            path: i,
            replaceWith (p) {
                Array.isArray(p) ? p.length === 0 ? e.splice(n, 1) : p.length === 1 ? e[n] = p[0] : e.splice(n, 1, ...p) : e[n] = p, n += p.length - 1;
            }
        }), i.pop();
    }
}
function ye(e, r) {
    let i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 3;
    let t = [], n = new Set, s = new W(()=>new Set), a = new W(()=>new Set), p = new Set, u = new Set, c = [], m = [], g = new W(()=>new Set);
    function d(v, k1) {
        let x = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, S = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0;
        if (v.kind === "declaration") {
            if (v.property === "--tw-sort" || v.value === void 0 || v.value === null) return;
            if (x.theme && v.property[0] === "-" && v.property[1] === "-") {
                if (v.value === "initial") {
                    v.value = void 0;
                    return;
                }
                x.keyframes || s.get(k1).add(v);
            }
            if (v.value.includes("var(")) if (x.theme && v.property[0] === "-" && v.property[1] === "-") for (let C of Qe(v.value))g.get(C).add(v.property);
            else r.trackUsedVariables(v.value);
            if (v.property === "animation") for (let C of ur(v.value))u.add(C);
            i & 2 && v.value.includes("color-mix(") && a.get(k1).add(v), k1.push(v);
        } else if (v.kind === "rule") {
            let C = [];
            for (let R of v.nodes)d(R, C, x, S + 1);
            let b = {}, _1 = new Set;
            for (let R of C){
                var _b, _D;
                if (R.kind !== "declaration") continue;
                let D = "".concat(R.property, ":").concat(R.value, ":").concat(R.important);
                var _;
                (_ = (_b = b)[_D = D]) !== null && _ !== void 0 ? _ : _b[_D] = [], b[D].push(R);
            }
            for(let R in b)for(let D = 0; D < b[R].length - 1; ++D)_1.add(b[R][D]);
            if (_1.size > 0 && (C = C.filter((R)=>!_1.has(R))), C.length === 0) return;
            v.selector === "&" ? k1.push(...C) : k1.push({
                ...v,
                nodes: C
            });
        } else if (v.kind === "at-rule" && v.name === "@property" && S === 0) {
            if (n.has(v.params)) return;
            if (i & 1) {
                let b = v.params, _ = null, R = !1;
                for (let K of v.nodes)K.kind === "declaration" && (K.property === "initial-value" ? _ = K.value : K.property === "inherits" && (R = K.value === "true"));
                let D = o(b, _ !== null && _ !== void 0 ? _ : "initial");
                D.src = v.src, R ? c.push(D) : m.push(D);
            }
            n.add(v.params);
            let C = {
                ...v,
                nodes: []
            };
            for (let b of v.nodes)d(b, C.nodes, x, S + 1);
            k1.push(C);
        } else if (v.kind === "at-rule") {
            v.name === "@keyframes" && (x = {
                ...x,
                keyframes: !0
            });
            let C = {
                ...v,
                nodes: []
            };
            for (let b of v.nodes)d(b, C.nodes, x, S + 1);
            v.name === "@keyframes" && x.theme && p.add(C), (C.nodes.length > 0 || C.name === "@layer" || C.name === "@charset" || C.name === "@custom-media" || C.name === "@namespace" || C.name === "@import") && k1.push(C);
        } else if (v.kind === "at-root") for (let C of v.nodes){
            let b = [];
            d(C, b, x, 0);
            for (let _ of b)t.push(_);
        }
        else if (v.kind === "context") {
            if (v.context.reference) return;
            for (let C of v.nodes)d(C, k1, {
                ...x,
                ...v.context
            }, S);
        } else v.kind === "comment" && k1.push(v);
    }
    let w = [];
    for (let v of e)d(v, w, {}, 0);
    e: for (let [v, k1] of s)for (let x of k1){
        if (cr(x.property, r.theme, g)) {
            if (x.property.startsWith(r.theme.prefixKey("--animate-"))) for (let b of ur(x.value))u.add(b);
            continue;
        }
        let C = v.indexOf(x);
        if (v.splice(C, 1), v.length === 0) {
            let b = Ii(w, (_)=>_.kind === "rule" && _.nodes === v);
            if (!b || b.length === 0) continue e;
            b.unshift({
                kind: "at-root",
                nodes: w
            });
            do {
                let _ = b.pop();
                if (!_) break;
                let R = b[b.length - 1];
                if (!R || R.kind !== "at-root" && R.kind !== "at-rule") break;
                let D = R.nodes.indexOf(_);
                if (D === -1) break;
                R.nodes.splice(D, 1);
            }while (!0)
            continue e;
        }
    }
    for (let v of p)if (!u.has(v.params)) {
        let k1 = t.indexOf(v);
        t.splice(k1, 1);
    }
    if (w = w.concat(t), i & 2) for (let [v, k1] of a)for (let x of k1){
        let S = v.indexOf(x);
        if (S === -1 || x.value == null) continue;
        let C = G(x.value), b = !1;
        if (ee(C, (D, param)=>{
            let { replaceWith: K } = param;
            if (D.kind !== "function" || D.value !== "color-mix") return;
            let H = !1, O = !1;
            if (ee(D.nodes, (I, param)=>{
                let { replaceWith: q } = param;
                if (I.kind == "word" && I.value.toLowerCase() === "currentcolor") {
                    O = !0, b = !0;
                    return;
                }
                let M = I, ie = null, l = new Set;
                do {
                    if (M.kind !== "function" || M.value !== "var") return;
                    let f = M.nodes[0];
                    if (!f || f.kind !== "word") return;
                    let h = f.value;
                    if (l.has(h)) {
                        H = !0;
                        return;
                    }
                    if (l.add(h), b = !0, ie = r.theme.resolveValue(null, [
                        f.value
                    ]), !ie) {
                        H = !0;
                        return;
                    }
                    if (ie.toLowerCase() === "currentcolor") {
                        O = !0;
                        return;
                    }
                    ie.startsWith("var(") ? M = G(ie)[0] : M = null;
                }while (M)
                q({
                    kind: "word",
                    value: ie
                });
            }), H || O) {
                let I = D.nodes.findIndex((M)=>M.kind === "separator" && M.value.trim().includes(","));
                if (I === -1) return;
                let q = D.nodes.length > I ? D.nodes[I + 1] : null;
                if (!q) return;
                K(q);
            } else if (b) {
                let I = D.nodes[2];
                I.kind === "word" && (I.value === "oklab" || I.value === "oklch" || I.value === "lab" || I.value === "lch") && (I.value = "srgb");
            }
        }), !b) continue;
        let _ = {
            ...x,
            value: J(C)
        }, R = Y("@supports (color: color-mix(in lab, red, red))", [
            x
        ]);
        R.src = x.src, v.splice(S, 1, _, R);
    }
    if (i & 1) {
        let v = [];
        if (c.length > 0) {
            let k1 = Y(":root, :host", c);
            k1.src = c[0].src, v.push(k1);
        }
        if (m.length > 0) {
            let k1 = Y("*, ::before, ::after, ::backdrop", m);
            k1.src = m[0].src, v.push(k1);
        }
        if (v.length > 0) {
            let k1 = w.findIndex((C)=>!(C.kind === "comment" || C.kind === "at-rule" && (C.name === "@charset" || C.name === "@import"))), x = F("@layer", "properties", []);
            x.src = v[0].src, w.splice(k1 < 0 ? w.length : k1, 0, x);
            let S = Y("@layer properties", [
                F("@supports", "((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b))))", v)
            ]);
            S.src = v[0].src, S.nodes[0].src = v[0].src, w.push(S);
        }
    }
    return w;
}
function ne(e, r) {
    let i = 0, t = {
        file: null,
        code: ""
    };
    function n(a) {
        let p = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
        let u = "", c = "  ".repeat(p);
        if (a.kind === "declaration") {
            if (u += "".concat(c).concat(a.property, ": ").concat(a.value).concat(a.important ? " !important" : "", ";\n"), r) {
                var _a_value;
                i += c.length;
                let m = i;
                var _a_value_length;
                i += a.property.length, i += 2, i += (_a_value_length = (_a_value = a.value) === null || _a_value === void 0 ? void 0 : _a_value.length) !== null && _a_value_length !== void 0 ? _a_value_length : 0, a.important && (i += 11);
                let g = i;
                i += 2, a.dst = [
                    t,
                    m,
                    g
                ];
            }
        } else if (a.kind === "rule") {
            if (u += "".concat(c).concat(a.selector, " {\n"), r) {
                i += c.length;
                let m = i;
                i += a.selector.length, i += 1;
                let g = i;
                a.dst = [
                    t,
                    m,
                    g
                ], i += 2;
            }
            for (let m of a.nodes)u += n(m, p + 1);
            u += "".concat(c, "}\n"), r && (i += c.length, i += 2);
        } else if (a.kind === "at-rule") {
            if (a.nodes.length === 0) {
                let m = "".concat(c).concat(a.name, " ").concat(a.params, ";\n");
                if (r) {
                    i += c.length;
                    let g = i;
                    i += a.name.length, i += 1, i += a.params.length;
                    let d = i;
                    i += 2, a.dst = [
                        t,
                        g,
                        d
                    ];
                }
                return m;
            }
            if (u += "".concat(c).concat(a.name).concat(a.params ? " ".concat(a.params, " ") : " ", "{\n"), r) {
                i += c.length;
                let m = i;
                i += a.name.length, a.params && (i += 1, i += a.params.length), i += 1;
                let g = i;
                a.dst = [
                    t,
                    m,
                    g
                ], i += 2;
            }
            for (let m of a.nodes)u += n(m, p + 1);
            u += "".concat(c, "}\n"), r && (i += c.length, i += 2);
        } else if (a.kind === "comment") {
            if (u += "".concat(c, "/*").concat(a.value, "*/\n"), r) {
                i += c.length;
                let m = i;
                i += 2 + a.value.length + 2;
                let g = i;
                a.dst = [
                    t,
                    m,
                    g
                ], i += 1;
            }
        } else if (a.kind === "context" || a.kind === "at-root") return "";
        return u;
    }
    let s = "";
    for (let a of e)s += n(a, 0);
    return t.code = s, s;
}
function Ii(e, r) {
    let i = [];
    return L(e, (t, param)=>{
        let { path: n } = param;
        if (r(t)) return i = [
            ...n
        ], 2;
    }), i;
}
function cr(e, r, i) {
    let t = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : new Set;
    if (t.has(e) || (t.add(e), r.getOptions(e) & 24)) return !0;
    {
        var _i_get;
        let s = (_i_get = i.get(e)) !== null && _i_get !== void 0 ? _i_get : [];
        for (let a of s)if (cr(a, r, i, t)) return !0;
    }
    return !1;
}
function ur(e) {
    return e.split(/[\s,]+/);
}
var $t = [
    "calc",
    "min",
    "max",
    "clamp",
    "mod",
    "rem",
    "sin",
    "cos",
    "tan",
    "asin",
    "acos",
    "atan",
    "atan2",
    "pow",
    "sqrt",
    "hypot",
    "log",
    "exp",
    "round"
];
function De(e) {
    return e.indexOf("(") !== -1 && $t.some((r)=>e.includes("".concat(r, "(")));
}
function fr(e) {
    if (!$t.some((s)=>e.includes(s))) return e;
    let r = "", i = [], t = null, n = null;
    for(let s = 0; s < e.length; s++){
        let a = e.charCodeAt(s);
        if (a >= 48 && a <= 57 || t !== null && (a === 37 || a >= 97 && a <= 122 || a >= 65 && a <= 90) ? t = s : (n = t, t = null), a === 40) {
            r += e[s];
            let p = s;
            for(let c = s - 1; c >= 0; c--){
                let m = e.charCodeAt(c);
                if (m >= 48 && m <= 57) p = c;
                else if (m >= 97 && m <= 122) p = c;
                else break;
            }
            let u = e.slice(p, s);
            if ($t.includes(u)) {
                i.unshift(!0);
                continue;
            } else if (i[0] && u === "") {
                i.unshift(!0);
                continue;
            }
            i.unshift(!1);
            continue;
        } else if (a === 41) r += e[s], i.shift();
        else if (a === 44 && i[0]) {
            r += ", ";
            continue;
        } else {
            if (a === 32 && i[0] && r.charCodeAt(r.length - 1) === 32) continue;
            if ((a === 43 || a === 42 || a === 47 || a === 45) && i[0]) {
                let p = r.trimEnd(), u = p.charCodeAt(p.length - 1), c = p.charCodeAt(p.length - 2), m = e.charCodeAt(s + 1);
                if ((u === 101 || u === 69) && c >= 48 && c <= 57) {
                    r += e[s];
                    continue;
                } else if (u === 43 || u === 42 || u === 47 || u === 45) {
                    r += e[s];
                    continue;
                } else if (u === 40 || u === 44) {
                    r += e[s];
                    continue;
                } else e.charCodeAt(s - 1) === 32 ? r += "".concat(e[s], " ") : u >= 48 && u <= 57 || m >= 48 && m <= 57 || u === 41 || m === 40 || m === 43 || m === 42 || m === 47 || m === 45 || n !== null && n === s - 1 ? r += " ".concat(e[s], " ") : r += e[s];
            } else r += e[s];
        }
    }
    return r;
}
function me(e) {
    if (e.indexOf("(") === -1) return Ne(e);
    let r = G(e);
    return Nt(r), e = J(r), e = fr(e), e;
}
function Ne(e) {
    let r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
    let i = "";
    for(let t = 0; t < e.length; t++){
        let n = e[t];
        n === "\\" && e[t + 1] === "_" ? (i += "_", t += 1) : n === "_" && !r ? i += " " : i += n;
    }
    return i;
}
function Nt(e) {
    for (let r of e)switch(r.kind){
        case "function":
            {
                if (r.value === "url" || r.value.endsWith("_url")) {
                    r.value = Ne(r.value);
                    break;
                }
                if (r.value === "var" || r.value.endsWith("_var") || r.value === "theme" || r.value.endsWith("_theme")) {
                    r.value = Ne(r.value);
                    for(let i = 0; i < r.nodes.length; i++){
                        if (i == 0 && r.nodes[i].kind === "word") {
                            r.nodes[i].value = Ne(r.nodes[i].value, !0);
                            continue;
                        }
                        Nt([
                            r.nodes[i]
                        ]);
                    }
                    break;
                }
                r.value = Ne(r.value), Nt(r.nodes);
                break;
            }
        case "separator":
        case "word":
            {
                r.value = Ne(r.value);
                break;
            }
        default:
            ji(r);
    }
}
function ji(e) {
    throw new Error("Unexpected value: ".concat(e));
}
var Vt = new Uint8Array(256);
function ce(e) {
    let r = 0, i = e.length;
    for(let t = 0; t < i; t++){
        let n = e.charCodeAt(t);
        switch(n){
            case 92:
                t += 1;
                break;
            case 39:
            case 34:
                for(; ++t < i;){
                    let s = e.charCodeAt(t);
                    if (s === 92) {
                        t += 1;
                        continue;
                    }
                    if (s === n) break;
                }
                break;
            case 40:
                Vt[r] = 41, r++;
                break;
            case 91:
                Vt[r] = 93, r++;
                break;
            case 123:
                break;
            case 93:
            case 125:
            case 41:
                if (r === 0) return !1;
                r > 0 && n === Vt[r - 1] && r--;
                break;
            case 59:
                if (r === 0) return !1;
                break;
        }
    }
    return !0;
}
var rt = new Uint8Array(256);
function U(e, r) {
    let i = 0, t = [], n = 0, s = e.length, a = r.charCodeAt(0);
    for(let p = 0; p < s; p++){
        let u = e.charCodeAt(p);
        if (i === 0 && u === a) {
            t.push(e.slice(n, p)), n = p + 1;
            continue;
        }
        switch(u){
            case 92:
                p += 1;
                break;
            case 39:
            case 34:
                for(; ++p < s;){
                    let c = e.charCodeAt(p);
                    if (c === 92) {
                        p += 1;
                        continue;
                    }
                    if (c === u) break;
                }
                break;
            case 40:
                rt[i] = 41, i++;
                break;
            case 91:
                rt[i] = 93, i++;
                break;
            case 123:
                rt[i] = 125, i++;
                break;
            case 93:
            case 125:
            case 41:
                i > 0 && u === rt[i - 1] && i--;
                break;
        }
    }
    return t.push(e.slice(n)), t;
}
var zi = 58, pr = 45, dr = 97, mr = 122;
function* gr(e, r) {
    let i = U(e, ":");
    if (r.theme.prefix) {
        if (i.length === 1 || i[0] !== r.theme.prefix) return null;
        i.shift();
    }
    let t = i.pop(), n = [];
    for(let g = i.length - 1; g >= 0; --g){
        let d = r.parseVariant(i[g]);
        if (d === null) return;
        n.push(d);
    }
    let s = !1;
    t[t.length - 1] === "!" ? (s = !0, t = t.slice(0, -1)) : t[0] === "!" && (s = !0, t = t.slice(1)), r.utilities.has(t, "static") && !t.includes("[") && (yield {
        kind: "static",
        root: t,
        variants: n,
        important: s,
        raw: e
    });
    let [a, p = null, u] = U(t, "/");
    if (u) return;
    let c = p === null ? null : St(p);
    if (p !== null && c === null) return;
    if (a[0] === "[") {
        if (a[a.length - 1] !== "]") return;
        let g = a.charCodeAt(1);
        if (g !== pr && !(g >= dr && g <= mr)) return;
        a = a.slice(1, -1);
        let d = a.indexOf(":");
        if (d === -1 || d === 0 || d === a.length - 1) return;
        let w = a.slice(0, d), v = me(a.slice(d + 1));
        if (!ce(v)) return;
        yield {
            kind: "arbitrary",
            property: w,
            value: v,
            modifier: c,
            variants: n,
            important: s,
            raw: e
        };
        return;
    }
    let m;
    if (a[a.length - 1] === "]") {
        let g = a.indexOf("-[");
        if (g === -1) return;
        let d = a.slice(0, g);
        if (!r.utilities.has(d, "functional")) return;
        let w = a.slice(g + 1);
        m = [
            [
                d,
                w
            ]
        ];
    } else if (a[a.length - 1] === ")") {
        let g = a.indexOf("-(");
        if (g === -1) return;
        let d = a.slice(0, g);
        if (!r.utilities.has(d, "functional")) return;
        let w = a.slice(g + 2, -1), v = U(w, ":"), k1 = null;
        if (v.length === 2 && (k1 = v[0], w = v[1]), w[0] !== "-" || w[1] !== "-" || !ce(w)) return;
        m = [
            [
                d,
                k1 === null ? "[var(".concat(w, ")]") : "[".concat(k1, ":var(").concat(w, ")]")
            ]
        ];
    } else m = vr(a, (g)=>r.utilities.has(g, "functional"));
    for (let [g, d] of m){
        let w = {
            kind: "functional",
            root: g,
            modifier: c,
            value: null,
            variants: n,
            important: s,
            raw: e
        };
        if (d === null) {
            yield w;
            continue;
        }
        {
            let v = d.indexOf("[");
            if (v !== -1) {
                if (d[d.length - 1] !== "]") return;
                let x = me(d.slice(v + 1, -1));
                if (!ce(x)) continue;
                let S = "";
                for(let C = 0; C < x.length; C++){
                    let b = x.charCodeAt(C);
                    if (b === zi) {
                        S = x.slice(0, C), x = x.slice(C + 1);
                        break;
                    }
                    if (!(b === pr || b >= dr && b <= mr)) break;
                }
                if (x.length === 0 || x.trim().length === 0) continue;
                w.value = {
                    kind: "arbitrary",
                    dataType: S || null,
                    value: x
                };
            } else {
                var _w_modifier;
                let x = p === null || ((_w_modifier = w.modifier) === null || _w_modifier === void 0 ? void 0 : _w_modifier.kind) === "arbitrary" ? null : "".concat(d, "/").concat(p);
                w.value = {
                    kind: "named",
                    value: d,
                    fraction: x
                };
            }
        }
        yield w;
    }
}
function St(e) {
    if (e[0] === "[" && e[e.length - 1] === "]") {
        let r = me(e.slice(1, -1));
        return !ce(r) || r.length === 0 || r.trim().length === 0 ? null : {
            kind: "arbitrary",
            value: r
        };
    }
    return e[0] === "(" && e[e.length - 1] === ")" ? (e = e.slice(1, -1), e[0] !== "-" || e[1] !== "-" || !ce(e) ? null : (e = "var(".concat(e, ")"), {
        kind: "arbitrary",
        value: me(e)
    })) : {
        kind: "named",
        value: e
    };
}
function hr(e, r) {
    if (e[0] === "[" && e[e.length - 1] === "]") {
        if (e[1] === "@" && e.includes("&")) return null;
        let i = me(e.slice(1, -1));
        if (!ce(i) || i.length === 0 || i.trim().length === 0) return null;
        let t = i[0] === ">" || i[0] === "+" || i[0] === "~";
        return !t && i[0] !== "@" && !i.includes("&") && (i = "&:is(".concat(i, ")")), {
            kind: "arbitrary",
            selector: i,
            relative: t
        };
    }
    {
        let [i, t = null, n] = U(e, "/");
        if (n) return null;
        let s = vr(i, (a)=>r.variants.has(a));
        for (let [a, p] of s)switch(r.variants.kind(a)){
            case "static":
                return p !== null || t !== null ? null : {
                    kind: "static",
                    root: a
                };
            case "functional":
                {
                    let u = t === null ? null : St(t);
                    if (t !== null && u === null) return null;
                    if (p === null) return {
                        kind: "functional",
                        root: a,
                        modifier: u,
                        value: null
                    };
                    if (p[p.length - 1] === "]") {
                        if (p[0] !== "[") continue;
                        let c = me(p.slice(1, -1));
                        return !ce(c) || c.length === 0 || c.trim().length === 0 ? null : {
                            kind: "functional",
                            root: a,
                            modifier: u,
                            value: {
                                kind: "arbitrary",
                                value: c
                            }
                        };
                    }
                    if (p[p.length - 1] === ")") {
                        if (p[0] !== "(") continue;
                        let c = me(p.slice(1, -1));
                        return !ce(c) || c.length === 0 || c.trim().length === 0 || c[0] !== "-" || c[1] !== "-" ? null : {
                            kind: "functional",
                            root: a,
                            modifier: u,
                            value: {
                                kind: "arbitrary",
                                value: "var(".concat(c, ")")
                            }
                        };
                    }
                    return {
                        kind: "functional",
                        root: a,
                        modifier: u,
                        value: {
                            kind: "named",
                            value: p
                        }
                    };
                }
            case "compound":
                {
                    if (p === null) return null;
                    let u = r.parseVariant(p);
                    if (u === null || !r.variants.compoundsWith(a, u)) return null;
                    let c = t === null ? null : St(t);
                    return t !== null && c === null ? null : {
                        kind: "compound",
                        root: a,
                        modifier: c,
                        variant: u
                    };
                }
        }
    }
    return null;
}
function* vr(e, r) {
    r(e) && (yield [
        e,
        null
    ]);
    let i = e.lastIndexOf("-");
    for(; i > 0;){
        let t = e.slice(0, i);
        if (r(t)) {
            let n = [
                t,
                e.slice(i + 1)
            ];
            if (n[1] === "" || n[0] === "@" && r("@") && e[i] === "-") break;
            yield n;
        }
        i = e.lastIndexOf("-", i - 1);
    }
    e[0] === "@" && r("@") && (yield [
        "@",
        e.slice(1)
    ]);
}
function wr(e, r) {
    let i = [];
    for (let n of r.variants)i.unshift(it(n));
    e.theme.prefix && i.unshift(e.theme.prefix);
    let t = "";
    if (r.kind === "static" && (t += r.root), r.kind === "functional" && (t += r.root, r.value)) if (r.value.kind === "arbitrary") {
        if (r.value !== null) {
            let n = Tt(r.value.value), s = n ? r.value.value.slice(4, -1) : r.value.value, [a, p] = n ? [
                "(",
                ")"
            ] : [
                "[",
                "]"
            ];
            r.value.dataType ? t += "-".concat(a).concat(r.value.dataType, ":").concat(Ve(s)).concat(p) : t += "-".concat(a).concat(Ve(s)).concat(p);
        }
    } else r.value.kind === "named" && (t += "-".concat(r.value.value));
    return r.kind === "arbitrary" && (t += "[".concat(r.property, ":").concat(Ve(r.value), "]")), (r.kind === "arbitrary" || r.kind === "functional") && (t += kr(r.modifier)), r.important && (t += "!"), i.push(t), i.join(":");
}
function kr(e) {
    if (e === null) return "";
    let r = Tt(e.value), i = r ? e.value.slice(4, -1) : e.value, [t, n] = r ? [
        "(",
        ")"
    ] : [
        "[",
        "]"
    ];
    return e.kind === "arbitrary" ? "/".concat(t).concat(Ve(i)).concat(n) : e.kind === "named" ? "/".concat(e.value) : "";
}
function it(e) {
    if (e.kind === "static") return e.root;
    if (e.kind === "arbitrary") return "[".concat(Ve(Wi(e.selector)), "]");
    let r = "";
    if (e.kind === "functional") {
        r += e.root;
        let i = e.root !== "@";
        if (e.value) if (e.value.kind === "arbitrary") {
            let t = Tt(e.value.value), n = t ? e.value.value.slice(4, -1) : e.value.value, [s, a] = t ? [
                "(",
                ")"
            ] : [
                "[",
                "]"
            ];
            r += "".concat(i ? "-" : "").concat(s).concat(Ve(n)).concat(a);
        } else e.value.kind === "named" && (r += "".concat(i ? "-" : "").concat(e.value.value));
    }
    return e.kind === "compound" && (r += e.root, r += "-", r += it(e.variant)), (e.kind === "functional" || e.kind === "compound") && (r += kr(e.modifier)), r;
}
var Fi = new W((e)=>{
    let r = G(e), i = new Set;
    return ee(r, (t, param)=>{
        let { parent: n } = param;
        var _n_nodes;
        let s = n === null ? r : (_n_nodes = n.nodes) !== null && _n_nodes !== void 0 ? _n_nodes : [];
        if (t.kind === "word" && (t.value === "+" || t.value === "-" || t.value === "*" || t.value === "/")) {
            var _s_indexOf;
            let a = (_s_indexOf = s.indexOf(t)) !== null && _s_indexOf !== void 0 ? _s_indexOf : -1;
            if (a === -1) return;
            let p = s[a - 1];
            if ((p === null || p === void 0 ? void 0 : p.kind) !== "separator" || p.value !== " ") return;
            let u = s[a + 1];
            if ((u === null || u === void 0 ? void 0 : u.kind) !== "separator" || u.value !== " ") return;
            i.add(p), i.add(u);
        } else t.kind === "separator" && t.value.trim() === "/" ? t.value = "/" : t.kind === "separator" && t.value.length > 0 && t.value.trim() === "" ? (s[0] === t || s[s.length - 1] === t) && i.add(t) : t.kind === "separator" && t.value.trim() === "," && (t.value = ",");
    }), i.size > 0 && ee(r, (t, param)=>{
        let { replaceWith: n } = param;
        i.has(t) && (i.delete(t), n([]));
    }), Et(r), J(r);
});
function Ve(e) {
    return Fi.get(e);
}
var Mi = new W((e)=>{
    let r = G(e);
    return r.length === 3 && r[0].kind === "word" && r[0].value === "&" && r[1].kind === "separator" && r[1].value === ":" && r[2].kind === "function" && r[2].value === "is" ? J(r[2].nodes) : e;
});
function Wi(e) {
    return Mi.get(e);
}
function Et(e) {
    for (let r of e)switch(r.kind){
        case "function":
            {
                if (r.value === "url" || r.value.endsWith("_url")) {
                    r.value = Ke(r.value);
                    break;
                }
                if (r.value === "var" || r.value.endsWith("_var") || r.value === "theme" || r.value.endsWith("_theme")) {
                    r.value = Ke(r.value);
                    for(let i = 0; i < r.nodes.length; i++)Et([
                        r.nodes[i]
                    ]);
                    break;
                }
                r.value = Ke(r.value), Et(r.nodes);
                break;
            }
        case "separator":
            r.value = Ke(r.value);
            break;
        case "word":
            {
                (r.value[0] !== "-" || r.value[1] !== "-") && (r.value = Ke(r.value));
                break;
            }
        default:
            qi(r);
    }
}
var Bi = new W((e)=>{
    let r = G(e);
    return r.length === 1 && r[0].kind === "function" && r[0].value === "var";
});
function Tt(e) {
    return Bi.get(e);
}
function qi(e) {
    throw new Error("Unexpected value: ".concat(e));
}
function Ke(e) {
    return e.replaceAll("_", String.raw(_templateObject())).replaceAll(" ", "_");
}
function be(e, r, i) {
    if (e === r) return 0;
    let t = e.indexOf("("), n = r.indexOf("("), s = t === -1 ? e.replace(/[\d.]+/g, "") : e.slice(0, t), a = n === -1 ? r.replace(/[\d.]+/g, "") : r.slice(0, n), p = (s === a ? 0 : s < a ? -1 : 1) || (i === "asc" ? parseInt(e) - parseInt(r) : parseInt(r) - parseInt(e));
    return Number.isNaN(p) ? e < r ? -1 : 1 : p;
}
var Hi = new Set([
    "black",
    "silver",
    "gray",
    "white",
    "maroon",
    "red",
    "purple",
    "fuchsia",
    "green",
    "lime",
    "olive",
    "yellow",
    "navy",
    "blue",
    "teal",
    "aqua",
    "aliceblue",
    "antiquewhite",
    "aqua",
    "aquamarine",
    "azure",
    "beige",
    "bisque",
    "black",
    "blanchedalmond",
    "blue",
    "blueviolet",
    "brown",
    "burlywood",
    "cadetblue",
    "chartreuse",
    "chocolate",
    "coral",
    "cornflowerblue",
    "cornsilk",
    "crimson",
    "cyan",
    "darkblue",
    "darkcyan",
    "darkgoldenrod",
    "darkgray",
    "darkgreen",
    "darkgrey",
    "darkkhaki",
    "darkmagenta",
    "darkolivegreen",
    "darkorange",
    "darkorchid",
    "darkred",
    "darksalmon",
    "darkseagreen",
    "darkslateblue",
    "darkslategray",
    "darkslategrey",
    "darkturquoise",
    "darkviolet",
    "deeppink",
    "deepskyblue",
    "dimgray",
    "dimgrey",
    "dodgerblue",
    "firebrick",
    "floralwhite",
    "forestgreen",
    "fuchsia",
    "gainsboro",
    "ghostwhite",
    "gold",
    "goldenrod",
    "gray",
    "green",
    "greenyellow",
    "grey",
    "honeydew",
    "hotpink",
    "indianred",
    "indigo",
    "ivory",
    "khaki",
    "lavender",
    "lavenderblush",
    "lawngreen",
    "lemonchiffon",
    "lightblue",
    "lightcoral",
    "lightcyan",
    "lightgoldenrodyellow",
    "lightgray",
    "lightgreen",
    "lightgrey",
    "lightpink",
    "lightsalmon",
    "lightseagreen",
    "lightskyblue",
    "lightslategray",
    "lightslategrey",
    "lightsteelblue",
    "lightyellow",
    "lime",
    "limegreen",
    "linen",
    "magenta",
    "maroon",
    "mediumaquamarine",
    "mediumblue",
    "mediumorchid",
    "mediumpurple",
    "mediumseagreen",
    "mediumslateblue",
    "mediumspringgreen",
    "mediumturquoise",
    "mediumvioletred",
    "midnightblue",
    "mintcream",
    "mistyrose",
    "moccasin",
    "navajowhite",
    "navy",
    "oldlace",
    "olive",
    "olivedrab",
    "orange",
    "orangered",
    "orchid",
    "palegoldenrod",
    "palegreen",
    "paleturquoise",
    "palevioletred",
    "papayawhip",
    "peachpuff",
    "peru",
    "pink",
    "plum",
    "powderblue",
    "purple",
    "rebeccapurple",
    "red",
    "rosybrown",
    "royalblue",
    "saddlebrown",
    "salmon",
    "sandybrown",
    "seagreen",
    "seashell",
    "sienna",
    "silver",
    "skyblue",
    "slateblue",
    "slategray",
    "slategrey",
    "snow",
    "springgreen",
    "steelblue",
    "tan",
    "teal",
    "thistle",
    "tomato",
    "turquoise",
    "violet",
    "wheat",
    "white",
    "whitesmoke",
    "yellow",
    "yellowgreen",
    "transparent",
    "currentcolor",
    "canvas",
    "canvastext",
    "linktext",
    "visitedtext",
    "activetext",
    "buttonface",
    "buttontext",
    "buttonborder",
    "field",
    "fieldtext",
    "highlight",
    "highlighttext",
    "selecteditem",
    "selecteditemtext",
    "mark",
    "marktext",
    "graytext",
    "accentcolor",
    "accentcolortext"
]), Gi = /^(rgba?|hsla?|hwb|color|(ok)?(lab|lch)|light-dark|color-mix)\(/i;
function yr(e) {
    return e.charCodeAt(0) === 35 || Gi.test(e) || Hi.has(e.toLowerCase());
}
var Yi = {
    color: yr,
    length: nt,
    percentage: Rt,
    ratio: un,
    number: xr,
    integer: T,
    url: br,
    position: pn,
    "bg-size": dn,
    "line-width": Ji,
    image: en,
    "family-name": rn,
    "generic-name": tn,
    "absolute-size": nn,
    "relative-size": on,
    angle: hn,
    vector: wn
};
function Z(e, r) {
    var _Yi_i;
    if (e.startsWith("var(")) return null;
    for (let i of r)if ((_Yi_i = Yi[i]) === null || _Yi_i === void 0 ? void 0 : _Yi_i.call(Yi, e)) return i;
    return null;
}
var Zi = /^url\(.*\)$/;
function br(e) {
    return Zi.test(e);
}
function Ji(e) {
    return U(e, " ").every((r)=>nt(r) || xr(r) || r === "thin" || r === "medium" || r === "thick");
}
var Qi = /^(?:element|image|cross-fade|image-set)\(/, Xi = /^(repeating-)?(conic|linear|radial)-gradient\(/;
function en(e) {
    let r = 0;
    for (let i of U(e, ","))if (!i.startsWith("var(")) {
        if (br(i)) {
            r += 1;
            continue;
        }
        if (Xi.test(i)) {
            r += 1;
            continue;
        }
        if (Qi.test(i)) {
            r += 1;
            continue;
        }
        return !1;
    }
    return r > 0;
}
function tn(e) {
    return e === "serif" || e === "sans-serif" || e === "monospace" || e === "cursive" || e === "fantasy" || e === "system-ui" || e === "ui-serif" || e === "ui-sans-serif" || e === "ui-monospace" || e === "ui-rounded" || e === "math" || e === "emoji" || e === "fangsong";
}
function rn(e) {
    let r = 0;
    for (let i of U(e, ",")){
        let t = i.charCodeAt(0);
        if (t >= 48 && t <= 57) return !1;
        i.startsWith("var(") || (r += 1);
    }
    return r > 0;
}
function nn(e) {
    return e === "xx-small" || e === "x-small" || e === "small" || e === "medium" || e === "large" || e === "x-large" || e === "xx-large" || e === "xxx-large";
}
function on(e) {
    return e === "larger" || e === "smaller";
}
var fe = /[+-]?\d*\.?\d+(?:[eE][+-]?\d+)?/, ln = new RegExp("^".concat(fe.source, "$"));
function xr(e) {
    return ln.test(e) || De(e);
}
var an = new RegExp("^".concat(fe.source, "%$"));
function Rt(e) {
    return an.test(e) || De(e);
}
var sn = new RegExp("^".concat(fe.source, "s*/s*").concat(fe.source, "$"));
function un(e) {
    return sn.test(e) || De(e);
}
var cn = [
    "cm",
    "mm",
    "Q",
    "in",
    "pc",
    "pt",
    "px",
    "em",
    "ex",
    "ch",
    "rem",
    "lh",
    "rlh",
    "vw",
    "vh",
    "vmin",
    "vmax",
    "vb",
    "vi",
    "svw",
    "svh",
    "lvw",
    "lvh",
    "dvw",
    "dvh",
    "cqw",
    "cqh",
    "cqi",
    "cqb",
    "cqmin",
    "cqmax"
], fn = new RegExp("^".concat(fe.source, "(").concat(cn.join("|"), ")$"));
function nt(e) {
    return fn.test(e) || De(e);
}
function pn(e) {
    let r = 0;
    for (let i of U(e, " ")){
        if (i === "center" || i === "top" || i === "right" || i === "bottom" || i === "left") {
            r += 1;
            continue;
        }
        if (!i.startsWith("var(")) {
            if (nt(i) || Rt(i)) {
                r += 1;
                continue;
            }
            return !1;
        }
    }
    return r > 0;
}
function dn(e) {
    let r = 0;
    for (let i of U(e, ",")){
        if (i === "cover" || i === "contain") {
            r += 1;
            continue;
        }
        let t = U(i, " ");
        if (t.length !== 1 && t.length !== 2) return !1;
        if (t.every((n)=>n === "auto" || nt(n) || Rt(n))) {
            r += 1;
            continue;
        }
    }
    return r > 0;
}
var mn = [
    "deg",
    "rad",
    "grad",
    "turn"
], gn = new RegExp("^".concat(fe.source, "(").concat(mn.join("|"), ")$"));
function hn(e) {
    return gn.test(e);
}
var vn = new RegExp("^".concat(fe.source, " +").concat(fe.source, " +").concat(fe.source, "$"));
function wn(e) {
    return vn.test(e);
}
function T(e) {
    let r = Number(e);
    return Number.isInteger(r) && r >= 0 && String(r) === String(e);
}
function Pt(e) {
    let r = Number(e);
    return Number.isInteger(r) && r > 0 && String(r) === String(e);
}
function xe(e) {
    return Ar(e, .25);
}
function ot(e) {
    return Ar(e, .25);
}
function Ar(e, r) {
    let i = Number(e);
    return i >= 0 && i % r === 0 && String(i) === String(e);
}
var kn = new Set([
    "inset",
    "inherit",
    "initial",
    "revert",
    "unset"
]), Cr = /^-?(\d+|\.\d+)(.*?)$/g;
function Ue(e, r) {
    return U(e, ",").map((t)=>{
        t = t.trim();
        let n = U(t, " ").filter((c)=>c.trim() !== ""), s = null, a = null, p = null;
        for (let c of n)kn.has(c) || (Cr.test(c) ? (a === null ? a = c : p === null && (p = c), Cr.lastIndex = 0) : s === null && (s = c));
        if (a === null || p === null) return t;
        let u = r(s !== null && s !== void 0 ? s : "currentcolor");
        return s !== null ? t.replace(s, u) : "".concat(t, " ").concat(u);
    }).join(", ");
}
var bn = /^-?[a-z][a-zA-Z0-9/%._-]*$/, xn = /^-?[a-z][a-zA-Z0-9/%._-]*-\*$/, at = [
    "0",
    "0.5",
    "1",
    "1.5",
    "2",
    "2.5",
    "3",
    "3.5",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    "10",
    "11",
    "12",
    "14",
    "16",
    "20",
    "24",
    "28",
    "32",
    "36",
    "40",
    "44",
    "48",
    "52",
    "56",
    "60",
    "64",
    "72",
    "80",
    "96"
], Ot = class {
    static(r, i) {
        this.utilities.get(r).push({
            kind: "static",
            compileFn: i
        });
    }
    functional(r, i, t) {
        this.utilities.get(r).push({
            kind: "functional",
            compileFn: i,
            options: t
        });
    }
    has(r, i) {
        return this.utilities.has(r) && this.utilities.get(r).some((t)=>t.kind === i);
    }
    get(r) {
        return this.utilities.has(r) ? this.utilities.get(r) : [];
    }
    getCompletions(r) {
        var _this_completions_get;
        var _this_completions_get1;
        return (_this_completions_get1 = (_this_completions_get = this.completions.get(r)) === null || _this_completions_get === void 0 ? void 0 : _this_completions_get()) !== null && _this_completions_get1 !== void 0 ? _this_completions_get1 : [];
    }
    suggest(r, i) {
        let t = this.completions.get(r);
        t ? this.completions.set(r, ()=>[
                ...t === null || t === void 0 ? void 0 : t(),
                ...i === null || i === void 0 ? void 0 : i()
            ]) : this.completions.set(r, i);
    }
    keys(r) {
        let i = [];
        for (let [t, n] of this.utilities.entries())for (let s of n)if (s.kind === r) {
            i.push(t);
            break;
        }
        return i;
    }
    constructor(){
        _define_property._(this, "utilities", new W(()=>[]));
        _define_property._(this, "completions", new Map);
    }
};
function $(e, r, i) {
    return F("@property", e, [
        o("syntax", i ? '"'.concat(i, '"') : '"*"'),
        o("inherits", "false"),
        ...r ? [
            o("initial-value", r)
        ] : []
    ]);
}
function Q(e, r) {
    if (r === null) return e;
    let i = Number(r);
    return Number.isNaN(i) || (r = "".concat(i * 100, "%")), r === "100%" ? e : "color-mix(in oklab, ".concat(e, " ").concat(r, ", transparent)");
}
function Nr(e, r) {
    let i = Number(r);
    return Number.isNaN(i) || (r = "".concat(i * 100, "%")), "oklab(from ".concat(e, " l a b / ").concat(r, ")");
}
function X(e, r, i) {
    if (!r) return e;
    if (r.kind === "arbitrary") return Q(e, r.value);
    let t = i.resolve(r.value, [
        "--opacity"
    ]);
    return t ? Q(e, t) : ot(r.value) ? Q(e, "".concat(r.value, "%")) : null;
}
function te(e, r, i) {
    let t = null;
    switch(e.value.value){
        case "inherit":
            {
                t = "inherit";
                break;
            }
        case "transparent":
            {
                t = "transparent";
                break;
            }
        case "current":
            {
                t = "currentcolor";
                break;
            }
        default:
            {
                t = r.resolve(e.value.value, i);
                break;
            }
    }
    return t ? X(t, e.modifier, r) : null;
}
var Vr = /(\d+)_(\d+)/g;
function Sr(e) {
    let r = new Ot;
    function i(l, f) {
        function* h(y) {
            for (let N of e.keysInNamespaces(y))yield N.replace(Vr, (P, V, E)=>"".concat(V, ".").concat(E));
        }
        let A = [
            "1/2",
            "1/3",
            "2/3",
            "1/4",
            "2/4",
            "3/4",
            "1/5",
            "2/5",
            "3/5",
            "4/5",
            "1/6",
            "2/6",
            "3/6",
            "4/6",
            "5/6",
            "1/12",
            "2/12",
            "3/12",
            "4/12",
            "5/12",
            "6/12",
            "7/12",
            "8/12",
            "9/12",
            "10/12",
            "11/12"
        ];
        r.suggest(l, ()=>{
            let y = [];
            for (let N of f()){
                if (typeof N == "string") {
                    y.push({
                        values: [
                            N
                        ],
                        modifiers: []
                    });
                    continue;
                }
                var _N_values, _N_valueThemeKeys, _N_modifiers, _N_modifierThemeKeys;
                let P = [
                    ...(_N_values = N.values) !== null && _N_values !== void 0 ? _N_values : [],
                    ...h((_N_valueThemeKeys = N.valueThemeKeys) !== null && _N_valueThemeKeys !== void 0 ? _N_valueThemeKeys : [])
                ], V = [
                    ...(_N_modifiers = N.modifiers) !== null && _N_modifiers !== void 0 ? _N_modifiers : [],
                    ...h((_N_modifierThemeKeys = N.modifierThemeKeys) !== null && _N_modifierThemeKeys !== void 0 ? _N_modifierThemeKeys : [])
                ];
                N.supportsFractions && P.push(...A), N.hasDefaultValue && P.unshift(null), y.push({
                    supportsNegative: N.supportsNegative,
                    values: P,
                    modifiers: V
                });
            }
            return y;
        });
    }
    function t(l, f) {
        r.static(l, ()=>f.map((h)=>typeof h == "function" ? h() : o(h[0], h[1])));
    }
    function n(l, f) {
        function h(param) {
            let { negative: A } = param;
            return (y)=>{
                let N = null, P = null;
                if (y.value) if (y.value.kind === "arbitrary") {
                    if (y.modifier) return;
                    N = y.value.value, P = y.value.dataType;
                } else {
                    var _y_value_fraction, _f_themeKeys;
                    if (N = e.resolve((_y_value_fraction = y.value.fraction) !== null && _y_value_fraction !== void 0 ? _y_value_fraction : y.value.value, (_f_themeKeys = f.themeKeys) !== null && _f_themeKeys !== void 0 ? _f_themeKeys : []), N === null && f.supportsFractions && y.value.fraction) {
                        let [V, E] = U(y.value.fraction, "/");
                        if (!T(V) || !T(E)) return;
                        N = "calc(".concat(y.value.fraction, " * 100%)");
                    }
                    if (N === null && A && f.handleNegativeBareValue) {
                        if (N = f.handleNegativeBareValue(y.value), !(N === null || N === void 0 ? void 0 : N.includes("/")) && y.modifier) return;
                        if (N !== null) return f.handle(N, null);
                    }
                    if (N === null && f.handleBareValue && (N = f.handleBareValue(y.value), !(N === null || N === void 0 ? void 0 : N.includes("/")) && y.modifier)) return;
                    if (N === null && !A && f.staticValues && !y.modifier) {
                        let V = f.staticValues[y.value.value];
                        if (V) return V;
                    }
                }
                else {
                    if (y.modifier) return;
                    var _f_themeKeys1;
                    N = f.defaultValue !== void 0 ? f.defaultValue : e.resolve(null, (_f_themeKeys1 = f.themeKeys) !== null && _f_themeKeys1 !== void 0 ? _f_themeKeys1 : []);
                }
                if (N !== null) return f.handle(A ? "calc(".concat(N, " * -1)") : N, P);
            };
        }
        if (f.supportsNegative && r.functional("-".concat(l), h({
            negative: !0
        })), r.functional(l, h({
            negative: !1
        })), i(l, ()=>{
            var _f_themeKeys;
            return [
                {
                    supportsNegative: f.supportsNegative,
                    valueThemeKeys: (_f_themeKeys = f.themeKeys) !== null && _f_themeKeys !== void 0 ? _f_themeKeys : [],
                    hasDefaultValue: f.defaultValue !== void 0 && f.defaultValue !== null,
                    supportsFractions: f.supportsFractions
                }
            ];
        }), f.staticValues && Object.keys(f.staticValues).length > 0) {
            let A = Object.keys(f.staticValues);
            i(l, ()=>[
                    {
                        values: A
                    }
                ]);
        }
    }
    function s(l, f) {
        r.functional(l, (h)=>{
            if (!h.value) return;
            let A = null;
            if (h.value.kind === "arbitrary" ? (A = h.value.value, A = X(A, h.modifier, e)) : A = te(h, e, f.themeKeys), A !== null) return f.handle(A);
        }), i(l, ()=>[
                {
                    values: [
                        "current",
                        "inherit",
                        "transparent"
                    ],
                    valueThemeKeys: f.themeKeys,
                    modifiers: Array.from({
                        length: 21
                    }, (h, A)=>"".concat(A * 5))
                }
            ]);
    }
    function a(l, f, h) {
        let { supportsNegative: A = !1, supportsFractions: y = !1, staticValues: N } = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
        A && r.static("-".concat(l, "-px"), ()=>h("-1px")), r.static("".concat(l, "-px"), ()=>h("1px")), n(l, {
            themeKeys: f,
            supportsFractions: y,
            supportsNegative: A,
            defaultValue: null,
            handleBareValue: (param)=>{
                let { value: P } = param;
                let V = e.resolve(null, [
                    "--spacing"
                ]);
                return !V || !xe(P) ? null : "calc(".concat(V, " * ").concat(P, ")");
            },
            handleNegativeBareValue: (param)=>{
                let { value: P } = param;
                let V = e.resolve(null, [
                    "--spacing"
                ]);
                return !V || !xe(P) ? null : "calc(".concat(V, " * -").concat(P, ")");
            },
            handle: h,
            staticValues: N
        }), i(l, ()=>[
                {
                    values: e.get([
                        "--spacing"
                    ]) ? at : [],
                    supportsNegative: A,
                    supportsFractions: y,
                    valueThemeKeys: f
                }
            ]);
    }
    t("sr-only", [
        [
            "position",
            "absolute"
        ],
        [
            "width",
            "1px"
        ],
        [
            "height",
            "1px"
        ],
        [
            "padding",
            "0"
        ],
        [
            "margin",
            "-1px"
        ],
        [
            "overflow",
            "hidden"
        ],
        [
            "clip-path",
            "inset(50%)"
        ],
        [
            "white-space",
            "nowrap"
        ],
        [
            "border-width",
            "0"
        ]
    ]), t("not-sr-only", [
        [
            "position",
            "static"
        ],
        [
            "width",
            "auto"
        ],
        [
            "height",
            "auto"
        ],
        [
            "padding",
            "0"
        ],
        [
            "margin",
            "0"
        ],
        [
            "overflow",
            "visible"
        ],
        [
            "clip-path",
            "none"
        ],
        [
            "white-space",
            "normal"
        ]
    ]), t("pointer-events-none", [
        [
            "pointer-events",
            "none"
        ]
    ]), t("pointer-events-auto", [
        [
            "pointer-events",
            "auto"
        ]
    ]), t("visible", [
        [
            "visibility",
            "visible"
        ]
    ]), t("invisible", [
        [
            "visibility",
            "hidden"
        ]
    ]), t("collapse", [
        [
            "visibility",
            "collapse"
        ]
    ]), t("static", [
        [
            "position",
            "static"
        ]
    ]), t("fixed", [
        [
            "position",
            "fixed"
        ]
    ]), t("absolute", [
        [
            "position",
            "absolute"
        ]
    ]), t("relative", [
        [
            "position",
            "relative"
        ]
    ]), t("sticky", [
        [
            "position",
            "sticky"
        ]
    ]);
    for (let [l, f] of [
        [
            "inset",
            "inset"
        ],
        [
            "inset-x",
            "inset-inline"
        ],
        [
            "inset-y",
            "inset-block"
        ],
        [
            "start",
            "inset-inline-start"
        ],
        [
            "end",
            "inset-inline-end"
        ],
        [
            "top",
            "top"
        ],
        [
            "right",
            "right"
        ],
        [
            "bottom",
            "bottom"
        ],
        [
            "left",
            "left"
        ]
    ])t("".concat(l, "-auto"), [
        [
            f,
            "auto"
        ]
    ]), t("".concat(l, "-full"), [
        [
            f,
            "100%"
        ]
    ]), t("-".concat(l, "-full"), [
        [
            f,
            "-100%"
        ]
    ]), a(l, [
        "--inset",
        "--spacing"
    ], (h)=>[
            o(f, h)
        ], {
        supportsNegative: !0,
        supportsFractions: !0
    });
    t("isolate", [
        [
            "isolation",
            "isolate"
        ]
    ]), t("isolation-auto", [
        [
            "isolation",
            "auto"
        ]
    ]), n("z", {
        supportsNegative: !0,
        handleBareValue: (param)=>{
            let { value: l } = param;
            return T(l) ? l : null;
        },
        themeKeys: [
            "--z-index"
        ],
        handle: (l)=>[
                o("z-index", l)
            ],
        staticValues: {
            auto: [
                o("z-index", "auto")
            ]
        }
    }), i("z", ()=>[
            {
                supportsNegative: !0,
                values: [
                    "0",
                    "10",
                    "20",
                    "30",
                    "40",
                    "50"
                ],
                valueThemeKeys: [
                    "--z-index"
                ]
            }
        ]), n("order", {
        supportsNegative: !0,
        handleBareValue: (param)=>{
            let { value: l } = param;
            return T(l) ? l : null;
        },
        themeKeys: [
            "--order"
        ],
        handle: (l)=>[
                o("order", l)
            ],
        staticValues: {
            first: [
                o("order", "-9999")
            ],
            last: [
                o("order", "9999")
            ]
        }
    }), i("order", ()=>[
            {
                supportsNegative: !0,
                values: Array.from({
                    length: 12
                }, (l, f)=>"".concat(f + 1)),
                valueThemeKeys: [
                    "--order"
                ]
            }
        ]), n("col", {
        supportsNegative: !0,
        handleBareValue: (param)=>{
            let { value: l } = param;
            return T(l) ? l : null;
        },
        themeKeys: [
            "--grid-column"
        ],
        handle: (l)=>[
                o("grid-column", l)
            ],
        staticValues: {
            auto: [
                o("grid-column", "auto")
            ]
        }
    }), n("col-span", {
        handleBareValue: (param)=>{
            let { value: l } = param;
            return T(l) ? l : null;
        },
        handle: (l)=>[
                o("grid-column", "span ".concat(l, " / span ").concat(l))
            ],
        staticValues: {
            full: [
                o("grid-column", "1 / -1")
            ]
        }
    }), n("col-start", {
        supportsNegative: !0,
        handleBareValue: (param)=>{
            let { value: l } = param;
            return T(l) ? l : null;
        },
        themeKeys: [
            "--grid-column-start"
        ],
        handle: (l)=>[
                o("grid-column-start", l)
            ],
        staticValues: {
            auto: [
                o("grid-column-start", "auto")
            ]
        }
    }), n("col-end", {
        supportsNegative: !0,
        handleBareValue: (param)=>{
            let { value: l } = param;
            return T(l) ? l : null;
        },
        themeKeys: [
            "--grid-column-end"
        ],
        handle: (l)=>[
                o("grid-column-end", l)
            ],
        staticValues: {
            auto: [
                o("grid-column-end", "auto")
            ]
        }
    }), i("col-span", ()=>[
            {
                values: Array.from({
                    length: 12
                }, (l, f)=>"".concat(f + 1)),
                valueThemeKeys: []
            }
        ]), i("col-start", ()=>[
            {
                supportsNegative: !0,
                values: Array.from({
                    length: 13
                }, (l, f)=>"".concat(f + 1)),
                valueThemeKeys: [
                    "--grid-column-start"
                ]
            }
        ]), i("col-end", ()=>[
            {
                supportsNegative: !0,
                values: Array.from({
                    length: 13
                }, (l, f)=>"".concat(f + 1)),
                valueThemeKeys: [
                    "--grid-column-end"
                ]
            }
        ]), n("row", {
        supportsNegative: !0,
        handleBareValue: (param)=>{
            let { value: l } = param;
            return T(l) ? l : null;
        },
        themeKeys: [
            "--grid-row"
        ],
        handle: (l)=>[
                o("grid-row", l)
            ],
        staticValues: {
            auto: [
                o("grid-row", "auto")
            ]
        }
    }), n("row-span", {
        themeKeys: [],
        handleBareValue: (param)=>{
            let { value: l } = param;
            return T(l) ? l : null;
        },
        handle: (l)=>[
                o("grid-row", "span ".concat(l, " / span ").concat(l))
            ],
        staticValues: {
            full: [
                o("grid-row", "1 / -1")
            ]
        }
    }), n("row-start", {
        supportsNegative: !0,
        handleBareValue: (param)=>{
            let { value: l } = param;
            return T(l) ? l : null;
        },
        themeKeys: [
            "--grid-row-start"
        ],
        handle: (l)=>[
                o("grid-row-start", l)
            ],
        staticValues: {
            auto: [
                o("grid-row-start", "auto")
            ]
        }
    }), n("row-end", {
        supportsNegative: !0,
        handleBareValue: (param)=>{
            let { value: l } = param;
            return T(l) ? l : null;
        },
        themeKeys: [
            "--grid-row-end"
        ],
        handle: (l)=>[
                o("grid-row-end", l)
            ],
        staticValues: {
            auto: [
                o("grid-row-end", "auto")
            ]
        }
    }), i("row-span", ()=>[
            {
                values: Array.from({
                    length: 12
                }, (l, f)=>"".concat(f + 1)),
                valueThemeKeys: []
            }
        ]), i("row-start", ()=>[
            {
                supportsNegative: !0,
                values: Array.from({
                    length: 13
                }, (l, f)=>"".concat(f + 1)),
                valueThemeKeys: [
                    "--grid-row-start"
                ]
            }
        ]), i("row-end", ()=>[
            {
                supportsNegative: !0,
                values: Array.from({
                    length: 13
                }, (l, f)=>"".concat(f + 1)),
                valueThemeKeys: [
                    "--grid-row-end"
                ]
            }
        ]), t("float-start", [
        [
            "float",
            "inline-start"
        ]
    ]), t("float-end", [
        [
            "float",
            "inline-end"
        ]
    ]), t("float-right", [
        [
            "float",
            "right"
        ]
    ]), t("float-left", [
        [
            "float",
            "left"
        ]
    ]), t("float-none", [
        [
            "float",
            "none"
        ]
    ]), t("clear-start", [
        [
            "clear",
            "inline-start"
        ]
    ]), t("clear-end", [
        [
            "clear",
            "inline-end"
        ]
    ]), t("clear-right", [
        [
            "clear",
            "right"
        ]
    ]), t("clear-left", [
        [
            "clear",
            "left"
        ]
    ]), t("clear-both", [
        [
            "clear",
            "both"
        ]
    ]), t("clear-none", [
        [
            "clear",
            "none"
        ]
    ]);
    for (let [l, f] of [
        [
            "m",
            "margin"
        ],
        [
            "mx",
            "margin-inline"
        ],
        [
            "my",
            "margin-block"
        ],
        [
            "ms",
            "margin-inline-start"
        ],
        [
            "me",
            "margin-inline-end"
        ],
        [
            "mt",
            "margin-top"
        ],
        [
            "mr",
            "margin-right"
        ],
        [
            "mb",
            "margin-bottom"
        ],
        [
            "ml",
            "margin-left"
        ]
    ])t("".concat(l, "-auto"), [
        [
            f,
            "auto"
        ]
    ]), a(l, [
        "--margin",
        "--spacing"
    ], (h)=>[
            o(f, h)
        ], {
        supportsNegative: !0
    });
    t("box-border", [
        [
            "box-sizing",
            "border-box"
        ]
    ]), t("box-content", [
        [
            "box-sizing",
            "content-box"
        ]
    ]), n("line-clamp", {
        themeKeys: [
            "--line-clamp"
        ],
        handleBareValue: (param)=>{
            let { value: l } = param;
            return T(l) ? l : null;
        },
        handle: (l)=>[
                o("overflow", "hidden"),
                o("display", "-webkit-box"),
                o("-webkit-box-orient", "vertical"),
                o("-webkit-line-clamp", l)
            ],
        staticValues: {
            none: [
                o("overflow", "visible"),
                o("display", "block"),
                o("-webkit-box-orient", "horizontal"),
                o("-webkit-line-clamp", "unset")
            ]
        }
    }), i("line-clamp", ()=>[
            {
                values: [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "6"
                ],
                valueThemeKeys: [
                    "--line-clamp"
                ]
            }
        ]), t("block", [
        [
            "display",
            "block"
        ]
    ]), t("inline-block", [
        [
            "display",
            "inline-block"
        ]
    ]), t("inline", [
        [
            "display",
            "inline"
        ]
    ]), t("hidden", [
        [
            "display",
            "none"
        ]
    ]), t("inline-flex", [
        [
            "display",
            "inline-flex"
        ]
    ]), t("table", [
        [
            "display",
            "table"
        ]
    ]), t("inline-table", [
        [
            "display",
            "inline-table"
        ]
    ]), t("table-caption", [
        [
            "display",
            "table-caption"
        ]
    ]), t("table-cell", [
        [
            "display",
            "table-cell"
        ]
    ]), t("table-column", [
        [
            "display",
            "table-column"
        ]
    ]), t("table-column-group", [
        [
            "display",
            "table-column-group"
        ]
    ]), t("table-footer-group", [
        [
            "display",
            "table-footer-group"
        ]
    ]), t("table-header-group", [
        [
            "display",
            "table-header-group"
        ]
    ]), t("table-row-group", [
        [
            "display",
            "table-row-group"
        ]
    ]), t("table-row", [
        [
            "display",
            "table-row"
        ]
    ]), t("flow-root", [
        [
            "display",
            "flow-root"
        ]
    ]), t("flex", [
        [
            "display",
            "flex"
        ]
    ]), t("grid", [
        [
            "display",
            "grid"
        ]
    ]), t("inline-grid", [
        [
            "display",
            "inline-grid"
        ]
    ]), t("contents", [
        [
            "display",
            "contents"
        ]
    ]), t("list-item", [
        [
            "display",
            "list-item"
        ]
    ]), t("field-sizing-content", [
        [
            "field-sizing",
            "content"
        ]
    ]), t("field-sizing-fixed", [
        [
            "field-sizing",
            "fixed"
        ]
    ]), n("aspect", {
        themeKeys: [
            "--aspect"
        ],
        handleBareValue: (param)=>{
            let { fraction: l } = param;
            if (l === null) return null;
            let [f, h] = U(l, "/");
            return !T(f) || !T(h) ? null : l;
        },
        handle: (l)=>[
                o("aspect-ratio", l)
            ],
        staticValues: {
            auto: [
                o("aspect-ratio", "auto")
            ],
            square: [
                o("aspect-ratio", "1 / 1")
            ]
        }
    });
    for (let [l, f] of [
        [
            "full",
            "100%"
        ],
        [
            "svw",
            "100svw"
        ],
        [
            "lvw",
            "100lvw"
        ],
        [
            "dvw",
            "100dvw"
        ],
        [
            "svh",
            "100svh"
        ],
        [
            "lvh",
            "100lvh"
        ],
        [
            "dvh",
            "100dvh"
        ],
        [
            "min",
            "min-content"
        ],
        [
            "max",
            "max-content"
        ],
        [
            "fit",
            "fit-content"
        ]
    ])t("size-".concat(l), [
        [
            "--tw-sort",
            "size"
        ],
        [
            "width",
            f
        ],
        [
            "height",
            f
        ]
    ]), t("w-".concat(l), [
        [
            "width",
            f
        ]
    ]), t("h-".concat(l), [
        [
            "height",
            f
        ]
    ]), t("min-w-".concat(l), [
        [
            "min-width",
            f
        ]
    ]), t("min-h-".concat(l), [
        [
            "min-height",
            f
        ]
    ]), t("max-w-".concat(l), [
        [
            "max-width",
            f
        ]
    ]), t("max-h-".concat(l), [
        [
            "max-height",
            f
        ]
    ]);
    t("size-auto", [
        [
            "--tw-sort",
            "size"
        ],
        [
            "width",
            "auto"
        ],
        [
            "height",
            "auto"
        ]
    ]), t("w-auto", [
        [
            "width",
            "auto"
        ]
    ]), t("h-auto", [
        [
            "height",
            "auto"
        ]
    ]), t("min-w-auto", [
        [
            "min-width",
            "auto"
        ]
    ]), t("min-h-auto", [
        [
            "min-height",
            "auto"
        ]
    ]), t("h-lh", [
        [
            "height",
            "1lh"
        ]
    ]), t("min-h-lh", [
        [
            "min-height",
            "1lh"
        ]
    ]), t("max-h-lh", [
        [
            "max-height",
            "1lh"
        ]
    ]), t("w-screen", [
        [
            "width",
            "100vw"
        ]
    ]), t("min-w-screen", [
        [
            "min-width",
            "100vw"
        ]
    ]), t("max-w-screen", [
        [
            "max-width",
            "100vw"
        ]
    ]), t("h-screen", [
        [
            "height",
            "100vh"
        ]
    ]), t("min-h-screen", [
        [
            "min-height",
            "100vh"
        ]
    ]), t("max-h-screen", [
        [
            "max-height",
            "100vh"
        ]
    ]), t("max-w-none", [
        [
            "max-width",
            "none"
        ]
    ]), t("max-h-none", [
        [
            "max-height",
            "none"
        ]
    ]), a("size", [
        "--size",
        "--spacing"
    ], (l)=>[
            o("--tw-sort", "size"),
            o("width", l),
            o("height", l)
        ], {
        supportsFractions: !0
    });
    for (let [l, f, h] of [
        [
            "w",
            [
                "--width",
                "--spacing",
                "--container"
            ],
            "width"
        ],
        [
            "min-w",
            [
                "--min-width",
                "--spacing",
                "--container"
            ],
            "min-width"
        ],
        [
            "max-w",
            [
                "--max-width",
                "--spacing",
                "--container"
            ],
            "max-width"
        ],
        [
            "h",
            [
                "--height",
                "--spacing"
            ],
            "height"
        ],
        [
            "min-h",
            [
                "--min-height",
                "--height",
                "--spacing"
            ],
            "min-height"
        ],
        [
            "max-h",
            [
                "--max-height",
                "--height",
                "--spacing"
            ],
            "max-height"
        ]
    ])a(l, f, (A)=>[
            o(h, A)
        ], {
        supportsFractions: !0
    });
    r.static("container", ()=>{
        let l = [
            ...e.namespace("--breakpoint").values()
        ];
        l.sort((h, A)=>be(h, A, "asc"));
        let f = [
            o("--tw-sort", "--tw-container-component"),
            o("width", "100%")
        ];
        for (let h of l)f.push(F("@media", "(width >= ".concat(h, ")"), [
            o("max-width", h)
        ]));
        return f;
    }), t("flex-auto", [
        [
            "flex",
            "auto"
        ]
    ]), t("flex-initial", [
        [
            "flex",
            "0 auto"
        ]
    ]), t("flex-none", [
        [
            "flex",
            "none"
        ]
    ]), r.functional("flex", (l)=>{
        if (l.value) {
            if (l.value.kind === "arbitrary") return l.modifier ? void 0 : [
                o("flex", l.value.value)
            ];
            if (l.value.fraction) {
                let [f, h] = U(l.value.fraction, "/");
                return !T(f) || !T(h) ? void 0 : [
                    o("flex", "calc(".concat(l.value.fraction, " * 100%)"))
                ];
            }
            if (T(l.value.value)) return l.modifier ? void 0 : [
                o("flex", l.value.value)
            ];
        }
    }), i("flex", ()=>[
            {
                supportsFractions: !0
            },
            {
                values: Array.from({
                    length: 12
                }, (l, f)=>"".concat(f + 1))
            }
        ]), n("shrink", {
        defaultValue: "1",
        handleBareValue: (param)=>{
            let { value: l } = param;
            return T(l) ? l : null;
        },
        handle: (l)=>[
                o("flex-shrink", l)
            ]
    }), n("grow", {
        defaultValue: "1",
        handleBareValue: (param)=>{
            let { value: l } = param;
            return T(l) ? l : null;
        },
        handle: (l)=>[
                o("flex-grow", l)
            ]
    }), i("shrink", ()=>[
            {
                values: [
                    "0"
                ],
                valueThemeKeys: [],
                hasDefaultValue: !0
            }
        ]), i("grow", ()=>[
            {
                values: [
                    "0"
                ],
                valueThemeKeys: [],
                hasDefaultValue: !0
            }
        ]), t("basis-auto", [
        [
            "flex-basis",
            "auto"
        ]
    ]), t("basis-full", [
        [
            "flex-basis",
            "100%"
        ]
    ]), a("basis", [
        "--flex-basis",
        "--spacing",
        "--container"
    ], (l)=>[
            o("flex-basis", l)
        ], {
        supportsFractions: !0
    }), t("table-auto", [
        [
            "table-layout",
            "auto"
        ]
    ]), t("table-fixed", [
        [
            "table-layout",
            "fixed"
        ]
    ]), t("caption-top", [
        [
            "caption-side",
            "top"
        ]
    ]), t("caption-bottom", [
        [
            "caption-side",
            "bottom"
        ]
    ]), t("border-collapse", [
        [
            "border-collapse",
            "collapse"
        ]
    ]), t("border-separate", [
        [
            "border-collapse",
            "separate"
        ]
    ]);
    let p = ()=>z([
            $("--tw-border-spacing-x", "0", "<length>"),
            $("--tw-border-spacing-y", "0", "<length>")
        ]);
    a("border-spacing", [
        "--border-spacing",
        "--spacing"
    ], (l)=>[
            p(),
            o("--tw-border-spacing-x", l),
            o("--tw-border-spacing-y", l),
            o("border-spacing", "var(--tw-border-spacing-x) var(--tw-border-spacing-y)")
        ]), a("border-spacing-x", [
        "--border-spacing",
        "--spacing"
    ], (l)=>[
            p(),
            o("--tw-border-spacing-x", l),
            o("border-spacing", "var(--tw-border-spacing-x) var(--tw-border-spacing-y)")
        ]), a("border-spacing-y", [
        "--border-spacing",
        "--spacing"
    ], (l)=>[
            p(),
            o("--tw-border-spacing-y", l),
            o("border-spacing", "var(--tw-border-spacing-x) var(--tw-border-spacing-y)")
        ]), n("origin", {
        themeKeys: [
            "--transform-origin"
        ],
        handle: (l)=>[
                o("transform-origin", l)
            ],
        staticValues: {
            center: [
                o("transform-origin", "center")
            ],
            top: [
                o("transform-origin", "top")
            ],
            "top-right": [
                o("transform-origin", "100% 0")
            ],
            right: [
                o("transform-origin", "100%")
            ],
            "bottom-right": [
                o("transform-origin", "100% 100%")
            ],
            bottom: [
                o("transform-origin", "bottom")
            ],
            "bottom-left": [
                o("transform-origin", "0 100%")
            ],
            left: [
                o("transform-origin", "0")
            ],
            "top-left": [
                o("transform-origin", "0 0")
            ]
        }
    }), n("perspective-origin", {
        themeKeys: [
            "--perspective-origin"
        ],
        handle: (l)=>[
                o("perspective-origin", l)
            ],
        staticValues: {
            center: [
                o("perspective-origin", "center")
            ],
            top: [
                o("perspective-origin", "top")
            ],
            "top-right": [
                o("perspective-origin", "100% 0")
            ],
            right: [
                o("perspective-origin", "100%")
            ],
            "bottom-right": [
                o("perspective-origin", "100% 100%")
            ],
            bottom: [
                o("perspective-origin", "bottom")
            ],
            "bottom-left": [
                o("perspective-origin", "0 100%")
            ],
            left: [
                o("perspective-origin", "0")
            ],
            "top-left": [
                o("perspective-origin", "0 0")
            ]
        }
    }), n("perspective", {
        themeKeys: [
            "--perspective"
        ],
        handle: (l)=>[
                o("perspective", l)
            ],
        staticValues: {
            none: [
                o("perspective", "none")
            ]
        }
    });
    let u = ()=>z([
            $("--tw-translate-x", "0"),
            $("--tw-translate-y", "0"),
            $("--tw-translate-z", "0")
        ]);
    t("translate-none", [
        [
            "translate",
            "none"
        ]
    ]), t("-translate-full", [
        u,
        [
            "--tw-translate-x",
            "-100%"
        ],
        [
            "--tw-translate-y",
            "-100%"
        ],
        [
            "translate",
            "var(--tw-translate-x) var(--tw-translate-y)"
        ]
    ]), t("translate-full", [
        u,
        [
            "--tw-translate-x",
            "100%"
        ],
        [
            "--tw-translate-y",
            "100%"
        ],
        [
            "translate",
            "var(--tw-translate-x) var(--tw-translate-y)"
        ]
    ]), a("translate", [
        "--translate",
        "--spacing"
    ], (l)=>[
            u(),
            o("--tw-translate-x", l),
            o("--tw-translate-y", l),
            o("translate", "var(--tw-translate-x) var(--tw-translate-y)")
        ], {
        supportsNegative: !0,
        supportsFractions: !0
    });
    for (let l of [
        "x",
        "y"
    ])t("-translate-".concat(l, "-full"), [
        u,
        [
            "--tw-translate-".concat(l),
            "-100%"
        ],
        [
            "translate",
            "var(--tw-translate-x) var(--tw-translate-y)"
        ]
    ]), t("translate-".concat(l, "-full"), [
        u,
        [
            "--tw-translate-".concat(l),
            "100%"
        ],
        [
            "translate",
            "var(--tw-translate-x) var(--tw-translate-y)"
        ]
    ]), a("translate-".concat(l), [
        "--translate",
        "--spacing"
    ], (f)=>[
            u(),
            o("--tw-translate-".concat(l), f),
            o("translate", "var(--tw-translate-x) var(--tw-translate-y)")
        ], {
        supportsNegative: !0,
        supportsFractions: !0
    });
    a("translate-z", [
        "--translate",
        "--spacing"
    ], (l)=>[
            u(),
            o("--tw-translate-z", l),
            o("translate", "var(--tw-translate-x) var(--tw-translate-y) var(--tw-translate-z)")
        ], {
        supportsNegative: !0
    }), t("translate-3d", [
        u,
        [
            "translate",
            "var(--tw-translate-x) var(--tw-translate-y) var(--tw-translate-z)"
        ]
    ]);
    let c = ()=>z([
            $("--tw-scale-x", "1"),
            $("--tw-scale-y", "1"),
            $("--tw-scale-z", "1")
        ]);
    t("scale-none", [
        [
            "scale",
            "none"
        ]
    ]);
    function m(param) {
        let { negative: l } = param;
        return (f)=>{
            if (!f.value || f.modifier) return;
            let h;
            return f.value.kind === "arbitrary" ? (h = f.value.value, h = l ? "calc(".concat(h, " * -1)") : h, [
                o("scale", h)
            ]) : (h = e.resolve(f.value.value, [
                "--scale"
            ]), !h && T(f.value.value) && (h = "".concat(f.value.value, "%")), h ? (h = l ? "calc(".concat(h, " * -1)") : h, [
                c(),
                o("--tw-scale-x", h),
                o("--tw-scale-y", h),
                o("--tw-scale-z", h),
                o("scale", "var(--tw-scale-x) var(--tw-scale-y)")
            ]) : void 0);
        };
    }
    r.functional("-scale", m({
        negative: !0
    })), r.functional("scale", m({
        negative: !1
    })), i("scale", ()=>[
            {
                supportsNegative: !0,
                values: [
                    "0",
                    "50",
                    "75",
                    "90",
                    "95",
                    "100",
                    "105",
                    "110",
                    "125",
                    "150",
                    "200"
                ],
                valueThemeKeys: [
                    "--scale"
                ]
            }
        ]);
    for (let l of [
        "x",
        "y",
        "z"
    ])n("scale-".concat(l), {
        supportsNegative: !0,
        themeKeys: [
            "--scale"
        ],
        handleBareValue: (param)=>{
            let { value: f } = param;
            return T(f) ? "".concat(f, "%") : null;
        },
        handle: (f)=>[
                c(),
                o("--tw-scale-".concat(l), f),
                o("scale", "var(--tw-scale-x) var(--tw-scale-y)".concat(l === "z" ? " var(--tw-scale-z)" : ""))
            ]
    }), i("scale-".concat(l), ()=>[
            {
                supportsNegative: !0,
                values: [
                    "0",
                    "50",
                    "75",
                    "90",
                    "95",
                    "100",
                    "105",
                    "110",
                    "125",
                    "150",
                    "200"
                ],
                valueThemeKeys: [
                    "--scale"
                ]
            }
        ]);
    t("scale-3d", [
        c,
        [
            "scale",
            "var(--tw-scale-x) var(--tw-scale-y) var(--tw-scale-z)"
        ]
    ]), t("rotate-none", [
        [
            "rotate",
            "none"
        ]
    ]);
    function g(param) {
        let { negative: l } = param;
        return (f)=>{
            if (!f.value || f.modifier) return;
            let h;
            if (f.value.kind === "arbitrary") {
                h = f.value.value;
                var _f_value_dataType;
                let A = (_f_value_dataType = f.value.dataType) !== null && _f_value_dataType !== void 0 ? _f_value_dataType : Z(h, [
                    "angle",
                    "vector"
                ]);
                if (A === "vector") return [
                    o("rotate", "".concat(h, " var(--tw-rotate)"))
                ];
                if (A !== "angle") return [
                    o("rotate", l ? "calc(".concat(h, " * -1)") : h)
                ];
            } else if (h = e.resolve(f.value.value, [
                "--rotate"
            ]), !h && T(f.value.value) && (h = "".concat(f.value.value, "deg")), !h) return;
            return [
                o("rotate", l ? "calc(".concat(h, " * -1)") : h)
            ];
        };
    }
    r.functional("-rotate", g({
        negative: !0
    })), r.functional("rotate", g({
        negative: !1
    })), i("rotate", ()=>[
            {
                supportsNegative: !0,
                values: [
                    "0",
                    "1",
                    "2",
                    "3",
                    "6",
                    "12",
                    "45",
                    "90",
                    "180"
                ],
                valueThemeKeys: [
                    "--rotate"
                ]
            }
        ]);
    {
        let l = [
            "var(--tw-rotate-x,)",
            "var(--tw-rotate-y,)",
            "var(--tw-rotate-z,)",
            "var(--tw-skew-x,)",
            "var(--tw-skew-y,)"
        ].join(" "), f = ()=>z([
                $("--tw-rotate-x"),
                $("--tw-rotate-y"),
                $("--tw-rotate-z"),
                $("--tw-skew-x"),
                $("--tw-skew-y")
            ]);
        for (let h of [
            "x",
            "y",
            "z"
        ])n("rotate-".concat(h), {
            supportsNegative: !0,
            themeKeys: [
                "--rotate"
            ],
            handleBareValue: (param)=>{
                let { value: A } = param;
                return T(A) ? "".concat(A, "deg") : null;
            },
            handle: (A)=>[
                    f(),
                    o("--tw-rotate-".concat(h), "rotate".concat(h.toUpperCase(), "(").concat(A, ")")),
                    o("transform", l)
                ]
        }), i("rotate-".concat(h), ()=>[
                {
                    supportsNegative: !0,
                    values: [
                        "0",
                        "1",
                        "2",
                        "3",
                        "6",
                        "12",
                        "45",
                        "90",
                        "180"
                    ],
                    valueThemeKeys: [
                        "--rotate"
                    ]
                }
            ]);
        n("skew", {
            supportsNegative: !0,
            themeKeys: [
                "--skew"
            ],
            handleBareValue: (param)=>{
                let { value: h } = param;
                return T(h) ? "".concat(h, "deg") : null;
            },
            handle: (h)=>[
                    f(),
                    o("--tw-skew-x", "skewX(".concat(h, ")")),
                    o("--tw-skew-y", "skewY(".concat(h, ")")),
                    o("transform", l)
                ]
        }), n("skew-x", {
            supportsNegative: !0,
            themeKeys: [
                "--skew"
            ],
            handleBareValue: (param)=>{
                let { value: h } = param;
                return T(h) ? "".concat(h, "deg") : null;
            },
            handle: (h)=>[
                    f(),
                    o("--tw-skew-x", "skewX(".concat(h, ")")),
                    o("transform", l)
                ]
        }), n("skew-y", {
            supportsNegative: !0,
            themeKeys: [
                "--skew"
            ],
            handleBareValue: (param)=>{
                let { value: h } = param;
                return T(h) ? "".concat(h, "deg") : null;
            },
            handle: (h)=>[
                    f(),
                    o("--tw-skew-y", "skewY(".concat(h, ")")),
                    o("transform", l)
                ]
        }), i("skew", ()=>[
                {
                    supportsNegative: !0,
                    values: [
                        "0",
                        "1",
                        "2",
                        "3",
                        "6",
                        "12"
                    ],
                    valueThemeKeys: [
                        "--skew"
                    ]
                }
            ]), i("skew-x", ()=>[
                {
                    supportsNegative: !0,
                    values: [
                        "0",
                        "1",
                        "2",
                        "3",
                        "6",
                        "12"
                    ],
                    valueThemeKeys: [
                        "--skew"
                    ]
                }
            ]), i("skew-y", ()=>[
                {
                    supportsNegative: !0,
                    values: [
                        "0",
                        "1",
                        "2",
                        "3",
                        "6",
                        "12"
                    ],
                    valueThemeKeys: [
                        "--skew"
                    ]
                }
            ]), r.functional("transform", (h)=>{
            if (h.modifier) return;
            let A = null;
            if (h.value ? h.value.kind === "arbitrary" && (A = h.value.value) : A = l, A !== null) return [
                f(),
                o("transform", A)
            ];
        }), i("transform", ()=>[
                {
                    hasDefaultValue: !0
                }
            ]), t("transform-cpu", [
            [
                "transform",
                l
            ]
        ]), t("transform-gpu", [
            [
                "transform",
                "translateZ(0) ".concat(l)
            ]
        ]), t("transform-none", [
            [
                "transform",
                "none"
            ]
        ]);
    }
    t("transform-flat", [
        [
            "transform-style",
            "flat"
        ]
    ]), t("transform-3d", [
        [
            "transform-style",
            "preserve-3d"
        ]
    ]), t("transform-content", [
        [
            "transform-box",
            "content-box"
        ]
    ]), t("transform-border", [
        [
            "transform-box",
            "border-box"
        ]
    ]), t("transform-fill", [
        [
            "transform-box",
            "fill-box"
        ]
    ]), t("transform-stroke", [
        [
            "transform-box",
            "stroke-box"
        ]
    ]), t("transform-view", [
        [
            "transform-box",
            "view-box"
        ]
    ]), t("backface-visible", [
        [
            "backface-visibility",
            "visible"
        ]
    ]), t("backface-hidden", [
        [
            "backface-visibility",
            "hidden"
        ]
    ]);
    for (let l of [
        "auto",
        "default",
        "pointer",
        "wait",
        "text",
        "move",
        "help",
        "not-allowed",
        "none",
        "context-menu",
        "progress",
        "cell",
        "crosshair",
        "vertical-text",
        "alias",
        "copy",
        "no-drop",
        "grab",
        "grabbing",
        "all-scroll",
        "col-resize",
        "row-resize",
        "n-resize",
        "e-resize",
        "s-resize",
        "w-resize",
        "ne-resize",
        "nw-resize",
        "se-resize",
        "sw-resize",
        "ew-resize",
        "ns-resize",
        "nesw-resize",
        "nwse-resize",
        "zoom-in",
        "zoom-out"
    ])t("cursor-".concat(l), [
        [
            "cursor",
            l
        ]
    ]);
    n("cursor", {
        themeKeys: [
            "--cursor"
        ],
        handle: (l)=>[
                o("cursor", l)
            ]
    });
    for (let l of [
        "auto",
        "none",
        "manipulation"
    ])t("touch-".concat(l), [
        [
            "touch-action",
            l
        ]
    ]);
    let d = ()=>z([
            $("--tw-pan-x"),
            $("--tw-pan-y"),
            $("--tw-pinch-zoom")
        ]);
    for (let l of [
        "x",
        "left",
        "right"
    ])t("touch-pan-".concat(l), [
        d,
        [
            "--tw-pan-x",
            "pan-".concat(l)
        ],
        [
            "touch-action",
            "var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,)"
        ]
    ]);
    for (let l of [
        "y",
        "up",
        "down"
    ])t("touch-pan-".concat(l), [
        d,
        [
            "--tw-pan-y",
            "pan-".concat(l)
        ],
        [
            "touch-action",
            "var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,)"
        ]
    ]);
    t("touch-pinch-zoom", [
        d,
        [
            "--tw-pinch-zoom",
            "pinch-zoom"
        ],
        [
            "touch-action",
            "var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,)"
        ]
    ]);
    for (let l of [
        "none",
        "text",
        "all",
        "auto"
    ])t("select-".concat(l), [
        [
            "-webkit-user-select",
            l
        ],
        [
            "user-select",
            l
        ]
    ]);
    t("resize-none", [
        [
            "resize",
            "none"
        ]
    ]), t("resize-x", [
        [
            "resize",
            "horizontal"
        ]
    ]), t("resize-y", [
        [
            "resize",
            "vertical"
        ]
    ]), t("resize", [
        [
            "resize",
            "both"
        ]
    ]), t("snap-none", [
        [
            "scroll-snap-type",
            "none"
        ]
    ]);
    let w = ()=>z([
            $("--tw-scroll-snap-strictness", "proximity", "*")
        ]);
    for (let l of [
        "x",
        "y",
        "both"
    ])t("snap-".concat(l), [
        w,
        [
            "scroll-snap-type",
            "".concat(l, " var(--tw-scroll-snap-strictness)")
        ]
    ]);
    t("snap-mandatory", [
        w,
        [
            "--tw-scroll-snap-strictness",
            "mandatory"
        ]
    ]), t("snap-proximity", [
        w,
        [
            "--tw-scroll-snap-strictness",
            "proximity"
        ]
    ]), t("snap-align-none", [
        [
            "scroll-snap-align",
            "none"
        ]
    ]), t("snap-start", [
        [
            "scroll-snap-align",
            "start"
        ]
    ]), t("snap-end", [
        [
            "scroll-snap-align",
            "end"
        ]
    ]), t("snap-center", [
        [
            "scroll-snap-align",
            "center"
        ]
    ]), t("snap-normal", [
        [
            "scroll-snap-stop",
            "normal"
        ]
    ]), t("snap-always", [
        [
            "scroll-snap-stop",
            "always"
        ]
    ]);
    for (let [l, f] of [
        [
            "scroll-m",
            "scroll-margin"
        ],
        [
            "scroll-mx",
            "scroll-margin-inline"
        ],
        [
            "scroll-my",
            "scroll-margin-block"
        ],
        [
            "scroll-ms",
            "scroll-margin-inline-start"
        ],
        [
            "scroll-me",
            "scroll-margin-inline-end"
        ],
        [
            "scroll-mt",
            "scroll-margin-top"
        ],
        [
            "scroll-mr",
            "scroll-margin-right"
        ],
        [
            "scroll-mb",
            "scroll-margin-bottom"
        ],
        [
            "scroll-ml",
            "scroll-margin-left"
        ]
    ])a(l, [
        "--scroll-margin",
        "--spacing"
    ], (h)=>[
            o(f, h)
        ], {
        supportsNegative: !0
    });
    for (let [l, f] of [
        [
            "scroll-p",
            "scroll-padding"
        ],
        [
            "scroll-px",
            "scroll-padding-inline"
        ],
        [
            "scroll-py",
            "scroll-padding-block"
        ],
        [
            "scroll-ps",
            "scroll-padding-inline-start"
        ],
        [
            "scroll-pe",
            "scroll-padding-inline-end"
        ],
        [
            "scroll-pt",
            "scroll-padding-top"
        ],
        [
            "scroll-pr",
            "scroll-padding-right"
        ],
        [
            "scroll-pb",
            "scroll-padding-bottom"
        ],
        [
            "scroll-pl",
            "scroll-padding-left"
        ]
    ])a(l, [
        "--scroll-padding",
        "--spacing"
    ], (h)=>[
            o(f, h)
        ]);
    t("list-inside", [
        [
            "list-style-position",
            "inside"
        ]
    ]), t("list-outside", [
        [
            "list-style-position",
            "outside"
        ]
    ]), n("list", {
        themeKeys: [
            "--list-style-type"
        ],
        handle: (l)=>[
                o("list-style-type", l)
            ],
        staticValues: {
            none: [
                o("list-style-type", "none")
            ],
            disc: [
                o("list-style-type", "disc")
            ],
            decimal: [
                o("list-style-type", "decimal")
            ]
        }
    }), n("list-image", {
        themeKeys: [
            "--list-style-image"
        ],
        handle: (l)=>[
                o("list-style-image", l)
            ],
        staticValues: {
            none: [
                o("list-style-image", "none")
            ]
        }
    }), t("appearance-none", [
        [
            "appearance",
            "none"
        ]
    ]), t("appearance-auto", [
        [
            "appearance",
            "auto"
        ]
    ]), t("scheme-normal", [
        [
            "color-scheme",
            "normal"
        ]
    ]), t("scheme-dark", [
        [
            "color-scheme",
            "dark"
        ]
    ]), t("scheme-light", [
        [
            "color-scheme",
            "light"
        ]
    ]), t("scheme-light-dark", [
        [
            "color-scheme",
            "light dark"
        ]
    ]), t("scheme-only-dark", [
        [
            "color-scheme",
            "only dark"
        ]
    ]), t("scheme-only-light", [
        [
            "color-scheme",
            "only light"
        ]
    ]), n("columns", {
        themeKeys: [
            "--columns",
            "--container"
        ],
        handleBareValue: (param)=>{
            let { value: l } = param;
            return T(l) ? l : null;
        },
        handle: (l)=>[
                o("columns", l)
            ],
        staticValues: {
            auto: [
                o("columns", "auto")
            ]
        }
    }), i("columns", ()=>[
            {
                values: Array.from({
                    length: 12
                }, (l, f)=>"".concat(f + 1)),
                valueThemeKeys: [
                    "--columns",
                    "--container"
                ]
            }
        ]);
    for (let l of [
        "auto",
        "avoid",
        "all",
        "avoid-page",
        "page",
        "left",
        "right",
        "column"
    ])t("break-before-".concat(l), [
        [
            "break-before",
            l
        ]
    ]);
    for (let l of [
        "auto",
        "avoid",
        "avoid-page",
        "avoid-column"
    ])t("break-inside-".concat(l), [
        [
            "break-inside",
            l
        ]
    ]);
    for (let l of [
        "auto",
        "avoid",
        "all",
        "avoid-page",
        "page",
        "left",
        "right",
        "column"
    ])t("break-after-".concat(l), [
        [
            "break-after",
            l
        ]
    ]);
    t("grid-flow-row", [
        [
            "grid-auto-flow",
            "row"
        ]
    ]), t("grid-flow-col", [
        [
            "grid-auto-flow",
            "column"
        ]
    ]), t("grid-flow-dense", [
        [
            "grid-auto-flow",
            "dense"
        ]
    ]), t("grid-flow-row-dense", [
        [
            "grid-auto-flow",
            "row dense"
        ]
    ]), t("grid-flow-col-dense", [
        [
            "grid-auto-flow",
            "column dense"
        ]
    ]), n("auto-cols", {
        themeKeys: [
            "--grid-auto-columns"
        ],
        handle: (l)=>[
                o("grid-auto-columns", l)
            ],
        staticValues: {
            auto: [
                o("grid-auto-columns", "auto")
            ],
            min: [
                o("grid-auto-columns", "min-content")
            ],
            max: [
                o("grid-auto-columns", "max-content")
            ],
            fr: [
                o("grid-auto-columns", "minmax(0, 1fr)")
            ]
        }
    }), n("auto-rows", {
        themeKeys: [
            "--grid-auto-rows"
        ],
        handle: (l)=>[
                o("grid-auto-rows", l)
            ],
        staticValues: {
            auto: [
                o("grid-auto-rows", "auto")
            ],
            min: [
                o("grid-auto-rows", "min-content")
            ],
            max: [
                o("grid-auto-rows", "max-content")
            ],
            fr: [
                o("grid-auto-rows", "minmax(0, 1fr)")
            ]
        }
    }), n("grid-cols", {
        themeKeys: [
            "--grid-template-columns"
        ],
        handleBareValue: (param)=>{
            let { value: l } = param;
            return Pt(l) ? "repeat(".concat(l, ", minmax(0, 1fr))") : null;
        },
        handle: (l)=>[
                o("grid-template-columns", l)
            ],
        staticValues: {
            none: [
                o("grid-template-columns", "none")
            ],
            subgrid: [
                o("grid-template-columns", "subgrid")
            ]
        }
    }), n("grid-rows", {
        themeKeys: [
            "--grid-template-rows"
        ],
        handleBareValue: (param)=>{
            let { value: l } = param;
            return Pt(l) ? "repeat(".concat(l, ", minmax(0, 1fr))") : null;
        },
        handle: (l)=>[
                o("grid-template-rows", l)
            ],
        staticValues: {
            none: [
                o("grid-template-rows", "none")
            ],
            subgrid: [
                o("grid-template-rows", "subgrid")
            ]
        }
    }), i("grid-cols", ()=>[
            {
                values: Array.from({
                    length: 12
                }, (l, f)=>"".concat(f + 1)),
                valueThemeKeys: [
                    "--grid-template-columns"
                ]
            }
        ]), i("grid-rows", ()=>[
            {
                values: Array.from({
                    length: 12
                }, (l, f)=>"".concat(f + 1)),
                valueThemeKeys: [
                    "--grid-template-rows"
                ]
            }
        ]), t("flex-row", [
        [
            "flex-direction",
            "row"
        ]
    ]), t("flex-row-reverse", [
        [
            "flex-direction",
            "row-reverse"
        ]
    ]), t("flex-col", [
        [
            "flex-direction",
            "column"
        ]
    ]), t("flex-col-reverse", [
        [
            "flex-direction",
            "column-reverse"
        ]
    ]), t("flex-wrap", [
        [
            "flex-wrap",
            "wrap"
        ]
    ]), t("flex-nowrap", [
        [
            "flex-wrap",
            "nowrap"
        ]
    ]), t("flex-wrap-reverse", [
        [
            "flex-wrap",
            "wrap-reverse"
        ]
    ]), t("place-content-center", [
        [
            "place-content",
            "center"
        ]
    ]), t("place-content-start", [
        [
            "place-content",
            "start"
        ]
    ]), t("place-content-end", [
        [
            "place-content",
            "end"
        ]
    ]), t("place-content-center-safe", [
        [
            "place-content",
            "safe center"
        ]
    ]), t("place-content-end-safe", [
        [
            "place-content",
            "safe end"
        ]
    ]), t("place-content-between", [
        [
            "place-content",
            "space-between"
        ]
    ]), t("place-content-around", [
        [
            "place-content",
            "space-around"
        ]
    ]), t("place-content-evenly", [
        [
            "place-content",
            "space-evenly"
        ]
    ]), t("place-content-baseline", [
        [
            "place-content",
            "baseline"
        ]
    ]), t("place-content-stretch", [
        [
            "place-content",
            "stretch"
        ]
    ]), t("place-items-center", [
        [
            "place-items",
            "center"
        ]
    ]), t("place-items-start", [
        [
            "place-items",
            "start"
        ]
    ]), t("place-items-end", [
        [
            "place-items",
            "end"
        ]
    ]), t("place-items-center-safe", [
        [
            "place-items",
            "safe center"
        ]
    ]), t("place-items-end-safe", [
        [
            "place-items",
            "safe end"
        ]
    ]), t("place-items-baseline", [
        [
            "place-items",
            "baseline"
        ]
    ]), t("place-items-stretch", [
        [
            "place-items",
            "stretch"
        ]
    ]), t("content-normal", [
        [
            "align-content",
            "normal"
        ]
    ]), t("content-center", [
        [
            "align-content",
            "center"
        ]
    ]), t("content-start", [
        [
            "align-content",
            "flex-start"
        ]
    ]), t("content-end", [
        [
            "align-content",
            "flex-end"
        ]
    ]), t("content-center-safe", [
        [
            "align-content",
            "safe center"
        ]
    ]), t("content-end-safe", [
        [
            "align-content",
            "safe flex-end"
        ]
    ]), t("content-between", [
        [
            "align-content",
            "space-between"
        ]
    ]), t("content-around", [
        [
            "align-content",
            "space-around"
        ]
    ]), t("content-evenly", [
        [
            "align-content",
            "space-evenly"
        ]
    ]), t("content-baseline", [
        [
            "align-content",
            "baseline"
        ]
    ]), t("content-stretch", [
        [
            "align-content",
            "stretch"
        ]
    ]), t("items-center", [
        [
            "align-items",
            "center"
        ]
    ]), t("items-start", [
        [
            "align-items",
            "flex-start"
        ]
    ]), t("items-end", [
        [
            "align-items",
            "flex-end"
        ]
    ]), t("items-center-safe", [
        [
            "align-items",
            "safe center"
        ]
    ]), t("items-end-safe", [
        [
            "align-items",
            "safe flex-end"
        ]
    ]), t("items-baseline", [
        [
            "align-items",
            "baseline"
        ]
    ]), t("items-baseline-last", [
        [
            "align-items",
            "last baseline"
        ]
    ]), t("items-stretch", [
        [
            "align-items",
            "stretch"
        ]
    ]), t("justify-normal", [
        [
            "justify-content",
            "normal"
        ]
    ]), t("justify-center", [
        [
            "justify-content",
            "center"
        ]
    ]), t("justify-start", [
        [
            "justify-content",
            "flex-start"
        ]
    ]), t("justify-end", [
        [
            "justify-content",
            "flex-end"
        ]
    ]), t("justify-center-safe", [
        [
            "justify-content",
            "safe center"
        ]
    ]), t("justify-end-safe", [
        [
            "justify-content",
            "safe flex-end"
        ]
    ]), t("justify-between", [
        [
            "justify-content",
            "space-between"
        ]
    ]), t("justify-around", [
        [
            "justify-content",
            "space-around"
        ]
    ]), t("justify-evenly", [
        [
            "justify-content",
            "space-evenly"
        ]
    ]), t("justify-baseline", [
        [
            "justify-content",
            "baseline"
        ]
    ]), t("justify-stretch", [
        [
            "justify-content",
            "stretch"
        ]
    ]), t("justify-items-normal", [
        [
            "justify-items",
            "normal"
        ]
    ]), t("justify-items-center", [
        [
            "justify-items",
            "center"
        ]
    ]), t("justify-items-start", [
        [
            "justify-items",
            "start"
        ]
    ]), t("justify-items-end", [
        [
            "justify-items",
            "end"
        ]
    ]), t("justify-items-center-safe", [
        [
            "justify-items",
            "safe center"
        ]
    ]), t("justify-items-end-safe", [
        [
            "justify-items",
            "safe end"
        ]
    ]), t("justify-items-stretch", [
        [
            "justify-items",
            "stretch"
        ]
    ]), a("gap", [
        "--gap",
        "--spacing"
    ], (l)=>[
            o("gap", l)
        ]), a("gap-x", [
        "--gap",
        "--spacing"
    ], (l)=>[
            o("column-gap", l)
        ]), a("gap-y", [
        "--gap",
        "--spacing"
    ], (l)=>[
            o("row-gap", l)
        ]), a("space-x", [
        "--space",
        "--spacing"
    ], (l)=>[
            z([
                $("--tw-space-x-reverse", "0")
            ]),
            B(":where(& > :not(:last-child))", [
                o("--tw-sort", "row-gap"),
                o("--tw-space-x-reverse", "0"),
                o("margin-inline-start", "calc(".concat(l, " * var(--tw-space-x-reverse))")),
                o("margin-inline-end", "calc(".concat(l, " * calc(1 - var(--tw-space-x-reverse)))"))
            ])
        ], {
        supportsNegative: !0
    }), a("space-y", [
        "--space",
        "--spacing"
    ], (l)=>[
            z([
                $("--tw-space-y-reverse", "0")
            ]),
            B(":where(& > :not(:last-child))", [
                o("--tw-sort", "column-gap"),
                o("--tw-space-y-reverse", "0"),
                o("margin-block-start", "calc(".concat(l, " * var(--tw-space-y-reverse))")),
                o("margin-block-end", "calc(".concat(l, " * calc(1 - var(--tw-space-y-reverse)))"))
            ])
        ], {
        supportsNegative: !0
    }), t("space-x-reverse", [
        ()=>z([
                $("--tw-space-x-reverse", "0")
            ]),
        ()=>B(":where(& > :not(:last-child))", [
                o("--tw-sort", "row-gap"),
                o("--tw-space-x-reverse", "1")
            ])
    ]), t("space-y-reverse", [
        ()=>z([
                $("--tw-space-y-reverse", "0")
            ]),
        ()=>B(":where(& > :not(:last-child))", [
                o("--tw-sort", "column-gap"),
                o("--tw-space-y-reverse", "1")
            ])
    ]), t("accent-auto", [
        [
            "accent-color",
            "auto"
        ]
    ]), s("accent", {
        themeKeys: [
            "--accent-color",
            "--color"
        ],
        handle: (l)=>[
                o("accent-color", l)
            ]
    }), s("caret", {
        themeKeys: [
            "--caret-color",
            "--color"
        ],
        handle: (l)=>[
                o("caret-color", l)
            ]
    }), s("divide", {
        themeKeys: [
            "--divide-color",
            "--border-color",
            "--color"
        ],
        handle: (l)=>[
                B(":where(& > :not(:last-child))", [
                    o("--tw-sort", "divide-color"),
                    o("border-color", l)
                ])
            ]
    }), t("place-self-auto", [
        [
            "place-self",
            "auto"
        ]
    ]), t("place-self-start", [
        [
            "place-self",
            "start"
        ]
    ]), t("place-self-end", [
        [
            "place-self",
            "end"
        ]
    ]), t("place-self-center", [
        [
            "place-self",
            "center"
        ]
    ]), t("place-self-end-safe", [
        [
            "place-self",
            "safe end"
        ]
    ]), t("place-self-center-safe", [
        [
            "place-self",
            "safe center"
        ]
    ]), t("place-self-stretch", [
        [
            "place-self",
            "stretch"
        ]
    ]), t("self-auto", [
        [
            "align-self",
            "auto"
        ]
    ]), t("self-start", [
        [
            "align-self",
            "flex-start"
        ]
    ]), t("self-end", [
        [
            "align-self",
            "flex-end"
        ]
    ]), t("self-center", [
        [
            "align-self",
            "center"
        ]
    ]), t("self-end-safe", [
        [
            "align-self",
            "safe flex-end"
        ]
    ]), t("self-center-safe", [
        [
            "align-self",
            "safe center"
        ]
    ]), t("self-stretch", [
        [
            "align-self",
            "stretch"
        ]
    ]), t("self-baseline", [
        [
            "align-self",
            "baseline"
        ]
    ]), t("self-baseline-last", [
        [
            "align-self",
            "last baseline"
        ]
    ]), t("justify-self-auto", [
        [
            "justify-self",
            "auto"
        ]
    ]), t("justify-self-start", [
        [
            "justify-self",
            "flex-start"
        ]
    ]), t("justify-self-end", [
        [
            "justify-self",
            "flex-end"
        ]
    ]), t("justify-self-center", [
        [
            "justify-self",
            "center"
        ]
    ]), t("justify-self-end-safe", [
        [
            "justify-self",
            "safe flex-end"
        ]
    ]), t("justify-self-center-safe", [
        [
            "justify-self",
            "safe center"
        ]
    ]), t("justify-self-stretch", [
        [
            "justify-self",
            "stretch"
        ]
    ]);
    for (let l of [
        "auto",
        "hidden",
        "clip",
        "visible",
        "scroll"
    ])t("overflow-".concat(l), [
        [
            "overflow",
            l
        ]
    ]), t("overflow-x-".concat(l), [
        [
            "overflow-x",
            l
        ]
    ]), t("overflow-y-".concat(l), [
        [
            "overflow-y",
            l
        ]
    ]);
    for (let l of [
        "auto",
        "contain",
        "none"
    ])t("overscroll-".concat(l), [
        [
            "overscroll-behavior",
            l
        ]
    ]), t("overscroll-x-".concat(l), [
        [
            "overscroll-behavior-x",
            l
        ]
    ]), t("overscroll-y-".concat(l), [
        [
            "overscroll-behavior-y",
            l
        ]
    ]);
    t("scroll-auto", [
        [
            "scroll-behavior",
            "auto"
        ]
    ]), t("scroll-smooth", [
        [
            "scroll-behavior",
            "smooth"
        ]
    ]), t("truncate", [
        [
            "overflow",
            "hidden"
        ],
        [
            "text-overflow",
            "ellipsis"
        ],
        [
            "white-space",
            "nowrap"
        ]
    ]), t("text-ellipsis", [
        [
            "text-overflow",
            "ellipsis"
        ]
    ]), t("text-clip", [
        [
            "text-overflow",
            "clip"
        ]
    ]), t("hyphens-none", [
        [
            "-webkit-hyphens",
            "none"
        ],
        [
            "hyphens",
            "none"
        ]
    ]), t("hyphens-manual", [
        [
            "-webkit-hyphens",
            "manual"
        ],
        [
            "hyphens",
            "manual"
        ]
    ]), t("hyphens-auto", [
        [
            "-webkit-hyphens",
            "auto"
        ],
        [
            "hyphens",
            "auto"
        ]
    ]), t("whitespace-normal", [
        [
            "white-space",
            "normal"
        ]
    ]), t("whitespace-nowrap", [
        [
            "white-space",
            "nowrap"
        ]
    ]), t("whitespace-pre", [
        [
            "white-space",
            "pre"
        ]
    ]), t("whitespace-pre-line", [
        [
            "white-space",
            "pre-line"
        ]
    ]), t("whitespace-pre-wrap", [
        [
            "white-space",
            "pre-wrap"
        ]
    ]), t("whitespace-break-spaces", [
        [
            "white-space",
            "break-spaces"
        ]
    ]), t("text-wrap", [
        [
            "text-wrap",
            "wrap"
        ]
    ]), t("text-nowrap", [
        [
            "text-wrap",
            "nowrap"
        ]
    ]), t("text-balance", [
        [
            "text-wrap",
            "balance"
        ]
    ]), t("text-pretty", [
        [
            "text-wrap",
            "pretty"
        ]
    ]), t("break-normal", [
        [
            "overflow-wrap",
            "normal"
        ],
        [
            "word-break",
            "normal"
        ]
    ]), t("break-words", [
        [
            "overflow-wrap",
            "break-word"
        ]
    ]), t("break-all", [
        [
            "word-break",
            "break-all"
        ]
    ]), t("break-keep", [
        [
            "word-break",
            "keep-all"
        ]
    ]), t("wrap-anywhere", [
        [
            "overflow-wrap",
            "anywhere"
        ]
    ]), t("wrap-break-word", [
        [
            "overflow-wrap",
            "break-word"
        ]
    ]), t("wrap-normal", [
        [
            "overflow-wrap",
            "normal"
        ]
    ]);
    for (let [l, f] of [
        [
            "rounded",
            [
                "border-radius"
            ]
        ],
        [
            "rounded-s",
            [
                "border-start-start-radius",
                "border-end-start-radius"
            ]
        ],
        [
            "rounded-e",
            [
                "border-start-end-radius",
                "border-end-end-radius"
            ]
        ],
        [
            "rounded-t",
            [
                "border-top-left-radius",
                "border-top-right-radius"
            ]
        ],
        [
            "rounded-r",
            [
                "border-top-right-radius",
                "border-bottom-right-radius"
            ]
        ],
        [
            "rounded-b",
            [
                "border-bottom-right-radius",
                "border-bottom-left-radius"
            ]
        ],
        [
            "rounded-l",
            [
                "border-top-left-radius",
                "border-bottom-left-radius"
            ]
        ],
        [
            "rounded-ss",
            [
                "border-start-start-radius"
            ]
        ],
        [
            "rounded-se",
            [
                "border-start-end-radius"
            ]
        ],
        [
            "rounded-ee",
            [
                "border-end-end-radius"
            ]
        ],
        [
            "rounded-es",
            [
                "border-end-start-radius"
            ]
        ],
        [
            "rounded-tl",
            [
                "border-top-left-radius"
            ]
        ],
        [
            "rounded-tr",
            [
                "border-top-right-radius"
            ]
        ],
        [
            "rounded-br",
            [
                "border-bottom-right-radius"
            ]
        ],
        [
            "rounded-bl",
            [
                "border-bottom-left-radius"
            ]
        ]
    ])n(l, {
        themeKeys: [
            "--radius"
        ],
        handle: (h)=>f.map((A)=>o(A, h)),
        staticValues: {
            none: f.map((h)=>o(h, "0")),
            full: f.map((h)=>o(h, "calc(infinity * 1px)"))
        }
    });
    t("border-solid", [
        [
            "--tw-border-style",
            "solid"
        ],
        [
            "border-style",
            "solid"
        ]
    ]), t("border-dashed", [
        [
            "--tw-border-style",
            "dashed"
        ],
        [
            "border-style",
            "dashed"
        ]
    ]), t("border-dotted", [
        [
            "--tw-border-style",
            "dotted"
        ],
        [
            "border-style",
            "dotted"
        ]
    ]), t("border-double", [
        [
            "--tw-border-style",
            "double"
        ],
        [
            "border-style",
            "double"
        ]
    ]), t("border-hidden", [
        [
            "--tw-border-style",
            "hidden"
        ],
        [
            "border-style",
            "hidden"
        ]
    ]), t("border-none", [
        [
            "--tw-border-style",
            "none"
        ],
        [
            "border-style",
            "none"
        ]
    ]);
    {
        let f = function(h, A) {
            r.functional(h, (y)=>{
                if (!y.value) {
                    if (y.modifier) return;
                    var _e_get;
                    let N = (_e_get = e.get([
                        "--default-border-width"
                    ])) !== null && _e_get !== void 0 ? _e_get : "1px", P = A.width(N);
                    return P ? [
                        l(),
                        ...P
                    ] : void 0;
                }
                if (y.value.kind === "arbitrary") {
                    let N = y.value.value;
                    var _y_value_dataType;
                    switch((_y_value_dataType = y.value.dataType) !== null && _y_value_dataType !== void 0 ? _y_value_dataType : Z(N, [
                        "color",
                        "line-width",
                        "length"
                    ])){
                        case "line-width":
                        case "length":
                            {
                                if (y.modifier) return;
                                let V = A.width(N);
                                return V ? [
                                    l(),
                                    ...V
                                ] : void 0;
                            }
                        default:
                            return N = X(N, y.modifier, e), N === null ? void 0 : A.color(N);
                    }
                }
                {
                    let N = te(y, e, [
                        "--border-color",
                        "--color"
                    ]);
                    if (N) return A.color(N);
                }
                {
                    if (y.modifier) return;
                    let N = e.resolve(y.value.value, [
                        "--border-width"
                    ]);
                    if (N) {
                        let P = A.width(N);
                        return P ? [
                            l(),
                            ...P
                        ] : void 0;
                    }
                    if (T(y.value.value)) {
                        let P = A.width("".concat(y.value.value, "px"));
                        return P ? [
                            l(),
                            ...P
                        ] : void 0;
                    }
                }
            }), i(h, ()=>[
                    {
                        values: [
                            "current",
                            "inherit",
                            "transparent"
                        ],
                        valueThemeKeys: [
                            "--border-color",
                            "--color"
                        ],
                        modifiers: Array.from({
                            length: 21
                        }, (y, N)=>"".concat(N * 5)),
                        hasDefaultValue: !0
                    },
                    {
                        values: [
                            "0",
                            "2",
                            "4",
                            "8"
                        ],
                        valueThemeKeys: [
                            "--border-width"
                        ]
                    }
                ]);
        };
        var H = f;
        let l = ()=>z([
                $("--tw-border-style", "solid")
            ]);
        var _e_get, _e_get1;
        f("border", {
            width: (h)=>[
                    o("border-style", "var(--tw-border-style)"),
                    o("border-width", h)
                ],
            color: (h)=>[
                    o("border-color", h)
                ]
        }), f("border-x", {
            width: (h)=>[
                    o("border-inline-style", "var(--tw-border-style)"),
                    o("border-inline-width", h)
                ],
            color: (h)=>[
                    o("border-inline-color", h)
                ]
        }), f("border-y", {
            width: (h)=>[
                    o("border-block-style", "var(--tw-border-style)"),
                    o("border-block-width", h)
                ],
            color: (h)=>[
                    o("border-block-color", h)
                ]
        }), f("border-s", {
            width: (h)=>[
                    o("border-inline-start-style", "var(--tw-border-style)"),
                    o("border-inline-start-width", h)
                ],
            color: (h)=>[
                    o("border-inline-start-color", h)
                ]
        }), f("border-e", {
            width: (h)=>[
                    o("border-inline-end-style", "var(--tw-border-style)"),
                    o("border-inline-end-width", h)
                ],
            color: (h)=>[
                    o("border-inline-end-color", h)
                ]
        }), f("border-t", {
            width: (h)=>[
                    o("border-top-style", "var(--tw-border-style)"),
                    o("border-top-width", h)
                ],
            color: (h)=>[
                    o("border-top-color", h)
                ]
        }), f("border-r", {
            width: (h)=>[
                    o("border-right-style", "var(--tw-border-style)"),
                    o("border-right-width", h)
                ],
            color: (h)=>[
                    o("border-right-color", h)
                ]
        }), f("border-b", {
            width: (h)=>[
                    o("border-bottom-style", "var(--tw-border-style)"),
                    o("border-bottom-width", h)
                ],
            color: (h)=>[
                    o("border-bottom-color", h)
                ]
        }), f("border-l", {
            width: (h)=>[
                    o("border-left-style", "var(--tw-border-style)"),
                    o("border-left-width", h)
                ],
            color: (h)=>[
                    o("border-left-color", h)
                ]
        }), n("divide-x", {
            defaultValue: (_e_get = e.get([
                "--default-border-width"
            ])) !== null && _e_get !== void 0 ? _e_get : "1px",
            themeKeys: [
                "--divide-width",
                "--border-width"
            ],
            handleBareValue: (param)=>{
                let { value: h } = param;
                return T(h) ? "".concat(h, "px") : null;
            },
            handle: (h)=>[
                    z([
                        $("--tw-divide-x-reverse", "0")
                    ]),
                    B(":where(& > :not(:last-child))", [
                        o("--tw-sort", "divide-x-width"),
                        l(),
                        o("--tw-divide-x-reverse", "0"),
                        o("border-inline-style", "var(--tw-border-style)"),
                        o("border-inline-start-width", "calc(".concat(h, " * var(--tw-divide-x-reverse))")),
                        o("border-inline-end-width", "calc(".concat(h, " * calc(1 - var(--tw-divide-x-reverse)))"))
                    ])
                ]
        }), n("divide-y", {
            defaultValue: (_e_get1 = e.get([
                "--default-border-width"
            ])) !== null && _e_get1 !== void 0 ? _e_get1 : "1px",
            themeKeys: [
                "--divide-width",
                "--border-width"
            ],
            handleBareValue: (param)=>{
                let { value: h } = param;
                return T(h) ? "".concat(h, "px") : null;
            },
            handle: (h)=>[
                    z([
                        $("--tw-divide-y-reverse", "0")
                    ]),
                    B(":where(& > :not(:last-child))", [
                        o("--tw-sort", "divide-y-width"),
                        l(),
                        o("--tw-divide-y-reverse", "0"),
                        o("border-bottom-style", "var(--tw-border-style)"),
                        o("border-top-style", "var(--tw-border-style)"),
                        o("border-top-width", "calc(".concat(h, " * var(--tw-divide-y-reverse))")),
                        o("border-bottom-width", "calc(".concat(h, " * calc(1 - var(--tw-divide-y-reverse)))"))
                    ])
                ]
        }), i("divide-x", ()=>[
                {
                    values: [
                        "0",
                        "2",
                        "4",
                        "8"
                    ],
                    valueThemeKeys: [
                        "--divide-width",
                        "--border-width"
                    ],
                    hasDefaultValue: !0
                }
            ]), i("divide-y", ()=>[
                {
                    values: [
                        "0",
                        "2",
                        "4",
                        "8"
                    ],
                    valueThemeKeys: [
                        "--divide-width",
                        "--border-width"
                    ],
                    hasDefaultValue: !0
                }
            ]), t("divide-x-reverse", [
            ()=>z([
                    $("--tw-divide-x-reverse", "0")
                ]),
            ()=>B(":where(& > :not(:last-child))", [
                    o("--tw-divide-x-reverse", "1")
                ])
        ]), t("divide-y-reverse", [
            ()=>z([
                    $("--tw-divide-y-reverse", "0")
                ]),
            ()=>B(":where(& > :not(:last-child))", [
                    o("--tw-divide-y-reverse", "1")
                ])
        ]);
        for (let h of [
            "solid",
            "dashed",
            "dotted",
            "double",
            "none"
        ])t("divide-".concat(h), [
            ()=>B(":where(& > :not(:last-child))", [
                    o("--tw-sort", "divide-style"),
                    o("--tw-border-style", h),
                    o("border-style", h)
                ])
        ]);
    }
    t("bg-auto", [
        [
            "background-size",
            "auto"
        ]
    ]), t("bg-cover", [
        [
            "background-size",
            "cover"
        ]
    ]), t("bg-contain", [
        [
            "background-size",
            "contain"
        ]
    ]), n("bg-size", {
        handle (l) {
            if (l) return [
                o("background-size", l)
            ];
        }
    }), t("bg-fixed", [
        [
            "background-attachment",
            "fixed"
        ]
    ]), t("bg-local", [
        [
            "background-attachment",
            "local"
        ]
    ]), t("bg-scroll", [
        [
            "background-attachment",
            "scroll"
        ]
    ]), t("bg-top", [
        [
            "background-position",
            "top"
        ]
    ]), t("bg-top-left", [
        [
            "background-position",
            "left top"
        ]
    ]), t("bg-top-right", [
        [
            "background-position",
            "right top"
        ]
    ]), t("bg-bottom", [
        [
            "background-position",
            "bottom"
        ]
    ]), t("bg-bottom-left", [
        [
            "background-position",
            "left bottom"
        ]
    ]), t("bg-bottom-right", [
        [
            "background-position",
            "right bottom"
        ]
    ]), t("bg-left", [
        [
            "background-position",
            "left"
        ]
    ]), t("bg-right", [
        [
            "background-position",
            "right"
        ]
    ]), t("bg-center", [
        [
            "background-position",
            "center"
        ]
    ]), n("bg-position", {
        handle (l) {
            if (l) return [
                o("background-position", l)
            ];
        }
    }), t("bg-repeat", [
        [
            "background-repeat",
            "repeat"
        ]
    ]), t("bg-no-repeat", [
        [
            "background-repeat",
            "no-repeat"
        ]
    ]), t("bg-repeat-x", [
        [
            "background-repeat",
            "repeat-x"
        ]
    ]), t("bg-repeat-y", [
        [
            "background-repeat",
            "repeat-y"
        ]
    ]), t("bg-repeat-round", [
        [
            "background-repeat",
            "round"
        ]
    ]), t("bg-repeat-space", [
        [
            "background-repeat",
            "space"
        ]
    ]), t("bg-none", [
        [
            "background-image",
            "none"
        ]
    ]);
    {
        let h = function(N) {
            let P = "in oklab";
            if ((N === null || N === void 0 ? void 0 : N.kind) === "named") switch(N.value){
                case "longer":
                case "shorter":
                case "increasing":
                case "decreasing":
                    P = "in oklch ".concat(N.value, " hue");
                    break;
                default:
                    P = "in ".concat(N.value);
            }
            else (N === null || N === void 0 ? void 0 : N.kind) === "arbitrary" && (P = N.value);
            return P;
        }, A = function(param) {
            let { negative: N } = param;
            return (P)=>{
                if (!P.value) return;
                if (P.value.kind === "arbitrary") {
                    if (P.modifier) return;
                    let j = P.value.value;
                    var _P_value_dataType;
                    switch((_P_value_dataType = P.value.dataType) !== null && _P_value_dataType !== void 0 ? _P_value_dataType : Z(j, [
                        "angle"
                    ])){
                        case "angle":
                            return j = N ? "calc(".concat(j, " * -1)") : "".concat(j), [
                                o("--tw-gradient-position", j),
                                o("background-image", "linear-gradient(var(--tw-gradient-stops,".concat(j, "))"))
                            ];
                        default:
                            return N ? void 0 : [
                                o("--tw-gradient-position", j),
                                o("background-image", "linear-gradient(var(--tw-gradient-stops,".concat(j, "))"))
                            ];
                    }
                }
                let V = P.value.value;
                if (!N && f.has(V)) V = f.get(V);
                else if (T(V)) V = N ? "calc(".concat(V, "deg * -1)") : "".concat(V, "deg");
                else return;
                let E = h(P.modifier);
                return [
                    o("--tw-gradient-position", "".concat(V)),
                    Y("@supports (background-image: linear-gradient(in lab, red, red))", [
                        o("--tw-gradient-position", "".concat(V, " ").concat(E))
                    ]),
                    o("background-image", "linear-gradient(var(--tw-gradient-stops))")
                ];
            };
        }, y = function(param) {
            let { negative: N } = param;
            return (P)=>{
                var _P_value;
                if (((_P_value = P.value) === null || _P_value === void 0 ? void 0 : _P_value.kind) === "arbitrary") {
                    if (P.modifier) return;
                    let j = P.value.value;
                    return [
                        o("--tw-gradient-position", j),
                        o("background-image", "conic-gradient(var(--tw-gradient-stops,".concat(j, "))"))
                    ];
                }
                let V = h(P.modifier);
                if (!P.value) return [
                    o("--tw-gradient-position", V),
                    o("background-image", "conic-gradient(var(--tw-gradient-stops))")
                ];
                let E = P.value.value;
                if (T(E)) return E = N ? "calc(".concat(E, "deg * -1)") : "".concat(E, "deg"), [
                    o("--tw-gradient-position", "from ".concat(E, " ").concat(V)),
                    o("background-image", "conic-gradient(var(--tw-gradient-stops))")
                ];
            };
        };
        var O = h, I = A, q = y;
        let l = [
            "oklab",
            "oklch",
            "srgb",
            "hsl",
            "longer",
            "shorter",
            "increasing",
            "decreasing"
        ], f = new Map([
            [
                "to-t",
                "to top"
            ],
            [
                "to-tr",
                "to top right"
            ],
            [
                "to-r",
                "to right"
            ],
            [
                "to-br",
                "to bottom right"
            ],
            [
                "to-b",
                "to bottom"
            ],
            [
                "to-bl",
                "to bottom left"
            ],
            [
                "to-l",
                "to left"
            ],
            [
                "to-tl",
                "to top left"
            ]
        ]);
        r.functional("-bg-linear", A({
            negative: !0
        })), r.functional("bg-linear", A({
            negative: !1
        })), i("bg-linear", ()=>[
                {
                    values: [
                        ...f.keys()
                    ],
                    modifiers: l
                },
                {
                    values: [
                        "0",
                        "30",
                        "60",
                        "90",
                        "120",
                        "150",
                        "180",
                        "210",
                        "240",
                        "270",
                        "300",
                        "330"
                    ],
                    supportsNegative: !0,
                    modifiers: l
                }
            ]), r.functional("-bg-conic", y({
            negative: !0
        })), r.functional("bg-conic", y({
            negative: !1
        })), i("bg-conic", ()=>[
                {
                    hasDefaultValue: !0,
                    modifiers: l
                },
                {
                    values: [
                        "0",
                        "30",
                        "60",
                        "90",
                        "120",
                        "150",
                        "180",
                        "210",
                        "240",
                        "270",
                        "300",
                        "330"
                    ],
                    supportsNegative: !0,
                    modifiers: l
                }
            ]), r.functional("bg-radial", (N)=>{
            if (!N.value) {
                let P = h(N.modifier);
                return [
                    o("--tw-gradient-position", P),
                    o("background-image", "radial-gradient(var(--tw-gradient-stops))")
                ];
            }
            if (N.value.kind === "arbitrary") {
                if (N.modifier) return;
                let P = N.value.value;
                return [
                    o("--tw-gradient-position", P),
                    o("background-image", "radial-gradient(var(--tw-gradient-stops,".concat(P, "))"))
                ];
            }
        }), i("bg-radial", ()=>[
                {
                    hasDefaultValue: !0,
                    modifiers: l
                }
            ]);
    }
    r.functional("bg", (l)=>{
        if (l.value) {
            if (l.value.kind === "arbitrary") {
                let f = l.value.value;
                var _l_value_dataType;
                switch((_l_value_dataType = l.value.dataType) !== null && _l_value_dataType !== void 0 ? _l_value_dataType : Z(f, [
                    "image",
                    "color",
                    "percentage",
                    "position",
                    "bg-size",
                    "length",
                    "url"
                ])){
                    case "percentage":
                    case "position":
                        return l.modifier ? void 0 : [
                            o("background-position", f)
                        ];
                    case "bg-size":
                    case "length":
                    case "size":
                        return l.modifier ? void 0 : [
                            o("background-size", f)
                        ];
                    case "image":
                    case "url":
                        return l.modifier ? void 0 : [
                            o("background-image", f)
                        ];
                    default:
                        return f = X(f, l.modifier, e), f === null ? void 0 : [
                            o("background-color", f)
                        ];
                }
            }
            {
                let f = te(l, e, [
                    "--background-color",
                    "--color"
                ]);
                if (f) return [
                    o("background-color", f)
                ];
            }
            {
                if (l.modifier) return;
                let f = e.resolve(l.value.value, [
                    "--background-image"
                ]);
                if (f) return [
                    o("background-image", f)
                ];
            }
        }
    }), i("bg", ()=>[
            {
                values: [
                    "current",
                    "inherit",
                    "transparent"
                ],
                valueThemeKeys: [
                    "--background-color",
                    "--color"
                ],
                modifiers: Array.from({
                    length: 21
                }, (l, f)=>"".concat(f * 5))
            },
            {
                values: [],
                valueThemeKeys: [
                    "--background-image"
                ]
            }
        ]);
    let v = ()=>z([
            $("--tw-gradient-position"),
            $("--tw-gradient-from", "#0000", "<color>"),
            $("--tw-gradient-via", "#0000", "<color>"),
            $("--tw-gradient-to", "#0000", "<color>"),
            $("--tw-gradient-stops"),
            $("--tw-gradient-via-stops"),
            $("--tw-gradient-from-position", "0%", "<length-percentage>"),
            $("--tw-gradient-via-position", "50%", "<length-percentage>"),
            $("--tw-gradient-to-position", "100%", "<length-percentage>")
        ]);
    function k1(l, f) {
        r.functional(l, (h)=>{
            if (h.value) {
                if (h.value.kind === "arbitrary") {
                    let A = h.value.value;
                    var _h_value_dataType;
                    switch((_h_value_dataType = h.value.dataType) !== null && _h_value_dataType !== void 0 ? _h_value_dataType : Z(A, [
                        "color",
                        "length",
                        "percentage"
                    ])){
                        case "length":
                        case "percentage":
                            return h.modifier ? void 0 : f.position(A);
                        default:
                            return A = X(A, h.modifier, e), A === null ? void 0 : f.color(A);
                    }
                }
                {
                    let A = te(h, e, [
                        "--background-color",
                        "--color"
                    ]);
                    if (A) return f.color(A);
                }
                {
                    if (h.modifier) return;
                    let A = e.resolve(h.value.value, [
                        "--gradient-color-stop-positions"
                    ]);
                    if (A) return f.position(A);
                    if (h.value.value[h.value.value.length - 1] === "%" && T(h.value.value.slice(0, -1))) return f.position(h.value.value);
                }
            }
        }), i(l, ()=>[
                {
                    values: [
                        "current",
                        "inherit",
                        "transparent"
                    ],
                    valueThemeKeys: [
                        "--background-color",
                        "--color"
                    ],
                    modifiers: Array.from({
                        length: 21
                    }, (h, A)=>"".concat(A * 5))
                },
                {
                    values: Array.from({
                        length: 21
                    }, (h, A)=>"".concat(A * 5, "%")),
                    valueThemeKeys: [
                        "--gradient-color-stop-positions"
                    ]
                }
            ]);
    }
    k1("from", {
        color: (l)=>[
                v(),
                o("--tw-sort", "--tw-gradient-from"),
                o("--tw-gradient-from", l),
                o("--tw-gradient-stops", "var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position))")
            ],
        position: (l)=>[
                v(),
                o("--tw-gradient-from-position", l)
            ]
    }), t("via-none", [
        [
            "--tw-gradient-via-stops",
            "initial"
        ]
    ]), k1("via", {
        color: (l)=>[
                v(),
                o("--tw-sort", "--tw-gradient-via"),
                o("--tw-gradient-via", l),
                o("--tw-gradient-via-stops", "var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position)"),
                o("--tw-gradient-stops", "var(--tw-gradient-via-stops)")
            ],
        position: (l)=>[
                v(),
                o("--tw-gradient-via-position", l)
            ]
    }), k1("to", {
        color: (l)=>[
                v(),
                o("--tw-sort", "--tw-gradient-to"),
                o("--tw-gradient-to", l),
                o("--tw-gradient-stops", "var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position))")
            ],
        position: (l)=>[
                v(),
                o("--tw-gradient-to-position", l)
            ]
    }), t("mask-none", [
        [
            "mask-image",
            "none"
        ]
    ]), r.functional("mask", (l)=>{
        if (!l.value || l.modifier || l.value.kind !== "arbitrary") return;
        let f = l.value.value;
        var _l_value_dataType;
        switch((_l_value_dataType = l.value.dataType) !== null && _l_value_dataType !== void 0 ? _l_value_dataType : Z(f, [
            "image",
            "percentage",
            "position",
            "bg-size",
            "length",
            "url"
        ])){
            case "percentage":
            case "position":
                return l.modifier ? void 0 : [
                    o("mask-position", f)
                ];
            case "bg-size":
            case "length":
            case "size":
                return [
                    o("mask-size", f)
                ];
            case "image":
            case "url":
            default:
                return [
                    o("mask-image", f)
                ];
        }
    }), t("mask-add", [
        [
            "mask-composite",
            "add"
        ]
    ]), t("mask-subtract", [
        [
            "mask-composite",
            "subtract"
        ]
    ]), t("mask-intersect", [
        [
            "mask-composite",
            "intersect"
        ]
    ]), t("mask-exclude", [
        [
            "mask-composite",
            "exclude"
        ]
    ]), t("mask-alpha", [
        [
            "mask-mode",
            "alpha"
        ]
    ]), t("mask-luminance", [
        [
            "mask-mode",
            "luminance"
        ]
    ]), t("mask-match", [
        [
            "mask-mode",
            "match-source"
        ]
    ]), t("mask-type-alpha", [
        [
            "mask-type",
            "alpha"
        ]
    ]), t("mask-type-luminance", [
        [
            "mask-type",
            "luminance"
        ]
    ]), t("mask-auto", [
        [
            "mask-size",
            "auto"
        ]
    ]), t("mask-cover", [
        [
            "mask-size",
            "cover"
        ]
    ]), t("mask-contain", [
        [
            "mask-size",
            "contain"
        ]
    ]), n("mask-size", {
        handle (l) {
            if (l) return [
                o("mask-size", l)
            ];
        }
    }), t("mask-top", [
        [
            "mask-position",
            "top"
        ]
    ]), t("mask-top-left", [
        [
            "mask-position",
            "left top"
        ]
    ]), t("mask-top-right", [
        [
            "mask-position",
            "right top"
        ]
    ]), t("mask-bottom", [
        [
            "mask-position",
            "bottom"
        ]
    ]), t("mask-bottom-left", [
        [
            "mask-position",
            "left bottom"
        ]
    ]), t("mask-bottom-right", [
        [
            "mask-position",
            "right bottom"
        ]
    ]), t("mask-left", [
        [
            "mask-position",
            "left"
        ]
    ]), t("mask-right", [
        [
            "mask-position",
            "right"
        ]
    ]), t("mask-center", [
        [
            "mask-position",
            "center"
        ]
    ]), n("mask-position", {
        handle (l) {
            if (l) return [
                o("mask-position", l)
            ];
        }
    }), t("mask-repeat", [
        [
            "mask-repeat",
            "repeat"
        ]
    ]), t("mask-no-repeat", [
        [
            "mask-repeat",
            "no-repeat"
        ]
    ]), t("mask-repeat-x", [
        [
            "mask-repeat",
            "repeat-x"
        ]
    ]), t("mask-repeat-y", [
        [
            "mask-repeat",
            "repeat-y"
        ]
    ]), t("mask-repeat-round", [
        [
            "mask-repeat",
            "round"
        ]
    ]), t("mask-repeat-space", [
        [
            "mask-repeat",
            "space"
        ]
    ]), t("mask-clip-border", [
        [
            "mask-clip",
            "border-box"
        ]
    ]), t("mask-clip-padding", [
        [
            "mask-clip",
            "padding-box"
        ]
    ]), t("mask-clip-content", [
        [
            "mask-clip",
            "content-box"
        ]
    ]), t("mask-clip-fill", [
        [
            "mask-clip",
            "fill-box"
        ]
    ]), t("mask-clip-stroke", [
        [
            "mask-clip",
            "stroke-box"
        ]
    ]), t("mask-clip-view", [
        [
            "mask-clip",
            "view-box"
        ]
    ]), t("mask-no-clip", [
        [
            "mask-clip",
            "no-clip"
        ]
    ]), t("mask-origin-border", [
        [
            "mask-origin",
            "border-box"
        ]
    ]), t("mask-origin-padding", [
        [
            "mask-origin",
            "padding-box"
        ]
    ]), t("mask-origin-content", [
        [
            "mask-origin",
            "content-box"
        ]
    ]), t("mask-origin-fill", [
        [
            "mask-origin",
            "fill-box"
        ]
    ]), t("mask-origin-stroke", [
        [
            "mask-origin",
            "stroke-box"
        ]
    ]), t("mask-origin-view", [
        [
            "mask-origin",
            "view-box"
        ]
    ]);
    let x = ()=>z([
            $("--tw-mask-linear", "linear-gradient(#fff, #fff)"),
            $("--tw-mask-radial", "linear-gradient(#fff, #fff)"),
            $("--tw-mask-conic", "linear-gradient(#fff, #fff)")
        ]);
    function S(l, f) {
        r.functional(l, (h)=>{
            if (h.value) {
                if (h.value.kind === "arbitrary") {
                    let A = h.value.value;
                    var _h_value_dataType;
                    switch((_h_value_dataType = h.value.dataType) !== null && _h_value_dataType !== void 0 ? _h_value_dataType : Z(A, [
                        "length",
                        "percentage",
                        "color"
                    ])){
                        case "color":
                            return A = X(A, h.modifier, e), A === null ? void 0 : f.color(A);
                        case "percentage":
                            return h.modifier || !T(A.slice(0, -1)) ? void 0 : f.position(A);
                        default:
                            return h.modifier ? void 0 : f.position(A);
                    }
                }
                {
                    let A = te(h, e, [
                        "--background-color",
                        "--color"
                    ]);
                    if (A) return f.color(A);
                }
                {
                    if (h.modifier) return;
                    let A = Z(h.value.value, [
                        "number",
                        "percentage"
                    ]);
                    if (!A) return;
                    switch(A){
                        case "number":
                            {
                                let y = e.resolve(null, [
                                    "--spacing"
                                ]);
                                return !y || !xe(h.value.value) ? void 0 : f.position("calc(".concat(y, " * ").concat(h.value.value, ")"));
                            }
                        case "percentage":
                            return T(h.value.value.slice(0, -1)) ? f.position(h.value.value) : void 0;
                        default:
                            return;
                    }
                }
            }
        }), i(l, ()=>[
                {
                    values: [
                        "current",
                        "inherit",
                        "transparent"
                    ],
                    valueThemeKeys: [
                        "--background-color",
                        "--color"
                    ],
                    modifiers: Array.from({
                        length: 21
                    }, (h, A)=>"".concat(A * 5))
                },
                {
                    values: Array.from({
                        length: 21
                    }, (h, A)=>"".concat(A * 5, "%")),
                    valueThemeKeys: [
                        "--gradient-color-stop-positions"
                    ]
                }
            ]), i(l, ()=>[
                {
                    values: Array.from({
                        length: 21
                    }, (h, A)=>"".concat(A * 5, "%"))
                },
                {
                    values: e.get([
                        "--spacing"
                    ]) ? at : []
                },
                {
                    values: [
                        "current",
                        "inherit",
                        "transparent"
                    ],
                    valueThemeKeys: [
                        "--background-color",
                        "--color"
                    ],
                    modifiers: Array.from({
                        length: 21
                    }, (h, A)=>"".concat(A * 5))
                }
            ]);
    }
    let C = ()=>z([
            $("--tw-mask-left", "linear-gradient(#fff, #fff)"),
            $("--tw-mask-right", "linear-gradient(#fff, #fff)"),
            $("--tw-mask-bottom", "linear-gradient(#fff, #fff)"),
            $("--tw-mask-top", "linear-gradient(#fff, #fff)")
        ]);
    function b(l, f, h) {
        S(l, {
            color (A) {
                let y = [
                    x(),
                    C(),
                    o("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
                    o("mask-composite", "intersect"),
                    o("--tw-mask-linear", "var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top)")
                ];
                for (let N of [
                    "top",
                    "right",
                    "bottom",
                    "left"
                ])h[N] && (y.push(o("--tw-mask-".concat(N), "linear-gradient(to ".concat(N, ", var(--tw-mask-").concat(N, "-from-color) var(--tw-mask-").concat(N, "-from-position), var(--tw-mask-").concat(N, "-to-color) var(--tw-mask-").concat(N, "-to-position))"))), y.push(z([
                    $("--tw-mask-".concat(N, "-from-position"), "0%"),
                    $("--tw-mask-".concat(N, "-to-position"), "100%"),
                    $("--tw-mask-".concat(N, "-from-color"), "black"),
                    $("--tw-mask-".concat(N, "-to-color"), "transparent")
                ])), y.push(o("--tw-mask-".concat(N, "-").concat(f, "-color"), A)));
                return y;
            },
            position (A) {
                let y = [
                    x(),
                    C(),
                    o("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
                    o("mask-composite", "intersect"),
                    o("--tw-mask-linear", "var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top)")
                ];
                for (let N of [
                    "top",
                    "right",
                    "bottom",
                    "left"
                ])h[N] && (y.push(o("--tw-mask-".concat(N), "linear-gradient(to ".concat(N, ", var(--tw-mask-").concat(N, "-from-color) var(--tw-mask-").concat(N, "-from-position), var(--tw-mask-").concat(N, "-to-color) var(--tw-mask-").concat(N, "-to-position))"))), y.push(z([
                    $("--tw-mask-".concat(N, "-from-position"), "0%"),
                    $("--tw-mask-".concat(N, "-to-position"), "100%"),
                    $("--tw-mask-".concat(N, "-from-color"), "black"),
                    $("--tw-mask-".concat(N, "-to-color"), "transparent")
                ])), y.push(o("--tw-mask-".concat(N, "-").concat(f, "-position"), A)));
                return y;
            }
        });
    }
    b("mask-x-from", "from", {
        top: !1,
        right: !0,
        bottom: !1,
        left: !0
    }), b("mask-x-to", "to", {
        top: !1,
        right: !0,
        bottom: !1,
        left: !0
    }), b("mask-y-from", "from", {
        top: !0,
        right: !1,
        bottom: !0,
        left: !1
    }), b("mask-y-to", "to", {
        top: !0,
        right: !1,
        bottom: !0,
        left: !1
    }), b("mask-t-from", "from", {
        top: !0,
        right: !1,
        bottom: !1,
        left: !1
    }), b("mask-t-to", "to", {
        top: !0,
        right: !1,
        bottom: !1,
        left: !1
    }), b("mask-r-from", "from", {
        top: !1,
        right: !0,
        bottom: !1,
        left: !1
    }), b("mask-r-to", "to", {
        top: !1,
        right: !0,
        bottom: !1,
        left: !1
    }), b("mask-b-from", "from", {
        top: !1,
        right: !1,
        bottom: !0,
        left: !1
    }), b("mask-b-to", "to", {
        top: !1,
        right: !1,
        bottom: !0,
        left: !1
    }), b("mask-l-from", "from", {
        top: !1,
        right: !1,
        bottom: !1,
        left: !0
    }), b("mask-l-to", "to", {
        top: !1,
        right: !1,
        bottom: !1,
        left: !0
    });
    let _ = ()=>z([
            $("--tw-mask-linear-position", "0deg"),
            $("--tw-mask-linear-from-position", "0%"),
            $("--tw-mask-linear-to-position", "100%"),
            $("--tw-mask-linear-from-color", "black"),
            $("--tw-mask-linear-to-color", "transparent")
        ]);
    n("mask-linear", {
        defaultValue: null,
        supportsNegative: !0,
        supportsFractions: !1,
        handleBareValue (l) {
            return T(l.value) ? "calc(1deg * ".concat(l.value, ")") : null;
        },
        handleNegativeBareValue (l) {
            return T(l.value) ? "calc(1deg * -".concat(l.value, ")") : null;
        },
        handle: (l)=>[
                x(),
                _(),
                o("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
                o("mask-composite", "intersect"),
                o("--tw-mask-linear", "linear-gradient(var(--tw-mask-linear-stops, var(--tw-mask-linear-position)))"),
                o("--tw-mask-linear-position", l)
            ]
    }), i("mask-linear", ()=>[
            {
                supportsNegative: !0,
                values: [
                    "0",
                    "1",
                    "2",
                    "3",
                    "6",
                    "12",
                    "45",
                    "90",
                    "180"
                ]
            }
        ]), S("mask-linear-from", {
        color: (l)=>[
                x(),
                _(),
                o("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
                o("mask-composite", "intersect"),
                o("--tw-mask-linear-stops", "var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position)"),
                o("--tw-mask-linear", "linear-gradient(var(--tw-mask-linear-stops))"),
                o("--tw-mask-linear-from-color", l)
            ],
        position: (l)=>[
                x(),
                _(),
                o("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
                o("mask-composite", "intersect"),
                o("--tw-mask-linear-stops", "var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position)"),
                o("--tw-mask-linear", "linear-gradient(var(--tw-mask-linear-stops))"),
                o("--tw-mask-linear-from-position", l)
            ]
    }), S("mask-linear-to", {
        color: (l)=>[
                x(),
                _(),
                o("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
                o("mask-composite", "intersect"),
                o("--tw-mask-linear-stops", "var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position)"),
                o("--tw-mask-linear", "linear-gradient(var(--tw-mask-linear-stops))"),
                o("--tw-mask-linear-to-color", l)
            ],
        position: (l)=>[
                x(),
                _(),
                o("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
                o("mask-composite", "intersect"),
                o("--tw-mask-linear-stops", "var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position)"),
                o("--tw-mask-linear", "linear-gradient(var(--tw-mask-linear-stops))"),
                o("--tw-mask-linear-to-position", l)
            ]
    });
    let R = ()=>z([
            $("--tw-mask-radial-from-position", "0%"),
            $("--tw-mask-radial-to-position", "100%"),
            $("--tw-mask-radial-from-color", "black"),
            $("--tw-mask-radial-to-color", "transparent"),
            $("--tw-mask-radial-shape", "ellipse"),
            $("--tw-mask-radial-size", "farthest-corner"),
            $("--tw-mask-radial-position", "center")
        ]);
    t("mask-circle", [
        [
            "--tw-mask-radial-shape",
            "circle"
        ]
    ]), t("mask-ellipse", [
        [
            "--tw-mask-radial-shape",
            "ellipse"
        ]
    ]), t("mask-radial-closest-side", [
        [
            "--tw-mask-radial-size",
            "closest-side"
        ]
    ]), t("mask-radial-farthest-side", [
        [
            "--tw-mask-radial-size",
            "farthest-side"
        ]
    ]), t("mask-radial-closest-corner", [
        [
            "--tw-mask-radial-size",
            "closest-corner"
        ]
    ]), t("mask-radial-farthest-corner", [
        [
            "--tw-mask-radial-size",
            "farthest-corner"
        ]
    ]), t("mask-radial-at-top", [
        [
            "--tw-mask-radial-position",
            "top"
        ]
    ]), t("mask-radial-at-top-left", [
        [
            "--tw-mask-radial-position",
            "top left"
        ]
    ]), t("mask-radial-at-top-right", [
        [
            "--tw-mask-radial-position",
            "top right"
        ]
    ]), t("mask-radial-at-bottom", [
        [
            "--tw-mask-radial-position",
            "bottom"
        ]
    ]), t("mask-radial-at-bottom-left", [
        [
            "--tw-mask-radial-position",
            "bottom left"
        ]
    ]), t("mask-radial-at-bottom-right", [
        [
            "--tw-mask-radial-position",
            "bottom right"
        ]
    ]), t("mask-radial-at-left", [
        [
            "--tw-mask-radial-position",
            "left"
        ]
    ]), t("mask-radial-at-right", [
        [
            "--tw-mask-radial-position",
            "right"
        ]
    ]), t("mask-radial-at-center", [
        [
            "--tw-mask-radial-position",
            "center"
        ]
    ]), n("mask-radial-at", {
        defaultValue: null,
        supportsNegative: !1,
        supportsFractions: !1,
        handle: (l)=>[
                o("--tw-mask-radial-position", l)
            ]
    }), n("mask-radial", {
        defaultValue: null,
        supportsNegative: !1,
        supportsFractions: !1,
        handle: (l)=>[
                x(),
                R(),
                o("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
                o("mask-composite", "intersect"),
                o("--tw-mask-radial", "radial-gradient(var(--tw-mask-radial-stops, var(--tw-mask-radial-size)))"),
                o("--tw-mask-radial-size", l)
            ]
    }), S("mask-radial-from", {
        color: (l)=>[
                x(),
                R(),
                o("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
                o("mask-composite", "intersect"),
                o("--tw-mask-radial-stops", "var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position)"),
                o("--tw-mask-radial", "radial-gradient(var(--tw-mask-radial-stops))"),
                o("--tw-mask-radial-from-color", l)
            ],
        position: (l)=>[
                x(),
                R(),
                o("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
                o("mask-composite", "intersect"),
                o("--tw-mask-radial-stops", "var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position)"),
                o("--tw-mask-radial", "radial-gradient(var(--tw-mask-radial-stops))"),
                o("--tw-mask-radial-from-position", l)
            ]
    }), S("mask-radial-to", {
        color: (l)=>[
                x(),
                R(),
                o("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
                o("mask-composite", "intersect"),
                o("--tw-mask-radial-stops", "var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position)"),
                o("--tw-mask-radial", "radial-gradient(var(--tw-mask-radial-stops))"),
                o("--tw-mask-radial-to-color", l)
            ],
        position: (l)=>[
                x(),
                R(),
                o("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
                o("mask-composite", "intersect"),
                o("--tw-mask-radial-stops", "var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position)"),
                o("--tw-mask-radial", "radial-gradient(var(--tw-mask-radial-stops))"),
                o("--tw-mask-radial-to-position", l)
            ]
    });
    let D = ()=>z([
            $("--tw-mask-conic-position", "0deg"),
            $("--tw-mask-conic-from-position", "0%"),
            $("--tw-mask-conic-to-position", "100%"),
            $("--tw-mask-conic-from-color", "black"),
            $("--tw-mask-conic-to-color", "transparent")
        ]);
    n("mask-conic", {
        defaultValue: null,
        supportsNegative: !0,
        supportsFractions: !1,
        handleBareValue (l) {
            return T(l.value) ? "calc(1deg * ".concat(l.value, ")") : null;
        },
        handleNegativeBareValue (l) {
            return T(l.value) ? "calc(1deg * -".concat(l.value, ")") : null;
        },
        handle: (l)=>[
                x(),
                D(),
                o("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
                o("mask-composite", "intersect"),
                o("--tw-mask-conic", "conic-gradient(var(--tw-mask-conic-stops, var(--tw-mask-conic-position)))"),
                o("--tw-mask-conic-position", l)
            ]
    }), i("mask-conic", ()=>[
            {
                supportsNegative: !0,
                values: [
                    "0",
                    "1",
                    "2",
                    "3",
                    "6",
                    "12",
                    "45",
                    "90",
                    "180"
                ]
            }
        ]), S("mask-conic-from", {
        color: (l)=>[
                x(),
                D(),
                o("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
                o("mask-composite", "intersect"),
                o("--tw-mask-conic-stops", "from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position)"),
                o("--tw-mask-conic", "conic-gradient(var(--tw-mask-conic-stops))"),
                o("--tw-mask-conic-from-color", l)
            ],
        position: (l)=>[
                x(),
                D(),
                o("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
                o("mask-composite", "intersect"),
                o("--tw-mask-conic-stops", "from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position)"),
                o("--tw-mask-conic", "conic-gradient(var(--tw-mask-conic-stops))"),
                o("--tw-mask-conic-from-position", l)
            ]
    }), S("mask-conic-to", {
        color: (l)=>[
                x(),
                D(),
                o("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
                o("mask-composite", "intersect"),
                o("--tw-mask-conic-stops", "from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position)"),
                o("--tw-mask-conic", "conic-gradient(var(--tw-mask-conic-stops))"),
                o("--tw-mask-conic-to-color", l)
            ],
        position: (l)=>[
                x(),
                D(),
                o("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
                o("mask-composite", "intersect"),
                o("--tw-mask-conic-stops", "from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position)"),
                o("--tw-mask-conic", "conic-gradient(var(--tw-mask-conic-stops))"),
                o("--tw-mask-conic-to-position", l)
            ]
    }), t("box-decoration-slice", [
        [
            "-webkit-box-decoration-break",
            "slice"
        ],
        [
            "box-decoration-break",
            "slice"
        ]
    ]), t("box-decoration-clone", [
        [
            "-webkit-box-decoration-break",
            "clone"
        ],
        [
            "box-decoration-break",
            "clone"
        ]
    ]), t("bg-clip-text", [
        [
            "background-clip",
            "text"
        ]
    ]), t("bg-clip-border", [
        [
            "background-clip",
            "border-box"
        ]
    ]), t("bg-clip-padding", [
        [
            "background-clip",
            "padding-box"
        ]
    ]), t("bg-clip-content", [
        [
            "background-clip",
            "content-box"
        ]
    ]), t("bg-origin-border", [
        [
            "background-origin",
            "border-box"
        ]
    ]), t("bg-origin-padding", [
        [
            "background-origin",
            "padding-box"
        ]
    ]), t("bg-origin-content", [
        [
            "background-origin",
            "content-box"
        ]
    ]);
    for (let l of [
        "normal",
        "multiply",
        "screen",
        "overlay",
        "darken",
        "lighten",
        "color-dodge",
        "color-burn",
        "hard-light",
        "soft-light",
        "difference",
        "exclusion",
        "hue",
        "saturation",
        "color",
        "luminosity"
    ])t("bg-blend-".concat(l), [
        [
            "background-blend-mode",
            l
        ]
    ]), t("mix-blend-".concat(l), [
        [
            "mix-blend-mode",
            l
        ]
    ]);
    t("mix-blend-plus-darker", [
        [
            "mix-blend-mode",
            "plus-darker"
        ]
    ]), t("mix-blend-plus-lighter", [
        [
            "mix-blend-mode",
            "plus-lighter"
        ]
    ]), t("fill-none", [
        [
            "fill",
            "none"
        ]
    ]), r.functional("fill", (l)=>{
        if (!l.value) return;
        if (l.value.kind === "arbitrary") {
            let h = X(l.value.value, l.modifier, e);
            return h === null ? void 0 : [
                o("fill", h)
            ];
        }
        let f = te(l, e, [
            "--fill",
            "--color"
        ]);
        if (f) return [
            o("fill", f)
        ];
    }), i("fill", ()=>[
            {
                values: [
                    "current",
                    "inherit",
                    "transparent"
                ],
                valueThemeKeys: [
                    "--fill",
                    "--color"
                ],
                modifiers: Array.from({
                    length: 21
                }, (l, f)=>"".concat(f * 5))
            }
        ]), t("stroke-none", [
        [
            "stroke",
            "none"
        ]
    ]), r.functional("stroke", (l)=>{
        if (l.value) {
            if (l.value.kind === "arbitrary") {
                let f = l.value.value;
                var _l_value_dataType;
                switch((_l_value_dataType = l.value.dataType) !== null && _l_value_dataType !== void 0 ? _l_value_dataType : Z(f, [
                    "color",
                    "number",
                    "length",
                    "percentage"
                ])){
                    case "number":
                    case "length":
                    case "percentage":
                        return l.modifier ? void 0 : [
                            o("stroke-width", f)
                        ];
                    default:
                        return f = X(l.value.value, l.modifier, e), f === null ? void 0 : [
                            o("stroke", f)
                        ];
                }
            }
            {
                let f = te(l, e, [
                    "--stroke",
                    "--color"
                ]);
                if (f) return [
                    o("stroke", f)
                ];
            }
            {
                let f = e.resolve(l.value.value, [
                    "--stroke-width"
                ]);
                if (f) return [
                    o("stroke-width", f)
                ];
                if (T(l.value.value)) return [
                    o("stroke-width", l.value.value)
                ];
            }
        }
    }), i("stroke", ()=>[
            {
                values: [
                    "current",
                    "inherit",
                    "transparent"
                ],
                valueThemeKeys: [
                    "--stroke",
                    "--color"
                ],
                modifiers: Array.from({
                    length: 21
                }, (l, f)=>"".concat(f * 5))
            },
            {
                values: [
                    "0",
                    "1",
                    "2",
                    "3"
                ],
                valueThemeKeys: [
                    "--stroke-width"
                ]
            }
        ]), t("object-contain", [
        [
            "object-fit",
            "contain"
        ]
    ]), t("object-cover", [
        [
            "object-fit",
            "cover"
        ]
    ]), t("object-fill", [
        [
            "object-fit",
            "fill"
        ]
    ]), t("object-none", [
        [
            "object-fit",
            "none"
        ]
    ]), t("object-scale-down", [
        [
            "object-fit",
            "scale-down"
        ]
    ]), n("object", {
        themeKeys: [
            "--object-position"
        ],
        handle: (l)=>[
                o("object-position", l)
            ],
        staticValues: {
            top: [
                o("object-position", "top")
            ],
            "top-left": [
                o("object-position", "left top")
            ],
            "top-right": [
                o("object-position", "right top")
            ],
            bottom: [
                o("object-position", "bottom")
            ],
            "bottom-left": [
                o("object-position", "left bottom")
            ],
            "bottom-right": [
                o("object-position", "right bottom")
            ],
            left: [
                o("object-position", "left")
            ],
            right: [
                o("object-position", "right")
            ],
            center: [
                o("object-position", "center")
            ]
        }
    });
    for (let [l, f] of [
        [
            "p",
            "padding"
        ],
        [
            "px",
            "padding-inline"
        ],
        [
            "py",
            "padding-block"
        ],
        [
            "ps",
            "padding-inline-start"
        ],
        [
            "pe",
            "padding-inline-end"
        ],
        [
            "pt",
            "padding-top"
        ],
        [
            "pr",
            "padding-right"
        ],
        [
            "pb",
            "padding-bottom"
        ],
        [
            "pl",
            "padding-left"
        ]
    ])a(l, [
        "--padding",
        "--spacing"
    ], (h)=>[
            o(f, h)
        ]);
    t("text-left", [
        [
            "text-align",
            "left"
        ]
    ]), t("text-center", [
        [
            "text-align",
            "center"
        ]
    ]), t("text-right", [
        [
            "text-align",
            "right"
        ]
    ]), t("text-justify", [
        [
            "text-align",
            "justify"
        ]
    ]), t("text-start", [
        [
            "text-align",
            "start"
        ]
    ]), t("text-end", [
        [
            "text-align",
            "end"
        ]
    ]), a("indent", [
        "--text-indent",
        "--spacing"
    ], (l)=>[
            o("text-indent", l)
        ], {
        supportsNegative: !0
    }), t("align-baseline", [
        [
            "vertical-align",
            "baseline"
        ]
    ]), t("align-top", [
        [
            "vertical-align",
            "top"
        ]
    ]), t("align-middle", [
        [
            "vertical-align",
            "middle"
        ]
    ]), t("align-bottom", [
        [
            "vertical-align",
            "bottom"
        ]
    ]), t("align-text-top", [
        [
            "vertical-align",
            "text-top"
        ]
    ]), t("align-text-bottom", [
        [
            "vertical-align",
            "text-bottom"
        ]
    ]), t("align-sub", [
        [
            "vertical-align",
            "sub"
        ]
    ]), t("align-super", [
        [
            "vertical-align",
            "super"
        ]
    ]), n("align", {
        themeKeys: [],
        handle: (l)=>[
                o("vertical-align", l)
            ]
    }), r.functional("font", (l)=>{
        if (!(!l.value || l.modifier)) {
            if (l.value.kind === "arbitrary") {
                let f = l.value.value;
                var _l_value_dataType;
                switch((_l_value_dataType = l.value.dataType) !== null && _l_value_dataType !== void 0 ? _l_value_dataType : Z(f, [
                    "number",
                    "generic-name",
                    "family-name"
                ])){
                    case "generic-name":
                    case "family-name":
                        return [
                            o("font-family", f)
                        ];
                    default:
                        return [
                            z([
                                $("--tw-font-weight")
                            ]),
                            o("--tw-font-weight", f),
                            o("font-weight", f)
                        ];
                }
            }
            {
                let f = e.resolveWith(l.value.value, [
                    "--font"
                ], [
                    "--font-feature-settings",
                    "--font-variation-settings"
                ]);
                if (f) {
                    let [h, A = {}] = f;
                    return [
                        o("font-family", h),
                        o("font-feature-settings", A["--font-feature-settings"]),
                        o("font-variation-settings", A["--font-variation-settings"])
                    ];
                }
            }
            {
                let f = e.resolve(l.value.value, [
                    "--font-weight"
                ]);
                if (f) return [
                    z([
                        $("--tw-font-weight")
                    ]),
                    o("--tw-font-weight", f),
                    o("font-weight", f)
                ];
            }
        }
    }), i("font", ()=>[
            {
                values: [],
                valueThemeKeys: [
                    "--font"
                ]
            },
            {
                values: [],
                valueThemeKeys: [
                    "--font-weight"
                ]
            }
        ]), t("uppercase", [
        [
            "text-transform",
            "uppercase"
        ]
    ]), t("lowercase", [
        [
            "text-transform",
            "lowercase"
        ]
    ]), t("capitalize", [
        [
            "text-transform",
            "capitalize"
        ]
    ]), t("normal-case", [
        [
            "text-transform",
            "none"
        ]
    ]), t("italic", [
        [
            "font-style",
            "italic"
        ]
    ]), t("not-italic", [
        [
            "font-style",
            "normal"
        ]
    ]), t("underline", [
        [
            "text-decoration-line",
            "underline"
        ]
    ]), t("overline", [
        [
            "text-decoration-line",
            "overline"
        ]
    ]), t("line-through", [
        [
            "text-decoration-line",
            "line-through"
        ]
    ]), t("no-underline", [
        [
            "text-decoration-line",
            "none"
        ]
    ]), t("font-stretch-normal", [
        [
            "font-stretch",
            "normal"
        ]
    ]), t("font-stretch-ultra-condensed", [
        [
            "font-stretch",
            "ultra-condensed"
        ]
    ]), t("font-stretch-extra-condensed", [
        [
            "font-stretch",
            "extra-condensed"
        ]
    ]), t("font-stretch-condensed", [
        [
            "font-stretch",
            "condensed"
        ]
    ]), t("font-stretch-semi-condensed", [
        [
            "font-stretch",
            "semi-condensed"
        ]
    ]), t("font-stretch-semi-expanded", [
        [
            "font-stretch",
            "semi-expanded"
        ]
    ]), t("font-stretch-expanded", [
        [
            "font-stretch",
            "expanded"
        ]
    ]), t("font-stretch-extra-expanded", [
        [
            "font-stretch",
            "extra-expanded"
        ]
    ]), t("font-stretch-ultra-expanded", [
        [
            "font-stretch",
            "ultra-expanded"
        ]
    ]), n("font-stretch", {
        handleBareValue: (param)=>{
            let { value: l } = param;
            if (!l.endsWith("%")) return null;
            let f = Number(l.slice(0, -1));
            return !T(f) || Number.isNaN(f) || f < 50 || f > 200 ? null : l;
        },
        handle: (l)=>[
                o("font-stretch", l)
            ]
    }), i("font-stretch", ()=>[
            {
                values: [
                    "50%",
                    "75%",
                    "90%",
                    "95%",
                    "100%",
                    "105%",
                    "110%",
                    "125%",
                    "150%",
                    "200%"
                ]
            }
        ]), s("placeholder", {
        themeKeys: [
            "--background-color",
            "--color"
        ],
        handle: (l)=>[
                B("&::placeholder", [
                    o("--tw-sort", "placeholder-color"),
                    o("color", l)
                ])
            ]
    }), t("decoration-solid", [
        [
            "text-decoration-style",
            "solid"
        ]
    ]), t("decoration-double", [
        [
            "text-decoration-style",
            "double"
        ]
    ]), t("decoration-dotted", [
        [
            "text-decoration-style",
            "dotted"
        ]
    ]), t("decoration-dashed", [
        [
            "text-decoration-style",
            "dashed"
        ]
    ]), t("decoration-wavy", [
        [
            "text-decoration-style",
            "wavy"
        ]
    ]), t("decoration-auto", [
        [
            "text-decoration-thickness",
            "auto"
        ]
    ]), t("decoration-from-font", [
        [
            "text-decoration-thickness",
            "from-font"
        ]
    ]), r.functional("decoration", (l)=>{
        if (l.value) {
            if (l.value.kind === "arbitrary") {
                let f = l.value.value;
                var _l_value_dataType;
                switch((_l_value_dataType = l.value.dataType) !== null && _l_value_dataType !== void 0 ? _l_value_dataType : Z(f, [
                    "color",
                    "length",
                    "percentage"
                ])){
                    case "length":
                    case "percentage":
                        return l.modifier ? void 0 : [
                            o("text-decoration-thickness", f)
                        ];
                    default:
                        return f = X(f, l.modifier, e), f === null ? void 0 : [
                            o("text-decoration-color", f)
                        ];
                }
            }
            {
                let f = e.resolve(l.value.value, [
                    "--text-decoration-thickness"
                ]);
                if (f) return l.modifier ? void 0 : [
                    o("text-decoration-thickness", f)
                ];
                if (T(l.value.value)) return l.modifier ? void 0 : [
                    o("text-decoration-thickness", "".concat(l.value.value, "px"))
                ];
            }
            {
                let f = te(l, e, [
                    "--text-decoration-color",
                    "--color"
                ]);
                if (f) return [
                    o("text-decoration-color", f)
                ];
            }
        }
    }), i("decoration", ()=>[
            {
                values: [
                    "current",
                    "inherit",
                    "transparent"
                ],
                valueThemeKeys: [
                    "--text-decoration-color",
                    "--color"
                ],
                modifiers: Array.from({
                    length: 21
                }, (l, f)=>"".concat(f * 5))
            },
            {
                values: [
                    "0",
                    "1",
                    "2"
                ],
                valueThemeKeys: [
                    "--text-decoration-thickness"
                ]
            }
        ]), n("animate", {
        themeKeys: [
            "--animate"
        ],
        handle: (l)=>[
                o("animation", l)
            ],
        staticValues: {
            none: [
                o("animation", "none")
            ]
        }
    });
    {
        let l = [
            "var(--tw-blur,)",
            "var(--tw-brightness,)",
            "var(--tw-contrast,)",
            "var(--tw-grayscale,)",
            "var(--tw-hue-rotate,)",
            "var(--tw-invert,)",
            "var(--tw-saturate,)",
            "var(--tw-sepia,)",
            "var(--tw-drop-shadow,)"
        ].join(" "), f = [
            "var(--tw-backdrop-blur,)",
            "var(--tw-backdrop-brightness,)",
            "var(--tw-backdrop-contrast,)",
            "var(--tw-backdrop-grayscale,)",
            "var(--tw-backdrop-hue-rotate,)",
            "var(--tw-backdrop-invert,)",
            "var(--tw-backdrop-opacity,)",
            "var(--tw-backdrop-saturate,)",
            "var(--tw-backdrop-sepia,)"
        ].join(" "), h = ()=>z([
                $("--tw-blur"),
                $("--tw-brightness"),
                $("--tw-contrast"),
                $("--tw-grayscale"),
                $("--tw-hue-rotate"),
                $("--tw-invert"),
                $("--tw-opacity"),
                $("--tw-saturate"),
                $("--tw-sepia"),
                $("--tw-drop-shadow"),
                $("--tw-drop-shadow-color"),
                $("--tw-drop-shadow-alpha", "100%", "<percentage>"),
                $("--tw-drop-shadow-size")
            ]), A = ()=>z([
                $("--tw-backdrop-blur"),
                $("--tw-backdrop-brightness"),
                $("--tw-backdrop-contrast"),
                $("--tw-backdrop-grayscale"),
                $("--tw-backdrop-hue-rotate"),
                $("--tw-backdrop-invert"),
                $("--tw-backdrop-opacity"),
                $("--tw-backdrop-saturate"),
                $("--tw-backdrop-sepia")
            ]);
        r.functional("filter", (y)=>{
            if (!y.modifier) {
                if (y.value === null) return [
                    h(),
                    o("filter", l)
                ];
                if (y.value.kind === "arbitrary") return [
                    o("filter", y.value.value)
                ];
                switch(y.value.value){
                    case "none":
                        return [
                            o("filter", "none")
                        ];
                }
            }
        }), r.functional("backdrop-filter", (y)=>{
            if (!y.modifier) {
                if (y.value === null) return [
                    A(),
                    o("-webkit-backdrop-filter", f),
                    o("backdrop-filter", f)
                ];
                if (y.value.kind === "arbitrary") return [
                    o("-webkit-backdrop-filter", y.value.value),
                    o("backdrop-filter", y.value.value)
                ];
                switch(y.value.value){
                    case "none":
                        return [
                            o("-webkit-backdrop-filter", "none"),
                            o("backdrop-filter", "none")
                        ];
                }
            }
        }), n("blur", {
            themeKeys: [
                "--blur"
            ],
            handle: (y)=>[
                    h(),
                    o("--tw-blur", "blur(".concat(y, ")")),
                    o("filter", l)
                ],
            staticValues: {
                none: [
                    h(),
                    o("--tw-blur", " "),
                    o("filter", l)
                ]
            }
        }), n("backdrop-blur", {
            themeKeys: [
                "--backdrop-blur",
                "--blur"
            ],
            handle: (y)=>[
                    A(),
                    o("--tw-backdrop-blur", "blur(".concat(y, ")")),
                    o("-webkit-backdrop-filter", f),
                    o("backdrop-filter", f)
                ],
            staticValues: {
                none: [
                    A(),
                    o("--tw-backdrop-blur", " "),
                    o("-webkit-backdrop-filter", f),
                    o("backdrop-filter", f)
                ]
            }
        }), n("brightness", {
            themeKeys: [
                "--brightness"
            ],
            handleBareValue: (param)=>{
                let { value: y } = param;
                return T(y) ? "".concat(y, "%") : null;
            },
            handle: (y)=>[
                    h(),
                    o("--tw-brightness", "brightness(".concat(y, ")")),
                    o("filter", l)
                ]
        }), n("backdrop-brightness", {
            themeKeys: [
                "--backdrop-brightness",
                "--brightness"
            ],
            handleBareValue: (param)=>{
                let { value: y } = param;
                return T(y) ? "".concat(y, "%") : null;
            },
            handle: (y)=>[
                    A(),
                    o("--tw-backdrop-brightness", "brightness(".concat(y, ")")),
                    o("-webkit-backdrop-filter", f),
                    o("backdrop-filter", f)
                ]
        }), i("brightness", ()=>[
                {
                    values: [
                        "0",
                        "50",
                        "75",
                        "90",
                        "95",
                        "100",
                        "105",
                        "110",
                        "125",
                        "150",
                        "200"
                    ],
                    valueThemeKeys: [
                        "--brightness"
                    ]
                }
            ]), i("backdrop-brightness", ()=>[
                {
                    values: [
                        "0",
                        "50",
                        "75",
                        "90",
                        "95",
                        "100",
                        "105",
                        "110",
                        "125",
                        "150",
                        "200"
                    ],
                    valueThemeKeys: [
                        "--backdrop-brightness",
                        "--brightness"
                    ]
                }
            ]), n("contrast", {
            themeKeys: [
                "--contrast"
            ],
            handleBareValue: (param)=>{
                let { value: y } = param;
                return T(y) ? "".concat(y, "%") : null;
            },
            handle: (y)=>[
                    h(),
                    o("--tw-contrast", "contrast(".concat(y, ")")),
                    o("filter", l)
                ]
        }), n("backdrop-contrast", {
            themeKeys: [
                "--backdrop-contrast",
                "--contrast"
            ],
            handleBareValue: (param)=>{
                let { value: y } = param;
                return T(y) ? "".concat(y, "%") : null;
            },
            handle: (y)=>[
                    A(),
                    o("--tw-backdrop-contrast", "contrast(".concat(y, ")")),
                    o("-webkit-backdrop-filter", f),
                    o("backdrop-filter", f)
                ]
        }), i("contrast", ()=>[
                {
                    values: [
                        "0",
                        "50",
                        "75",
                        "100",
                        "125",
                        "150",
                        "200"
                    ],
                    valueThemeKeys: [
                        "--contrast"
                    ]
                }
            ]), i("backdrop-contrast", ()=>[
                {
                    values: [
                        "0",
                        "50",
                        "75",
                        "100",
                        "125",
                        "150",
                        "200"
                    ],
                    valueThemeKeys: [
                        "--backdrop-contrast",
                        "--contrast"
                    ]
                }
            ]), n("grayscale", {
            themeKeys: [
                "--grayscale"
            ],
            handleBareValue: (param)=>{
                let { value: y } = param;
                return T(y) ? "".concat(y, "%") : null;
            },
            defaultValue: "100%",
            handle: (y)=>[
                    h(),
                    o("--tw-grayscale", "grayscale(".concat(y, ")")),
                    o("filter", l)
                ]
        }), n("backdrop-grayscale", {
            themeKeys: [
                "--backdrop-grayscale",
                "--grayscale"
            ],
            handleBareValue: (param)=>{
                let { value: y } = param;
                return T(y) ? "".concat(y, "%") : null;
            },
            defaultValue: "100%",
            handle: (y)=>[
                    A(),
                    o("--tw-backdrop-grayscale", "grayscale(".concat(y, ")")),
                    o("-webkit-backdrop-filter", f),
                    o("backdrop-filter", f)
                ]
        }), i("grayscale", ()=>[
                {
                    values: [
                        "0",
                        "25",
                        "50",
                        "75",
                        "100"
                    ],
                    valueThemeKeys: [
                        "--grayscale"
                    ],
                    hasDefaultValue: !0
                }
            ]), i("backdrop-grayscale", ()=>[
                {
                    values: [
                        "0",
                        "25",
                        "50",
                        "75",
                        "100"
                    ],
                    valueThemeKeys: [
                        "--backdrop-grayscale",
                        "--grayscale"
                    ],
                    hasDefaultValue: !0
                }
            ]), n("hue-rotate", {
            supportsNegative: !0,
            themeKeys: [
                "--hue-rotate"
            ],
            handleBareValue: (param)=>{
                let { value: y } = param;
                return T(y) ? "".concat(y, "deg") : null;
            },
            handle: (y)=>[
                    h(),
                    o("--tw-hue-rotate", "hue-rotate(".concat(y, ")")),
                    o("filter", l)
                ]
        }), n("backdrop-hue-rotate", {
            supportsNegative: !0,
            themeKeys: [
                "--backdrop-hue-rotate",
                "--hue-rotate"
            ],
            handleBareValue: (param)=>{
                let { value: y } = param;
                return T(y) ? "".concat(y, "deg") : null;
            },
            handle: (y)=>[
                    A(),
                    o("--tw-backdrop-hue-rotate", "hue-rotate(".concat(y, ")")),
                    o("-webkit-backdrop-filter", f),
                    o("backdrop-filter", f)
                ]
        }), i("hue-rotate", ()=>[
                {
                    values: [
                        "0",
                        "15",
                        "30",
                        "60",
                        "90",
                        "180"
                    ],
                    valueThemeKeys: [
                        "--hue-rotate"
                    ]
                }
            ]), i("backdrop-hue-rotate", ()=>[
                {
                    values: [
                        "0",
                        "15",
                        "30",
                        "60",
                        "90",
                        "180"
                    ],
                    valueThemeKeys: [
                        "--backdrop-hue-rotate",
                        "--hue-rotate"
                    ]
                }
            ]), n("invert", {
            themeKeys: [
                "--invert"
            ],
            handleBareValue: (param)=>{
                let { value: y } = param;
                return T(y) ? "".concat(y, "%") : null;
            },
            defaultValue: "100%",
            handle: (y)=>[
                    h(),
                    o("--tw-invert", "invert(".concat(y, ")")),
                    o("filter", l)
                ]
        }), n("backdrop-invert", {
            themeKeys: [
                "--backdrop-invert",
                "--invert"
            ],
            handleBareValue: (param)=>{
                let { value: y } = param;
                return T(y) ? "".concat(y, "%") : null;
            },
            defaultValue: "100%",
            handle: (y)=>[
                    A(),
                    o("--tw-backdrop-invert", "invert(".concat(y, ")")),
                    o("-webkit-backdrop-filter", f),
                    o("backdrop-filter", f)
                ]
        }), i("invert", ()=>[
                {
                    values: [
                        "0",
                        "25",
                        "50",
                        "75",
                        "100"
                    ],
                    valueThemeKeys: [
                        "--invert"
                    ],
                    hasDefaultValue: !0
                }
            ]), i("backdrop-invert", ()=>[
                {
                    values: [
                        "0",
                        "25",
                        "50",
                        "75",
                        "100"
                    ],
                    valueThemeKeys: [
                        "--backdrop-invert",
                        "--invert"
                    ],
                    hasDefaultValue: !0
                }
            ]), n("saturate", {
            themeKeys: [
                "--saturate"
            ],
            handleBareValue: (param)=>{
                let { value: y } = param;
                return T(y) ? "".concat(y, "%") : null;
            },
            handle: (y)=>[
                    h(),
                    o("--tw-saturate", "saturate(".concat(y, ")")),
                    o("filter", l)
                ]
        }), n("backdrop-saturate", {
            themeKeys: [
                "--backdrop-saturate",
                "--saturate"
            ],
            handleBareValue: (param)=>{
                let { value: y } = param;
                return T(y) ? "".concat(y, "%") : null;
            },
            handle: (y)=>[
                    A(),
                    o("--tw-backdrop-saturate", "saturate(".concat(y, ")")),
                    o("-webkit-backdrop-filter", f),
                    o("backdrop-filter", f)
                ]
        }), i("saturate", ()=>[
                {
                    values: [
                        "0",
                        "50",
                        "100",
                        "150",
                        "200"
                    ],
                    valueThemeKeys: [
                        "--saturate"
                    ]
                }
            ]), i("backdrop-saturate", ()=>[
                {
                    values: [
                        "0",
                        "50",
                        "100",
                        "150",
                        "200"
                    ],
                    valueThemeKeys: [
                        "--backdrop-saturate",
                        "--saturate"
                    ]
                }
            ]), n("sepia", {
            themeKeys: [
                "--sepia"
            ],
            handleBareValue: (param)=>{
                let { value: y } = param;
                return T(y) ? "".concat(y, "%") : null;
            },
            defaultValue: "100%",
            handle: (y)=>[
                    h(),
                    o("--tw-sepia", "sepia(".concat(y, ")")),
                    o("filter", l)
                ]
        }), n("backdrop-sepia", {
            themeKeys: [
                "--backdrop-sepia",
                "--sepia"
            ],
            handleBareValue: (param)=>{
                let { value: y } = param;
                return T(y) ? "".concat(y, "%") : null;
            },
            defaultValue: "100%",
            handle: (y)=>[
                    A(),
                    o("--tw-backdrop-sepia", "sepia(".concat(y, ")")),
                    o("-webkit-backdrop-filter", f),
                    o("backdrop-filter", f)
                ]
        }), i("sepia", ()=>[
                {
                    values: [
                        "0",
                        "50",
                        "100"
                    ],
                    valueThemeKeys: [
                        "--sepia"
                    ],
                    hasDefaultValue: !0
                }
            ]), i("backdrop-sepia", ()=>[
                {
                    values: [
                        "0",
                        "50",
                        "100"
                    ],
                    valueThemeKeys: [
                        "--backdrop-sepia",
                        "--sepia"
                    ],
                    hasDefaultValue: !0
                }
            ]), t("drop-shadow-none", [
            h,
            [
                "--tw-drop-shadow",
                " "
            ],
            [
                "filter",
                l
            ]
        ]), r.functional("drop-shadow", (y)=>{
            let N;
            if (y.modifier && (y.modifier.kind === "arbitrary" ? N = y.modifier.value : T(y.modifier.value) && (N = "".concat(y.modifier.value, "%"))), !y.value) {
                let P = e.get([
                    "--drop-shadow"
                ]), V = e.resolve(null, [
                    "--drop-shadow"
                ]);
                return P === null || V === null ? void 0 : [
                    h(),
                    o("--tw-drop-shadow-alpha", N),
                    ...lt("--tw-drop-shadow-size", P, N, (E)=>"var(--tw-drop-shadow-color, ".concat(E, ")")),
                    o("--tw-drop-shadow", U(V, ",").map((E)=>"drop-shadow(".concat(E, ")")).join(" ")),
                    o("filter", l)
                ];
            }
            if (y.value.kind === "arbitrary") {
                let P = y.value.value;
                var _y_value_dataType;
                switch((_y_value_dataType = y.value.dataType) !== null && _y_value_dataType !== void 0 ? _y_value_dataType : Z(P, [
                    "color"
                ])){
                    case "color":
                        return P = X(P, y.modifier, e), P === null ? void 0 : [
                            h(),
                            o("--tw-drop-shadow-color", Q(P, "var(--tw-drop-shadow-alpha)")),
                            o("--tw-drop-shadow", "var(--tw-drop-shadow-size)")
                        ];
                    default:
                        return y.modifier && !N ? void 0 : [
                            h(),
                            o("--tw-drop-shadow-alpha", N),
                            ...lt("--tw-drop-shadow-size", P, N, (E)=>"var(--tw-drop-shadow-color, ".concat(E, ")")),
                            o("--tw-drop-shadow", "var(--tw-drop-shadow-size)"),
                            o("filter", l)
                        ];
                }
            }
            {
                let P = e.get([
                    "--drop-shadow-".concat(y.value.value)
                ]), V = e.resolve(y.value.value, [
                    "--drop-shadow"
                ]);
                if (P && V) return y.modifier && !N ? void 0 : N ? [
                    h(),
                    o("--tw-drop-shadow-alpha", N),
                    ...lt("--tw-drop-shadow-size", P, N, (E)=>"var(--tw-drop-shadow-color, ".concat(E, ")")),
                    o("--tw-drop-shadow", "var(--tw-drop-shadow-size)"),
                    o("filter", l)
                ] : [
                    h(),
                    o("--tw-drop-shadow-alpha", N),
                    ...lt("--tw-drop-shadow-size", P, N, (E)=>"var(--tw-drop-shadow-color, ".concat(E, ")")),
                    o("--tw-drop-shadow", U(V, ",").map((E)=>"drop-shadow(".concat(E, ")")).join(" ")),
                    o("filter", l)
                ];
            }
            {
                let P = te(y, e, [
                    "--drop-shadow-color",
                    "--color"
                ]);
                if (P) return P === "inherit" ? [
                    h(),
                    o("--tw-drop-shadow-color", "inherit"),
                    o("--tw-drop-shadow", "var(--tw-drop-shadow-size)")
                ] : [
                    h(),
                    o("--tw-drop-shadow-color", Q(P, "var(--tw-drop-shadow-alpha)")),
                    o("--tw-drop-shadow", "var(--tw-drop-shadow-size)")
                ];
            }
        }), i("drop-shadow", ()=>[
                {
                    values: [
                        "current",
                        "inherit",
                        "transparent"
                    ],
                    valueThemeKeys: [
                        "--drop-shadow-color",
                        "--color"
                    ],
                    modifiers: Array.from({
                        length: 21
                    }, (y, N)=>"".concat(N * 5))
                },
                {
                    valueThemeKeys: [
                        "--drop-shadow"
                    ]
                }
            ]), n("backdrop-opacity", {
            themeKeys: [
                "--backdrop-opacity",
                "--opacity"
            ],
            handleBareValue: (param)=>{
                let { value: y } = param;
                return ot(y) ? "".concat(y, "%") : null;
            },
            handle: (y)=>[
                    A(),
                    o("--tw-backdrop-opacity", "opacity(".concat(y, ")")),
                    o("-webkit-backdrop-filter", f),
                    o("backdrop-filter", f)
                ]
        }), i("backdrop-opacity", ()=>[
                {
                    values: Array.from({
                        length: 21
                    }, (y, N)=>"".concat(N * 5)),
                    valueThemeKeys: [
                        "--backdrop-opacity",
                        "--opacity"
                    ]
                }
            ]);
    }
    {
        var _e_resolve, _e_resolve1;
        let l = "var(--tw-ease, ".concat((_e_resolve = e.resolve(null, [
            "--default-transition-timing-function"
        ])) !== null && _e_resolve !== void 0 ? _e_resolve : "ease", ")"), f = "var(--tw-duration, ".concat((_e_resolve1 = e.resolve(null, [
            "--default-transition-duration"
        ])) !== null && _e_resolve1 !== void 0 ? _e_resolve1 : "0s", ")");
        n("transition", {
            defaultValue: "color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, content-visibility, overlay, pointer-events",
            themeKeys: [
                "--transition-property"
            ],
            handle: (h)=>[
                    o("transition-property", h),
                    o("transition-timing-function", l),
                    o("transition-duration", f)
                ],
            staticValues: {
                none: [
                    o("transition-property", "none")
                ],
                all: [
                    o("transition-property", "all"),
                    o("transition-timing-function", l),
                    o("transition-duration", f)
                ],
                colors: [
                    o("transition-property", "color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to"),
                    o("transition-timing-function", l),
                    o("transition-duration", f)
                ],
                opacity: [
                    o("transition-property", "opacity"),
                    o("transition-timing-function", l),
                    o("transition-duration", f)
                ],
                shadow: [
                    o("transition-property", "box-shadow"),
                    o("transition-timing-function", l),
                    o("transition-duration", f)
                ],
                transform: [
                    o("transition-property", "transform, translate, scale, rotate"),
                    o("transition-timing-function", l),
                    o("transition-duration", f)
                ]
            }
        }), t("transition-discrete", [
            [
                "transition-behavior",
                "allow-discrete"
            ]
        ]), t("transition-normal", [
            [
                "transition-behavior",
                "normal"
            ]
        ]), n("delay", {
            handleBareValue: (param)=>{
                let { value: h } = param;
                return T(h) ? "".concat(h, "ms") : null;
            },
            themeKeys: [
                "--transition-delay"
            ],
            handle: (h)=>[
                    o("transition-delay", h)
                ]
        });
        {
            let h = ()=>z([
                    $("--tw-duration")
                ]);
            t("duration-initial", [
                h,
                [
                    "--tw-duration",
                    "initial"
                ]
            ]), r.functional("duration", (A)=>{
                if (A.modifier || !A.value) return;
                let y = null;
                var _A_value_fraction;
                if (A.value.kind === "arbitrary" ? y = A.value.value : (y = e.resolve((_A_value_fraction = A.value.fraction) !== null && _A_value_fraction !== void 0 ? _A_value_fraction : A.value.value, [
                    "--transition-duration"
                ]), y === null && T(A.value.value) && (y = "".concat(A.value.value, "ms"))), y !== null) return [
                    h(),
                    o("--tw-duration", y),
                    o("transition-duration", y)
                ];
            });
        }
        i("delay", ()=>[
                {
                    values: [
                        "75",
                        "100",
                        "150",
                        "200",
                        "300",
                        "500",
                        "700",
                        "1000"
                    ],
                    valueThemeKeys: [
                        "--transition-delay"
                    ]
                }
            ]), i("duration", ()=>[
                {
                    values: [
                        "75",
                        "100",
                        "150",
                        "200",
                        "300",
                        "500",
                        "700",
                        "1000"
                    ],
                    valueThemeKeys: [
                        "--transition-duration"
                    ]
                }
            ]);
    }
    {
        let l = ()=>z([
                $("--tw-ease")
            ]);
        n("ease", {
            themeKeys: [
                "--ease"
            ],
            handle: (f)=>[
                    l(),
                    o("--tw-ease", f),
                    o("transition-timing-function", f)
                ],
            staticValues: {
                initial: [
                    l(),
                    o("--tw-ease", "initial")
                ],
                linear: [
                    l(),
                    o("--tw-ease", "linear"),
                    o("transition-timing-function", "linear")
                ]
            }
        });
    }
    t("will-change-auto", [
        [
            "will-change",
            "auto"
        ]
    ]), t("will-change-scroll", [
        [
            "will-change",
            "scroll-position"
        ]
    ]), t("will-change-contents", [
        [
            "will-change",
            "contents"
        ]
    ]), t("will-change-transform", [
        [
            "will-change",
            "transform"
        ]
    ]), n("will-change", {
        themeKeys: [],
        handle: (l)=>[
                o("will-change", l)
            ]
    }), t("content-none", [
        [
            "--tw-content",
            "none"
        ],
        [
            "content",
            "none"
        ]
    ]), n("content", {
        themeKeys: [],
        handle: (l)=>[
                z([
                    $("--tw-content", '""')
                ]),
                o("--tw-content", l),
                o("content", "var(--tw-content)")
            ]
    });
    {
        let l = "var(--tw-contain-size,) var(--tw-contain-layout,) var(--tw-contain-paint,) var(--tw-contain-style,)", f = ()=>z([
                $("--tw-contain-size"),
                $("--tw-contain-layout"),
                $("--tw-contain-paint"),
                $("--tw-contain-style")
            ]);
        t("contain-none", [
            [
                "contain",
                "none"
            ]
        ]), t("contain-content", [
            [
                "contain",
                "content"
            ]
        ]), t("contain-strict", [
            [
                "contain",
                "strict"
            ]
        ]), t("contain-size", [
            f,
            [
                "--tw-contain-size",
                "size"
            ],
            [
                "contain",
                l
            ]
        ]), t("contain-inline-size", [
            f,
            [
                "--tw-contain-size",
                "inline-size"
            ],
            [
                "contain",
                l
            ]
        ]), t("contain-layout", [
            f,
            [
                "--tw-contain-layout",
                "layout"
            ],
            [
                "contain",
                l
            ]
        ]), t("contain-paint", [
            f,
            [
                "--tw-contain-paint",
                "paint"
            ],
            [
                "contain",
                l
            ]
        ]), t("contain-style", [
            f,
            [
                "--tw-contain-style",
                "style"
            ],
            [
                "contain",
                l
            ]
        ]), n("contain", {
            themeKeys: [],
            handle: (h)=>[
                    o("contain", h)
                ]
        });
    }
    t("forced-color-adjust-none", [
        [
            "forced-color-adjust",
            "none"
        ]
    ]), t("forced-color-adjust-auto", [
        [
            "forced-color-adjust",
            "auto"
        ]
    ]), a("leading", [
        "--leading",
        "--spacing"
    ], (l)=>[
            z([
                $("--tw-leading")
            ]),
            o("--tw-leading", l),
            o("line-height", l)
        ], {
        staticValues: {
            none: [
                z([
                    $("--tw-leading")
                ]),
                o("--tw-leading", "1"),
                o("line-height", "1")
            ]
        }
    }), n("tracking", {
        supportsNegative: !0,
        themeKeys: [
            "--tracking"
        ],
        handle: (l)=>[
                z([
                    $("--tw-tracking")
                ]),
                o("--tw-tracking", l),
                o("letter-spacing", l)
            ]
    }), t("antialiased", [
        [
            "-webkit-font-smoothing",
            "antialiased"
        ],
        [
            "-moz-osx-font-smoothing",
            "grayscale"
        ]
    ]), t("subpixel-antialiased", [
        [
            "-webkit-font-smoothing",
            "auto"
        ],
        [
            "-moz-osx-font-smoothing",
            "auto"
        ]
    ]);
    {
        let l = "var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,)", f = ()=>z([
                $("--tw-ordinal"),
                $("--tw-slashed-zero"),
                $("--tw-numeric-figure"),
                $("--tw-numeric-spacing"),
                $("--tw-numeric-fraction")
            ]);
        t("normal-nums", [
            [
                "font-variant-numeric",
                "normal"
            ]
        ]), t("ordinal", [
            f,
            [
                "--tw-ordinal",
                "ordinal"
            ],
            [
                "font-variant-numeric",
                l
            ]
        ]), t("slashed-zero", [
            f,
            [
                "--tw-slashed-zero",
                "slashed-zero"
            ],
            [
                "font-variant-numeric",
                l
            ]
        ]), t("lining-nums", [
            f,
            [
                "--tw-numeric-figure",
                "lining-nums"
            ],
            [
                "font-variant-numeric",
                l
            ]
        ]), t("oldstyle-nums", [
            f,
            [
                "--tw-numeric-figure",
                "oldstyle-nums"
            ],
            [
                "font-variant-numeric",
                l
            ]
        ]), t("proportional-nums", [
            f,
            [
                "--tw-numeric-spacing",
                "proportional-nums"
            ],
            [
                "font-variant-numeric",
                l
            ]
        ]), t("tabular-nums", [
            f,
            [
                "--tw-numeric-spacing",
                "tabular-nums"
            ],
            [
                "font-variant-numeric",
                l
            ]
        ]), t("diagonal-fractions", [
            f,
            [
                "--tw-numeric-fraction",
                "diagonal-fractions"
            ],
            [
                "font-variant-numeric",
                l
            ]
        ]), t("stacked-fractions", [
            f,
            [
                "--tw-numeric-fraction",
                "stacked-fractions"
            ],
            [
                "font-variant-numeric",
                l
            ]
        ]);
    }
    {
        let l = ()=>z([
                $("--tw-outline-style", "solid")
            ]);
        r.static("outline-hidden", ()=>[
                o("--tw-outline-style", "none"),
                o("outline-style", "none"),
                F("@media", "(forced-colors: active)", [
                    o("outline", "2px solid transparent"),
                    o("outline-offset", "2px")
                ])
            ]), t("outline-none", [
            [
                "--tw-outline-style",
                "none"
            ],
            [
                "outline-style",
                "none"
            ]
        ]), t("outline-solid", [
            [
                "--tw-outline-style",
                "solid"
            ],
            [
                "outline-style",
                "solid"
            ]
        ]), t("outline-dashed", [
            [
                "--tw-outline-style",
                "dashed"
            ],
            [
                "outline-style",
                "dashed"
            ]
        ]), t("outline-dotted", [
            [
                "--tw-outline-style",
                "dotted"
            ],
            [
                "outline-style",
                "dotted"
            ]
        ]), t("outline-double", [
            [
                "--tw-outline-style",
                "double"
            ],
            [
                "outline-style",
                "double"
            ]
        ]), r.functional("outline", (f)=>{
            if (f.value === null) {
                if (f.modifier) return;
                var _e_get;
                let h = (_e_get = e.get([
                    "--default-outline-width"
                ])) !== null && _e_get !== void 0 ? _e_get : "1px";
                return [
                    l(),
                    o("outline-style", "var(--tw-outline-style)"),
                    o("outline-width", h)
                ];
            }
            if (f.value.kind === "arbitrary") {
                let h = f.value.value;
                var _f_value_dataType;
                switch((_f_value_dataType = f.value.dataType) !== null && _f_value_dataType !== void 0 ? _f_value_dataType : Z(h, [
                    "color",
                    "length",
                    "number",
                    "percentage"
                ])){
                    case "length":
                    case "number":
                    case "percentage":
                        return f.modifier ? void 0 : [
                            l(),
                            o("outline-style", "var(--tw-outline-style)"),
                            o("outline-width", h)
                        ];
                    default:
                        return h = X(h, f.modifier, e), h === null ? void 0 : [
                            o("outline-color", h)
                        ];
                }
            }
            {
                let h = te(f, e, [
                    "--outline-color",
                    "--color"
                ]);
                if (h) return [
                    o("outline-color", h)
                ];
            }
            {
                if (f.modifier) return;
                let h = e.resolve(f.value.value, [
                    "--outline-width"
                ]);
                if (h) return [
                    l(),
                    o("outline-style", "var(--tw-outline-style)"),
                    o("outline-width", h)
                ];
                if (T(f.value.value)) return [
                    l(),
                    o("outline-style", "var(--tw-outline-style)"),
                    o("outline-width", "".concat(f.value.value, "px"))
                ];
            }
        }), i("outline", ()=>[
                {
                    values: [
                        "current",
                        "inherit",
                        "transparent"
                    ],
                    valueThemeKeys: [
                        "--outline-color",
                        "--color"
                    ],
                    modifiers: Array.from({
                        length: 21
                    }, (f, h)=>"".concat(h * 5)),
                    hasDefaultValue: !0
                },
                {
                    values: [
                        "0",
                        "1",
                        "2",
                        "4",
                        "8"
                    ],
                    valueThemeKeys: [
                        "--outline-width"
                    ]
                }
            ]), n("outline-offset", {
            supportsNegative: !0,
            themeKeys: [
                "--outline-offset"
            ],
            handleBareValue: (param)=>{
                let { value: f } = param;
                return T(f) ? "".concat(f, "px") : null;
            },
            handle: (f)=>[
                    o("outline-offset", f)
                ]
        }), i("outline-offset", ()=>[
                {
                    supportsNegative: !0,
                    values: [
                        "0",
                        "1",
                        "2",
                        "4",
                        "8"
                    ],
                    valueThemeKeys: [
                        "--outline-offset"
                    ]
                }
            ]);
    }
    n("opacity", {
        themeKeys: [
            "--opacity"
        ],
        handleBareValue: (param)=>{
            let { value: l } = param;
            return ot(l) ? "".concat(l, "%") : null;
        },
        handle: (l)=>[
                o("opacity", l)
            ]
    }), i("opacity", ()=>[
            {
                values: Array.from({
                    length: 21
                }, (l, f)=>"".concat(f * 5)),
                valueThemeKeys: [
                    "--opacity"
                ]
            }
        ]), n("underline-offset", {
        supportsNegative: !0,
        themeKeys: [
            "--text-underline-offset"
        ],
        handleBareValue: (param)=>{
            let { value: l } = param;
            return T(l) ? "".concat(l, "px") : null;
        },
        handle: (l)=>[
                o("text-underline-offset", l)
            ],
        staticValues: {
            auto: [
                o("text-underline-offset", "auto")
            ]
        }
    }), i("underline-offset", ()=>[
            {
                supportsNegative: !0,
                values: [
                    "0",
                    "1",
                    "2",
                    "4",
                    "8"
                ],
                valueThemeKeys: [
                    "--text-underline-offset"
                ]
            }
        ]), r.functional("text", (l)=>{
        if (l.value) {
            if (l.value.kind === "arbitrary") {
                let f = l.value.value;
                var _l_value_dataType;
                switch((_l_value_dataType = l.value.dataType) !== null && _l_value_dataType !== void 0 ? _l_value_dataType : Z(f, [
                    "color",
                    "length",
                    "percentage",
                    "absolute-size",
                    "relative-size"
                ])){
                    case "size":
                    case "length":
                    case "percentage":
                    case "absolute-size":
                    case "relative-size":
                        {
                            if (l.modifier) {
                                let A = l.modifier.kind === "arbitrary" ? l.modifier.value : e.resolve(l.modifier.value, [
                                    "--leading"
                                ]);
                                if (!A && xe(l.modifier.value)) {
                                    let y = e.resolve(null, [
                                        "--spacing"
                                    ]);
                                    if (!y) return null;
                                    A = "calc(".concat(y, " * ").concat(l.modifier.value, ")");
                                }
                                return !A && l.modifier.value === "none" && (A = "1"), A ? [
                                    o("font-size", f),
                                    o("line-height", A)
                                ] : null;
                            }
                            return [
                                o("font-size", f)
                            ];
                        }
                    default:
                        return f = X(f, l.modifier, e), f === null ? void 0 : [
                            o("color", f)
                        ];
                }
            }
            {
                let f = te(l, e, [
                    "--text-color",
                    "--color"
                ]);
                if (f) return [
                    o("color", f)
                ];
            }
            {
                let f = e.resolveWith(l.value.value, [
                    "--text"
                ], [
                    "--line-height",
                    "--letter-spacing",
                    "--font-weight"
                ]);
                if (f) {
                    let [h, A = {}] = Array.isArray(f) ? f : [
                        f
                    ];
                    if (l.modifier) {
                        let y = l.modifier.kind === "arbitrary" ? l.modifier.value : e.resolve(l.modifier.value, [
                            "--leading"
                        ]);
                        if (!y && xe(l.modifier.value)) {
                            let P = e.resolve(null, [
                                "--spacing"
                            ]);
                            if (!P) return null;
                            y = "calc(".concat(P, " * ").concat(l.modifier.value, ")");
                        }
                        if (!y && l.modifier.value === "none" && (y = "1"), !y) return null;
                        let N = [
                            o("font-size", h)
                        ];
                        return y && N.push(o("line-height", y)), N;
                    }
                    return typeof A == "string" ? [
                        o("font-size", h),
                        o("line-height", A)
                    ] : [
                        o("font-size", h),
                        o("line-height", A["--line-height"] ? "var(--tw-leading, ".concat(A["--line-height"], ")") : void 0),
                        o("letter-spacing", A["--letter-spacing"] ? "var(--tw-tracking, ".concat(A["--letter-spacing"], ")") : void 0),
                        o("font-weight", A["--font-weight"] ? "var(--tw-font-weight, ".concat(A["--font-weight"], ")") : void 0)
                    ];
                }
            }
        }
    }), i("text", ()=>[
            {
                values: [
                    "current",
                    "inherit",
                    "transparent"
                ],
                valueThemeKeys: [
                    "--text-color",
                    "--color"
                ],
                modifiers: Array.from({
                    length: 21
                }, (l, f)=>"".concat(f * 5))
            },
            {
                values: [],
                valueThemeKeys: [
                    "--text"
                ],
                modifiers: [],
                modifierThemeKeys: [
                    "--leading"
                ]
            }
        ]);
    let K = ()=>z([
            $("--tw-text-shadow-color"),
            $("--tw-text-shadow-alpha", "100%", "<percentage>")
        ]);
    t("text-shadow-initial", [
        K,
        [
            "--tw-text-shadow-color",
            "initial"
        ]
    ]), r.functional("text-shadow", (l)=>{
        let f;
        if (l.modifier && (l.modifier.kind === "arbitrary" ? f = l.modifier.value : T(l.modifier.value) && (f = "".concat(l.modifier.value, "%"))), !l.value) {
            let h = e.get([
                "--text-shadow"
            ]);
            return h === null ? void 0 : [
                K(),
                o("--tw-text-shadow-alpha", f),
                ...pe("text-shadow", h, f, (A)=>"var(--tw-text-shadow-color, ".concat(A, ")"))
            ];
        }
        if (l.value.kind === "arbitrary") {
            let h = l.value.value;
            var _l_value_dataType;
            switch((_l_value_dataType = l.value.dataType) !== null && _l_value_dataType !== void 0 ? _l_value_dataType : Z(h, [
                "color"
            ])){
                case "color":
                    return h = X(h, l.modifier, e), h === null ? void 0 : [
                        K(),
                        o("--tw-text-shadow-color", Q(h, "var(--tw-text-shadow-alpha)"))
                    ];
                default:
                    return [
                        K(),
                        o("--tw-text-shadow-alpha", f),
                        ...pe("text-shadow", h, f, (y)=>"var(--tw-text-shadow-color, ".concat(y, ")"))
                    ];
            }
        }
        switch(l.value.value){
            case "none":
                return l.modifier ? void 0 : [
                    K(),
                    o("text-shadow", "none")
                ];
            case "inherit":
                return l.modifier ? void 0 : [
                    K(),
                    o("--tw-text-shadow-color", "inherit")
                ];
        }
        {
            let h = e.get([
                "--text-shadow-".concat(l.value.value)
            ]);
            if (h) return [
                K(),
                o("--tw-text-shadow-alpha", f),
                ...pe("text-shadow", h, f, (A)=>"var(--tw-text-shadow-color, ".concat(A, ")"))
            ];
        }
        {
            let h = te(l, e, [
                "--text-shadow-color",
                "--color"
            ]);
            if (h) return [
                K(),
                o("--tw-text-shadow-color", Q(h, "var(--tw-text-shadow-alpha)"))
            ];
        }
    }), i("text-shadow", ()=>[
            {
                values: [
                    "current",
                    "inherit",
                    "transparent"
                ],
                valueThemeKeys: [
                    "--text-shadow-color",
                    "--color"
                ],
                modifiers: Array.from({
                    length: 21
                }, (l, f)=>"".concat(f * 5))
            },
            {
                values: [
                    "none"
                ]
            },
            {
                valueThemeKeys: [
                    "--text-shadow"
                ],
                modifiers: Array.from({
                    length: 21
                }, (l, f)=>"".concat(f * 5)),
                hasDefaultValue: e.get([
                    "--text-shadow"
                ]) !== null
            }
        ]);
    {
        let y = function(V) {
            return "var(--tw-ring-inset,) 0 0 0 calc(".concat(V, " + var(--tw-ring-offset-width)) var(--tw-ring-color, ").concat(A, ")");
        }, N = function(V) {
            return "inset 0 0 0 ".concat(V, " var(--tw-inset-ring-color, currentcolor)");
        };
        var M = y, ie = N;
        let l = [
            "var(--tw-inset-shadow)",
            "var(--tw-inset-ring-shadow)",
            "var(--tw-ring-offset-shadow)",
            "var(--tw-ring-shadow)",
            "var(--tw-shadow)"
        ].join(", "), f = "0 0 #0000", h = ()=>z([
                $("--tw-shadow", f),
                $("--tw-shadow-color"),
                $("--tw-shadow-alpha", "100%", "<percentage>"),
                $("--tw-inset-shadow", f),
                $("--tw-inset-shadow-color"),
                $("--tw-inset-shadow-alpha", "100%", "<percentage>"),
                $("--tw-ring-color"),
                $("--tw-ring-shadow", f),
                $("--tw-inset-ring-color"),
                $("--tw-inset-ring-shadow", f),
                $("--tw-ring-inset"),
                $("--tw-ring-offset-width", "0px", "<length>"),
                $("--tw-ring-offset-color", "#fff"),
                $("--tw-ring-offset-shadow", f)
            ]);
        t("shadow-initial", [
            h,
            [
                "--tw-shadow-color",
                "initial"
            ]
        ]), r.functional("shadow", (V)=>{
            let E;
            if (V.modifier && (V.modifier.kind === "arbitrary" ? E = V.modifier.value : T(V.modifier.value) && (E = "".concat(V.modifier.value, "%"))), !V.value) {
                let j = e.get([
                    "--shadow"
                ]);
                return j === null ? void 0 : [
                    h(),
                    o("--tw-shadow-alpha", E),
                    ...pe("--tw-shadow", j, E, (ae)=>"var(--tw-shadow-color, ".concat(ae, ")")),
                    o("box-shadow", l)
                ];
            }
            if (V.value.kind === "arbitrary") {
                let j = V.value.value;
                var _V_value_dataType;
                switch((_V_value_dataType = V.value.dataType) !== null && _V_value_dataType !== void 0 ? _V_value_dataType : Z(j, [
                    "color"
                ])){
                    case "color":
                        return j = X(j, V.modifier, e), j === null ? void 0 : [
                            h(),
                            o("--tw-shadow-color", Q(j, "var(--tw-shadow-alpha)"))
                        ];
                    default:
                        return [
                            h(),
                            o("--tw-shadow-alpha", E),
                            ...pe("--tw-shadow", j, E, (wt)=>"var(--tw-shadow-color, ".concat(wt, ")")),
                            o("box-shadow", l)
                        ];
                }
            }
            switch(V.value.value){
                case "none":
                    return V.modifier ? void 0 : [
                        h(),
                        o("--tw-shadow", f),
                        o("box-shadow", l)
                    ];
                case "inherit":
                    return V.modifier ? void 0 : [
                        h(),
                        o("--tw-shadow-color", "inherit")
                    ];
            }
            {
                let j = e.get([
                    "--shadow-".concat(V.value.value)
                ]);
                if (j) return [
                    h(),
                    o("--tw-shadow-alpha", E),
                    ...pe("--tw-shadow", j, E, (ae)=>"var(--tw-shadow-color, ".concat(ae, ")")),
                    o("box-shadow", l)
                ];
            }
            {
                let j = te(V, e, [
                    "--box-shadow-color",
                    "--color"
                ]);
                if (j) return [
                    h(),
                    o("--tw-shadow-color", Q(j, "var(--tw-shadow-alpha)"))
                ];
            }
        }), i("shadow", ()=>[
                {
                    values: [
                        "current",
                        "inherit",
                        "transparent"
                    ],
                    valueThemeKeys: [
                        "--box-shadow-color",
                        "--color"
                    ],
                    modifiers: Array.from({
                        length: 21
                    }, (V, E)=>"".concat(E * 5))
                },
                {
                    values: [
                        "none"
                    ]
                },
                {
                    valueThemeKeys: [
                        "--shadow"
                    ],
                    modifiers: Array.from({
                        length: 21
                    }, (V, E)=>"".concat(E * 5)),
                    hasDefaultValue: e.get([
                        "--shadow"
                    ]) !== null
                }
            ]), t("inset-shadow-initial", [
            h,
            [
                "--tw-inset-shadow-color",
                "initial"
            ]
        ]), r.functional("inset-shadow", (V)=>{
            let E;
            if (V.modifier && (V.modifier.kind === "arbitrary" ? E = V.modifier.value : T(V.modifier.value) && (E = "".concat(V.modifier.value, "%"))), !V.value) {
                let j = e.get([
                    "--inset-shadow"
                ]);
                return j === null ? void 0 : [
                    h(),
                    o("--tw-inset-shadow-alpha", E),
                    ...pe("--tw-inset-shadow", j, E, (ae)=>"var(--tw-inset-shadow-color, ".concat(ae, ")")),
                    o("box-shadow", l)
                ];
            }
            if (V.value.kind === "arbitrary") {
                let j = V.value.value;
                var _V_value_dataType;
                switch((_V_value_dataType = V.value.dataType) !== null && _V_value_dataType !== void 0 ? _V_value_dataType : Z(j, [
                    "color"
                ])){
                    case "color":
                        return j = X(j, V.modifier, e), j === null ? void 0 : [
                            h(),
                            o("--tw-inset-shadow-color", Q(j, "var(--tw-inset-shadow-alpha)"))
                        ];
                    default:
                        return [
                            h(),
                            o("--tw-inset-shadow-alpha", E),
                            ...pe("--tw-inset-shadow", j, E, (wt)=>"var(--tw-inset-shadow-color, ".concat(wt, ")"), "inset "),
                            o("box-shadow", l)
                        ];
                }
            }
            switch(V.value.value){
                case "none":
                    return V.modifier ? void 0 : [
                        h(),
                        o("--tw-inset-shadow", f),
                        o("box-shadow", l)
                    ];
                case "inherit":
                    return V.modifier ? void 0 : [
                        h(),
                        o("--tw-inset-shadow-color", "inherit")
                    ];
            }
            {
                let j = e.get([
                    "--inset-shadow-".concat(V.value.value)
                ]);
                if (j) return [
                    h(),
                    o("--tw-inset-shadow-alpha", E),
                    ...pe("--tw-inset-shadow", j, E, (ae)=>"var(--tw-inset-shadow-color, ".concat(ae, ")")),
                    o("box-shadow", l)
                ];
            }
            {
                let j = te(V, e, [
                    "--box-shadow-color",
                    "--color"
                ]);
                if (j) return [
                    h(),
                    o("--tw-inset-shadow-color", Q(j, "var(--tw-inset-shadow-alpha)"))
                ];
            }
        }), i("inset-shadow", ()=>[
                {
                    values: [
                        "current",
                        "inherit",
                        "transparent"
                    ],
                    valueThemeKeys: [
                        "--box-shadow-color",
                        "--color"
                    ],
                    modifiers: Array.from({
                        length: 21
                    }, (V, E)=>"".concat(E * 5))
                },
                {
                    values: [
                        "none"
                    ]
                },
                {
                    valueThemeKeys: [
                        "--inset-shadow"
                    ],
                    modifiers: Array.from({
                        length: 21
                    }, (V, E)=>"".concat(E * 5)),
                    hasDefaultValue: e.get([
                        "--inset-shadow"
                    ]) !== null
                }
            ]), t("ring-inset", [
            h,
            [
                "--tw-ring-inset",
                "inset"
            ]
        ]);
        var _e_get2;
        let A = (_e_get2 = e.get([
            "--default-ring-color"
        ])) !== null && _e_get2 !== void 0 ? _e_get2 : "currentcolor";
        r.functional("ring", (V)=>{
            if (!V.value) {
                if (V.modifier) return;
                var _e_get;
                let E = (_e_get = e.get([
                    "--default-ring-width"
                ])) !== null && _e_get !== void 0 ? _e_get : "1px";
                return [
                    h(),
                    o("--tw-ring-shadow", y(E)),
                    o("box-shadow", l)
                ];
            }
            if (V.value.kind === "arbitrary") {
                let E = V.value.value;
                var _V_value_dataType;
                switch((_V_value_dataType = V.value.dataType) !== null && _V_value_dataType !== void 0 ? _V_value_dataType : Z(E, [
                    "color",
                    "length"
                ])){
                    case "length":
                        return V.modifier ? void 0 : [
                            h(),
                            o("--tw-ring-shadow", y(E)),
                            o("box-shadow", l)
                        ];
                    default:
                        return E = X(E, V.modifier, e), E === null ? void 0 : [
                            o("--tw-ring-color", E)
                        ];
                }
            }
            {
                let E = te(V, e, [
                    "--ring-color",
                    "--color"
                ]);
                if (E) return [
                    o("--tw-ring-color", E)
                ];
            }
            {
                if (V.modifier) return;
                let E = e.resolve(V.value.value, [
                    "--ring-width"
                ]);
                if (E === null && T(V.value.value) && (E = "".concat(V.value.value, "px")), E) return [
                    h(),
                    o("--tw-ring-shadow", y(E)),
                    o("box-shadow", l)
                ];
            }
        }), i("ring", ()=>[
                {
                    values: [
                        "current",
                        "inherit",
                        "transparent"
                    ],
                    valueThemeKeys: [
                        "--ring-color",
                        "--color"
                    ],
                    modifiers: Array.from({
                        length: 21
                    }, (V, E)=>"".concat(E * 5))
                },
                {
                    values: [
                        "0",
                        "1",
                        "2",
                        "4",
                        "8"
                    ],
                    valueThemeKeys: [
                        "--ring-width"
                    ],
                    hasDefaultValue: !0
                }
            ]), r.functional("inset-ring", (V)=>{
            if (!V.value) return V.modifier ? void 0 : [
                h(),
                o("--tw-inset-ring-shadow", N("1px")),
                o("box-shadow", l)
            ];
            if (V.value.kind === "arbitrary") {
                let E = V.value.value;
                var _V_value_dataType;
                switch((_V_value_dataType = V.value.dataType) !== null && _V_value_dataType !== void 0 ? _V_value_dataType : Z(E, [
                    "color",
                    "length"
                ])){
                    case "length":
                        return V.modifier ? void 0 : [
                            h(),
                            o("--tw-inset-ring-shadow", N(E)),
                            o("box-shadow", l)
                        ];
                    default:
                        return E = X(E, V.modifier, e), E === null ? void 0 : [
                            o("--tw-inset-ring-color", E)
                        ];
                }
            }
            {
                let E = te(V, e, [
                    "--ring-color",
                    "--color"
                ]);
                if (E) return [
                    o("--tw-inset-ring-color", E)
                ];
            }
            {
                if (V.modifier) return;
                let E = e.resolve(V.value.value, [
                    "--ring-width"
                ]);
                if (E === null && T(V.value.value) && (E = "".concat(V.value.value, "px")), E) return [
                    h(),
                    o("--tw-inset-ring-shadow", N(E)),
                    o("box-shadow", l)
                ];
            }
        }), i("inset-ring", ()=>[
                {
                    values: [
                        "current",
                        "inherit",
                        "transparent"
                    ],
                    valueThemeKeys: [
                        "--ring-color",
                        "--color"
                    ],
                    modifiers: Array.from({
                        length: 21
                    }, (V, E)=>"".concat(E * 5))
                },
                {
                    values: [
                        "0",
                        "1",
                        "2",
                        "4",
                        "8"
                    ],
                    valueThemeKeys: [
                        "--ring-width"
                    ],
                    hasDefaultValue: !0
                }
            ]);
        let P = "var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color)";
        r.functional("ring-offset", (V)=>{
            if (V.value) {
                if (V.value.kind === "arbitrary") {
                    let E = V.value.value;
                    var _V_value_dataType;
                    switch((_V_value_dataType = V.value.dataType) !== null && _V_value_dataType !== void 0 ? _V_value_dataType : Z(E, [
                        "color",
                        "length"
                    ])){
                        case "length":
                            return V.modifier ? void 0 : [
                                o("--tw-ring-offset-width", E),
                                o("--tw-ring-offset-shadow", P)
                            ];
                        default:
                            return E = X(E, V.modifier, e), E === null ? void 0 : [
                                o("--tw-ring-offset-color", E)
                            ];
                    }
                }
                {
                    let E = e.resolve(V.value.value, [
                        "--ring-offset-width"
                    ]);
                    if (E) return V.modifier ? void 0 : [
                        o("--tw-ring-offset-width", E),
                        o("--tw-ring-offset-shadow", P)
                    ];
                    if (T(V.value.value)) return V.modifier ? void 0 : [
                        o("--tw-ring-offset-width", "".concat(V.value.value, "px")),
                        o("--tw-ring-offset-shadow", P)
                    ];
                }
                {
                    let E = te(V, e, [
                        "--ring-offset-color",
                        "--color"
                    ]);
                    if (E) return [
                        o("--tw-ring-offset-color", E)
                    ];
                }
            }
        });
    }
    return i("ring-offset", ()=>[
            {
                values: [
                    "current",
                    "inherit",
                    "transparent"
                ],
                valueThemeKeys: [
                    "--ring-offset-color",
                    "--color"
                ],
                modifiers: Array.from({
                    length: 21
                }, (l, f)=>"".concat(f * 5))
            },
            {
                values: [
                    "0",
                    "1",
                    "2",
                    "4",
                    "8"
                ],
                valueThemeKeys: [
                    "--ring-offset-width"
                ]
            }
        ]), r.functional("@container", (l)=>{
        let f = null;
        if (l.value === null ? f = "inline-size" : l.value.kind === "arbitrary" ? f = l.value.value : l.value.kind === "named" && l.value.value === "normal" ? f = "normal" : !1, f !== null) return l.modifier ? [
            o("container-type", f),
            o("container-name", l.modifier.value)
        ] : [
            o("container-type", f)
        ];
    }), i("@container", ()=>[
            {
                values: [
                    "normal"
                ],
                valueThemeKeys: [],
                hasDefaultValue: !0
            }
        ]), r;
}
var _t1 = [
    "number",
    "integer",
    "ratio",
    "percentage"
];
function Er(e) {
    let r = e.params;
    return xn.test(r) ? (i)=>{
        let t = {
            "--value": {
                usedSpacingInteger: !1,
                usedSpacingNumber: !1,
                themeKeys: new Set,
                literals: new Set
            },
            "--modifier": {
                usedSpacingInteger: !1,
                usedSpacingNumber: !1,
                themeKeys: new Set,
                literals: new Set
            }
        };
        L(e.nodes, (n)=>{
            if (n.kind !== "declaration" || !n.value || !n.value.includes("--value(") && !n.value.includes("--modifier(")) return;
            let s = G(n.value);
            ee(s, (a)=>{
                if (a.kind !== "function") return;
                if (a.value === "--spacing" && !(t["--modifier"].usedSpacingNumber && t["--value"].usedSpacingNumber)) return ee(a.nodes, (u)=>{
                    if (u.kind !== "function" || u.value !== "--value" && u.value !== "--modifier") return;
                    let c = u.value;
                    for (let m of u.nodes)if (m.kind === "word") {
                        var _t_c, _t_c1;
                        if (m.value === "integer") (_t_c = t[c]).usedSpacingInteger || (_t_c.usedSpacingInteger = !0);
                        else if (m.value === "number" && ((_t_c1 = t[c]).usedSpacingNumber || (_t_c1.usedSpacingNumber = !0), t["--modifier"].usedSpacingNumber && t["--value"].usedSpacingNumber)) return 2;
                    }
                }), 0;
                if (a.value !== "--value" && a.value !== "--modifier") return;
                let p = U(J(a.nodes), ",");
                for (let [u, c] of p.entries())c = c.replace(/\\\*/g, "*"), c = c.replace(/--(.*?)\s--(.*?)/g, "--$1-*--$2"), c = c.replace(/\s+/g, ""), c = c.replace(/(-\*){2,}/g, "-*"), c[0] === "-" && c[1] === "-" && !c.includes("-*") && (c += "-*"), p[u] = c;
                a.nodes = G(p.join(","));
                for (let u of a.nodes)if (u.kind === "word" && (u.value[0] === '"' || u.value[0] === "'") && u.value[0] === u.value[u.value.length - 1]) {
                    let c = u.value.slice(1, -1);
                    t[a.value].literals.add(c);
                } else if (u.kind === "word" && u.value[0] === "-" && u.value[1] === "-") {
                    let c = u.value.replace(/-\*.*$/g, "");
                    t[a.value].themeKeys.add(c);
                } else if (u.kind === "word" && !(u.value[0] === "[" && u.value[u.value.length - 1] === "]") && !_t1.includes(u.value)) {
                    console.warn('Unsupported bare value data type: "'.concat(u.value, '".\nOnly valid data types are: ').concat(_t1.map((k1)=>'"'.concat(k1, '"')).join(", "), ".\n"));
                    let c = u.value, m = structuredClone(a), g = "\xB6";
                    ee(m.nodes, (k1, param)=>{
                        let { replaceWith: x } = param;
                        k1.kind === "word" && k1.value === c && x({
                            kind: "word",
                            value: g
                        });
                    });
                    let d = "^".repeat(J([
                        u
                    ]).length), w = J([
                        m
                    ]).indexOf(g), v = [
                        "```css",
                        J([
                            a
                        ]),
                        " ".repeat(w) + d,
                        "```"
                    ].join("\n");
                    console.warn(v);
                }
            }), n.value = J(s);
        }), i.utilities.functional(r.slice(0, -2), (n)=>{
            let s = structuredClone(e), a = n.value, p = n.modifier;
            if (a === null) return;
            let u = !1, c = !1, m = !1, g = !1, d = new Map, w = !1;
            if (L([
                s
            ], (v, param)=>{
                let { parent: k1, replaceWith: x } = param;
                if ((k1 === null || k1 === void 0 ? void 0 : k1.kind) !== "rule" && (k1 === null || k1 === void 0 ? void 0 : k1.kind) !== "at-rule" || v.kind !== "declaration" || !v.value) return;
                let S = G(v.value);
                var _ee;
                ((_ee = ee(S, (b, param)=>{
                    let { replaceWith: _ } = param;
                    if (b.kind === "function") {
                        if (b.value === "--value") {
                            u = !0;
                            let R = $r(a, b, i);
                            return R ? (c = !0, R.ratio ? w = !0 : d.set(v, k1), _(R.nodes), 1) : (u || (u = !1), x([]), 2);
                        } else if (b.value === "--modifier") {
                            if (p === null) return x([]), 2;
                            m = !0;
                            let R = $r(p, b, i);
                            return R ? (g = !0, _(R.nodes), 1) : (m || (m = !1), x([]), 2);
                        }
                    }
                })) !== null && _ee !== void 0 ? _ee : 0) === 0 && (v.value = J(S));
            }), u && !c || m && !g || w && g || p && !w && !g) return null;
            if (w) for (let [v, k1] of d){
                let x = k1.nodes.indexOf(v);
                x !== -1 && k1.nodes.splice(x, 1);
            }
            return s.nodes;
        }), i.utilities.suggest(r.slice(0, -2), ()=>{
            let n = [], s = [];
            for (let [a, { literals: p, usedSpacingNumber: u, usedSpacingInteger: c, themeKeys: m }] of [
                [
                    n,
                    t["--value"]
                ],
                [
                    s,
                    t["--modifier"]
                ]
            ]){
                for (let g of p)a.push(g);
                if (u) a.push(...at);
                else if (c) for (let g of at)T(g) && a.push(g);
                for (let g of i.theme.keysInNamespaces(m))a.push(g.replace(Vr, (d, w, v)=>"".concat(w, ".").concat(v)));
            }
            return [
                {
                    values: n,
                    modifiers: s
                }
            ];
        });
    } : bn.test(r) ? (i)=>{
        i.utilities.static(r, ()=>structuredClone(e.nodes));
    } : null;
}
function $r(e, r, i) {
    for (let t of r.nodes){
        if (e.kind === "named" && t.kind === "word" && (t.value[0] === "'" || t.value[0] === '"') && t.value[t.value.length - 1] === t.value[0] && t.value.slice(1, -1) === e.value) return {
            nodes: G(e.value)
        };
        if (e.kind === "named" && t.kind === "word" && t.value[0] === "-" && t.value[1] === "-") {
            let n = t.value;
            if (n.endsWith("-*")) {
                n = n.slice(0, -2);
                let s = i.theme.resolve(e.value, [
                    n
                ]);
                if (s) return {
                    nodes: G(s)
                };
            } else {
                let s = n.split("-*");
                if (s.length <= 1) continue;
                let a = [
                    s.shift()
                ], p = i.theme.resolveWith(e.value, a, s);
                if (p) {
                    let [, u = {}] = p;
                    {
                        let c = u[s.pop()];
                        if (c) return {
                            nodes: G(c)
                        };
                    }
                }
            }
        } else if (e.kind === "named" && t.kind === "word") {
            if (!_t1.includes(t.value)) continue;
            let n = t.value === "ratio" && "fraction" in e ? e.fraction : e.value;
            if (!n) continue;
            let s = Z(n, [
                t.value
            ]);
            if (s === null) continue;
            if (s === "ratio") {
                let [a, p] = U(n, "/");
                if (!T(a) || !T(p)) continue;
            } else {
                if (s === "number" && !xe(n)) continue;
                if (s === "percentage" && !T(n.slice(0, -1))) continue;
            }
            return {
                nodes: G(n),
                ratio: s === "ratio"
            };
        } else if (e.kind === "arbitrary" && t.kind === "word" && t.value[0] === "[" && t.value[t.value.length - 1] === "]") {
            let n = t.value.slice(1, -1);
            if (n === "*") return {
                nodes: G(e.value)
            };
            if ("dataType" in e && e.dataType && e.dataType !== n) continue;
            if ("dataType" in e && e.dataType) return {
                nodes: G(e.value)
            };
            if (Z(e.value, [
                n
            ]) !== null) return {
                nodes: G(e.value)
            };
        }
    }
}
function pe(e, r, i, t) {
    let n = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : "";
    let s = !1, a = Ue(r, (u)=>i == null ? t(u) : u.startsWith("current") ? t(Q(u, i)) : ((u.startsWith("var(") || i.startsWith("var(")) && (s = !0), t(Nr(u, i))));
    function p(u) {
        return n ? U(u, ",").map((c)=>n + c).join(",") : u;
    }
    return s ? [
        o(e, p(Ue(r, t))),
        Y("@supports (color: lab(from red l a b))", [
            o(e, p(a))
        ])
    ] : [
        o(e, p(a))
    ];
}
function lt(e, r, i, t) {
    let n = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : "";
    let s = !1, a = U(r, ",").map((p)=>Ue(p, (u)=>i == null ? t(u) : u.startsWith("current") ? t(Q(u, i)) : ((u.startsWith("var(") || i.startsWith("var(")) && (s = !0), t(Nr(u, i))))).map((p)=>"drop-shadow(".concat(p, ")")).join(" ");
    return s ? [
        o(e, n + U(r, ",").map((p)=>"drop-shadow(".concat(Ue(p, t), ")")).join(" ")),
        Y("@supports (color: lab(from red l a b))", [
            o(e, n + a)
        ])
    ] : [
        o(e, n + a)
    ];
}
var Dt = {
    "--alpha": An,
    "--spacing": Cn,
    "--theme": $n,
    theme: Nn
};
function An(e, r, i) {
    for(var _len = arguments.length, t = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++){
        t[_key - 3] = arguments[_key];
    }
    let [n, s] = U(i, "/").map((a)=>a.trim());
    if (!n || !s) throw new Error("The --alpha(…) function requires a color and an alpha value, e.g.: `--alpha(".concat(n || "var(--my-color)", " / ").concat(s || "50%", ")`"));
    if (t.length > 0) throw new Error("The --alpha(…) function only accepts one argument, e.g.: `--alpha(".concat(n || "var(--my-color)", " / ").concat(s || "50%", ")`"));
    return Q(n, s);
}
function Cn(e, r, i) {
    for(var _len = arguments.length, t = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++){
        t[_key - 3] = arguments[_key];
    }
    if (!i) throw new Error("The --spacing(\u2026) function requires an argument, but received none.");
    if (t.length > 0) throw new Error("The --spacing(…) function only accepts a single argument, but received ".concat(t.length + 1, "."));
    let n = e.theme.resolve(null, [
        "--spacing"
    ]);
    if (!n) throw new Error("The --spacing(\u2026) function requires that the `--spacing` theme variable exists, but it was not found.");
    return "calc(".concat(n, " * ").concat(i, ")");
}
function $n(e, r, i) {
    for(var _len = arguments.length, t = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++){
        t[_key - 3] = arguments[_key];
    }
    if (!i.startsWith("--")) throw new Error("The --theme(\u2026) function can only be used with CSS variables from your theme.");
    let n = !1;
    i.endsWith(" inline") && (n = !0, i = i.slice(0, -7)), r.kind === "at-rule" && (n = !0);
    let s = e.resolveThemeValue(i, n);
    if (!s) {
        if (t.length > 0) return t.join(", ");
        throw new Error("Could not resolve value for theme function: `theme(".concat(i, ")`. Consider checking if the variable name is correct or provide a fallback value to silence this error."));
    }
    if (t.length === 0) return s;
    let a = t.join(", ");
    if (a === "initial") return s;
    if (s === "initial") return a;
    if (s.startsWith("var(") || s.startsWith("theme(") || s.startsWith("--theme(")) {
        let p = G(s);
        return Sn(p, a), J(p);
    }
    return s;
}
function Nn(e, r, i) {
    for(var _len = arguments.length, t = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++){
        t[_key - 3] = arguments[_key];
    }
    i = Vn(i);
    let n = e.resolveThemeValue(i);
    if (!n && t.length > 0) return t.join(", ");
    if (!n) throw new Error("Could not resolve value for theme function: `theme(".concat(i, ")`. Consider checking if the path is correct or provide a fallback value to silence this error."));
    return n;
}
var Tr = new RegExp(Object.keys(Dt).map((e)=>"".concat(e, "\\(")).join("|"));
function Se(e, r) {
    let i = 0;
    return L(e, (t)=>{
        if (t.kind === "declaration" && t.value && Tr.test(t.value)) {
            i |= 8, t.value = Rr(t.value, t, r);
            return;
        }
        t.kind === "at-rule" && (t.name === "@media" || t.name === "@custom-media" || t.name === "@container" || t.name === "@supports") && Tr.test(t.params) && (i |= 8, t.params = Rr(t.params, t, r));
    }), i;
}
function Rr(e, r, i) {
    let t = G(e);
    return ee(t, (n, param)=>{
        let { replaceWith: s } = param;
        if (n.kind === "function" && n.value in Dt) {
            let a = U(J(n.nodes).trim(), ",").map((u)=>u.trim()), p = Dt[n.value](i, r, ...a);
            return s(G(p));
        }
    }), J(t);
}
function Vn(e) {
    if (e[0] !== "'" && e[0] !== '"') return e;
    let r = "", i = e[0];
    for(let t = 1; t < e.length - 1; t++){
        let n = e[t], s = e[t + 1];
        n === "\\" && (s === i || s === "\\") ? (r += s, t++) : r += n;
    }
    return r;
}
function Sn(e, r) {
    ee(e, (i)=>{
        if (i.kind === "function" && !(i.value !== "var" && i.value !== "theme" && i.value !== "--theme")) if (i.nodes.length === 1) i.nodes.push({
            kind: "word",
            value: ", ".concat(r)
        });
        else {
            let t = i.nodes[i.nodes.length - 1];
            t.kind === "word" && t.value === "initial" && (t.value = r);
        }
    });
}
function st(e, r) {
    let i = e.length, t = r.length, n = i < t ? i : t;
    for(let s = 0; s < n; s++){
        let a = e.charCodeAt(s), p = r.charCodeAt(s);
        if (a >= 48 && a <= 57 && p >= 48 && p <= 57) {
            let u = s, c = s + 1, m = s, g = s + 1;
            for(a = e.charCodeAt(c); a >= 48 && a <= 57;)a = e.charCodeAt(++c);
            for(p = r.charCodeAt(g); p >= 48 && p <= 57;)p = r.charCodeAt(++g);
            let d = e.slice(u, c), w = r.slice(m, g), v = Number(d) - Number(w);
            if (v) return v;
            if (d < w) return -1;
            if (d > w) return 1;
            continue;
        }
        if (a !== p) return a - p;
    }
    return e.length - r.length;
}
var En = /^\d+\/\d+$/;
function Pr(e) {
    let r = new W((n)=>({
            name: n,
            utility: n,
            fraction: !1,
            modifiers: []
        }));
    for (let n of e.utilities.keys("static")){
        let s = r.get(n);
        s.fraction = !1, s.modifiers = [];
    }
    for (let n of e.utilities.keys("functional")){
        let s = e.utilities.getCompletions(n);
        for (let a of s)for (let p of a.values){
            var _m;
            let u = p !== null && En.test(p), c = p === null ? n : "".concat(n, "-").concat(p), m = r.get(c);
            if (m.utility = n, (_m = m).fraction || (_m.fraction = u), m.modifiers.push(...a.modifiers), a.supportsNegative) {
                var _g;
                let g = r.get("-".concat(c));
                g.utility = "-".concat(n), (_g = g).fraction || (_g.fraction = u), g.modifiers.push(...a.modifiers);
            }
            m.modifiers = Array.from(new Set(m.modifiers));
        }
    }
    if (r.size === 0) return [];
    let i = Array.from(r.values());
    return i.sort((n, s)=>st(n.name, s.name)), Tn(i);
}
function Tn(e) {
    let r = [], i = null, t = new Map, n = new W(()=>[]);
    for (let a of e){
        let { utility: p, fraction: u } = a;
        i || (i = {
            utility: p,
            items: []
        }, t.set(p, i)), p !== i.utility && (r.push(i), i = {
            utility: p,
            items: []
        }, t.set(p, i)), u ? n.get(p).push(a) : i.items.push(a);
    }
    i && r[r.length - 1] !== i && r.push(i);
    for (let [a, p] of n){
        let u = t.get(a);
        u && u.items.push(...p);
    }
    let s = [];
    for (let a of r)for (let p of a.items)s.push([
        p.name,
        {
            modifiers: p.modifiers
        }
    ]);
    return s;
}
function Or(e) {
    let r = [];
    for (let [t, n] of e.variants.entries()){
        let p = function() {
            let { value: u, modifier: c } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
            let m = t;
            u && (m += s ? "-".concat(u) : u), c && (m += "/".concat(c));
            let g = e.parseVariant(m);
            if (!g) return [];
            let d = B(".__placeholder__", []);
            if (Ee(d, g, e.variants) === null) return [];
            let w = [];
            return Xe(d.nodes, (v, param)=>{
                let { path: k1 } = param;
                if (v.kind !== "rule" && v.kind !== "at-rule" || v.nodes.length > 0) return;
                k1.sort((C, b)=>{
                    let _ = C.kind === "at-rule", R = b.kind === "at-rule";
                    return _ && !R ? -1 : !_ && R ? 1 : 0;
                });
                let x = k1.flatMap((C)=>C.kind === "rule" ? C.selector === "&" ? [] : [
                        C.selector
                    ] : C.kind === "at-rule" ? [
                        "".concat(C.name, " ").concat(C.params)
                    ] : []), S = "";
                for(let C = x.length - 1; C >= 0; C--)S = S === "" ? x[C] : "".concat(x[C], " { ").concat(S, " }");
                w.push(S);
            }), w;
        };
        var i = p;
        if (n.kind === "arbitrary") continue;
        let s = t !== "@", a = e.variants.getCompletions(t);
        switch(n.kind){
            case "static":
                {
                    r.push({
                        name: t,
                        values: a,
                        isArbitrary: !1,
                        hasDash: s,
                        selectors: p
                    });
                    break;
                }
            case "functional":
                {
                    r.push({
                        name: t,
                        values: a,
                        isArbitrary: !0,
                        hasDash: s,
                        selectors: p
                    });
                    break;
                }
            case "compound":
                {
                    r.push({
                        name: t,
                        values: a,
                        isArbitrary: !0,
                        hasDash: s,
                        selectors: p
                    });
                    break;
                }
        }
    }
    return r;
}
function _r1(e, r) {
    let { astNodes: i, nodeSorting: t } = ge(Array.from(r), e), n = new Map(r.map((a)=>[
            a,
            null
        ])), s = 0n;
    for (let a of i){
        var _t_get;
        let p = (_t_get = t.get(a)) === null || _t_get === void 0 ? void 0 : _t_get.candidate;
        var _n_get;
        p && n.set(p, (_n_get = n.get(p)) !== null && _n_get !== void 0 ? _n_get : s++);
    }
    return r.map((a)=>{
        var _n_get;
        return [
            a,
            (_n_get = n.get(a)) !== null && _n_get !== void 0 ? _n_get : null
        ];
    });
}
var ut = RegExp("^@?[a-z0-9][a-zA-Z0-9_-]*(?<![_-])$");
var Kt = class {
    static(r, i) {
        let { compounds: t, order: n } = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
        this.set(r, {
            kind: "static",
            applyFn: i,
            compoundsWith: 0,
            compounds: t !== null && t !== void 0 ? t : 2,
            order: n
        });
    }
    fromAst(r, i, t) {
        let n = [], s = !1;
        L(i, (a)=>{
            a.kind === "rule" ? n.push(a.selector) : a.kind === "at-rule" && a.name === "@variant" ? s = !0 : a.kind === "at-rule" && a.name !== "@slot" && n.push("".concat(a.name, " ").concat(a.params));
        }), this.static(r, (a)=>{
            let p = structuredClone(i);
            s && Lt(p, t), Ut(p, a.nodes), a.nodes = p;
        }, {
            compounds: Ce(n)
        });
    }
    functional(r, i) {
        let { compounds: t, order: n } = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
        this.set(r, {
            kind: "functional",
            applyFn: i,
            compoundsWith: 0,
            compounds: t !== null && t !== void 0 ? t : 2,
            order: n
        });
    }
    compound(r, i, t) {
        let { compounds: n, order: s } = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
        this.set(r, {
            kind: "compound",
            applyFn: t,
            compoundsWith: i,
            compounds: n !== null && n !== void 0 ? n : 2,
            order: s
        });
    }
    group(r, i) {
        this.groupOrder = this.nextOrder(), i && this.compareFns.set(this.groupOrder, i), r(), this.groupOrder = null;
    }
    has(r) {
        return this.variants.has(r);
    }
    get(r) {
        return this.variants.get(r);
    }
    kind(r) {
        var _this_variants_get;
        return (_this_variants_get = this.variants.get(r)) === null || _this_variants_get === void 0 ? void 0 : _this_variants_get.kind;
    }
    compoundsWith(r, i) {
        let t = this.variants.get(r), n = typeof i == "string" ? this.variants.get(i) : i.kind === "arbitrary" ? {
            compounds: Ce([
                i.selector
            ])
        } : this.variants.get(i.root);
        return !(!t || !n || t.kind !== "compound" || n.compounds === 0 || t.compoundsWith === 0 || (t.compoundsWith & n.compounds) === 0);
    }
    suggest(r, i) {
        this.completions.set(r, i);
    }
    getCompletions(r) {
        var _this_completions_get;
        var _this_completions_get1;
        return (_this_completions_get1 = (_this_completions_get = this.completions.get(r)) === null || _this_completions_get === void 0 ? void 0 : _this_completions_get()) !== null && _this_completions_get1 !== void 0 ? _this_completions_get1 : [];
    }
    compare(r, i) {
        if (r === i) return 0;
        if (r === null) return -1;
        if (i === null) return 1;
        if (r.kind === "arbitrary" && i.kind === "arbitrary") return r.selector < i.selector ? -1 : 1;
        if (r.kind === "arbitrary") return 1;
        if (i.kind === "arbitrary") return -1;
        let t = this.variants.get(r.root).order, n = this.variants.get(i.root).order, s = t - n;
        if (s !== 0) return s;
        if (r.kind === "compound" && i.kind === "compound") {
            let c = this.compare(r.variant, i.variant);
            return c !== 0 ? c : r.modifier && i.modifier ? r.modifier.value < i.modifier.value ? -1 : 1 : r.modifier ? 1 : i.modifier ? -1 : 0;
        }
        let a = this.compareFns.get(t);
        if (a !== void 0) return a(r, i);
        if (r.root !== i.root) return r.root < i.root ? -1 : 1;
        let p = r.value, u = i.value;
        return p === null ? -1 : u === null || p.kind === "arbitrary" && u.kind !== "arbitrary" ? 1 : p.kind !== "arbitrary" && u.kind === "arbitrary" || p.value < u.value ? -1 : 1;
    }
    keys() {
        return this.variants.keys();
    }
    entries() {
        return this.variants.entries();
    }
    set(r, param) {
        let { kind: i, applyFn: t, compounds: n, compoundsWith: s, order: a } = param;
        let p = this.variants.get(r);
        p ? Object.assign(p, {
            kind: i,
            applyFn: t,
            compounds: n
        }) : (a === void 0 && (this.lastOrder = this.nextOrder(), a = this.lastOrder), this.variants.set(r, {
            kind: i,
            applyFn: t,
            order: a,
            compoundsWith: s,
            compounds: n
        }));
    }
    nextOrder() {
        var _this_groupOrder;
        return (_this_groupOrder = this.groupOrder) !== null && _this_groupOrder !== void 0 ? _this_groupOrder : this.lastOrder + 1;
    }
    constructor(){
        _define_property._(this, "compareFns", new Map);
        _define_property._(this, "variants", new Map);
        _define_property._(this, "completions", new Map);
        _define_property._(this, "groupOrder", null);
        _define_property._(this, "lastOrder", 0);
    }
};
function Ce(e) {
    let r = 0;
    for (let i of e){
        if (i[0] === "@") {
            if (!i.startsWith("@media") && !i.startsWith("@supports") && !i.startsWith("@container")) return 0;
            r |= 1;
            continue;
        }
        if (i.includes("::")) return 0;
        r |= 2;
    }
    return r;
}
function Kr(e) {
    let r = new Kt;
    function i(c, m) {
        let { compounds: g } = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
        g = g !== null && g !== void 0 ? g : Ce(m), r.static(c, (d)=>{
            d.nodes = m.map((w)=>Y(w, d.nodes));
        }, {
            compounds: g
        });
    }
    i("*", [
        ":is(& > *)"
    ], {
        compounds: 0
    }), i("**", [
        ":is(& *)"
    ], {
        compounds: 0
    });
    function t(c, m) {
        return m.map((g)=>{
            g = g.trim();
            let d = U(g, " ");
            return d[0] === "not" ? d.slice(1).join(" ") : c === "@container" ? d[0][0] === "(" ? "not ".concat(g) : d[1] === "not" ? "".concat(d[0], " ").concat(d.slice(2).join(" ")) : "".concat(d[0], " not ").concat(d.slice(1).join(" ")) : "not ".concat(g);
        });
    }
    let n = [
        "@media",
        "@supports",
        "@container"
    ];
    function s(c) {
        for (let m of n){
            if (m !== c.name) continue;
            let g = U(c.params, ",");
            return g.length > 1 ? null : (g = t(c.name, g), F(c.name, g.join(", ")));
        }
        return null;
    }
    function a(c) {
        return c.includes("::") ? null : "&:not(".concat(U(c, ",").map((g)=>(g = g.replaceAll("&", "*"), g)).join(", "), ")");
    }
    r.compound("not", 3, (c, m)=>{
        if (m.variant.kind === "arbitrary" && m.variant.relative || m.modifier) return null;
        let g = !1;
        if (L([
            c
        ], (d, param)=>{
            let { path: w } = param;
            if (d.kind !== "rule" && d.kind !== "at-rule") return 0;
            if (d.nodes.length > 0) return 0;
            let v = [], k1 = [];
            for (let S of w)S.kind === "at-rule" ? v.push(S) : S.kind === "rule" && k1.push(S);
            if (v.length > 1) return 2;
            if (k1.length > 1) return 2;
            let x = [];
            for (let S of k1){
                let C = a(S.selector);
                if (!C) return g = !1, 2;
                x.push(B(C, []));
            }
            for (let S of v){
                let C = s(S);
                if (!C) return g = !1, 2;
                x.push(C);
            }
            return Object.assign(c, B("&", x)), g = !0, 1;
        }), c.kind === "rule" && c.selector === "&" && c.nodes.length === 1 && Object.assign(c, c.nodes[0]), !g) return null;
    }), r.suggest("not", ()=>Array.from(r.keys()).filter((c)=>r.compoundsWith("not", c))), r.compound("group", 2, (c, m)=>{
        if (m.variant.kind === "arbitrary" && m.variant.relative) return null;
        let g = m.modifier ? ":where(.".concat(e.prefix ? "".concat(e.prefix, "\\:") : "", "group\\/").concat(m.modifier.value, ")") : ":where(.".concat(e.prefix ? "".concat(e.prefix, "\\:") : "", "group)"), d = !1;
        if (L([
            c
        ], (w, param)=>{
            let { path: v } = param;
            if (w.kind !== "rule") return 0;
            for (let x of v.slice(0, -1))if (x.kind === "rule") return d = !1, 2;
            let k1 = w.selector.replaceAll("&", g);
            U(k1, ",").length > 1 && (k1 = ":is(".concat(k1, ")")), w.selector = "&:is(".concat(k1, " *)"), d = !0;
        }), !d) return null;
    }), r.suggest("group", ()=>Array.from(r.keys()).filter((c)=>r.compoundsWith("group", c))), r.compound("peer", 2, (c, m)=>{
        if (m.variant.kind === "arbitrary" && m.variant.relative) return null;
        let g = m.modifier ? ":where(.".concat(e.prefix ? "".concat(e.prefix, "\\:") : "", "peer\\/").concat(m.modifier.value, ")") : ":where(.".concat(e.prefix ? "".concat(e.prefix, "\\:") : "", "peer)"), d = !1;
        if (L([
            c
        ], (w, param)=>{
            let { path: v } = param;
            if (w.kind !== "rule") return 0;
            for (let x of v.slice(0, -1))if (x.kind === "rule") return d = !1, 2;
            let k1 = w.selector.replaceAll("&", g);
            U(k1, ",").length > 1 && (k1 = ":is(".concat(k1, ")")), w.selector = "&:is(".concat(k1, " ~ *)"), d = !0;
        }), !d) return null;
    }), r.suggest("peer", ()=>Array.from(r.keys()).filter((c)=>r.compoundsWith("peer", c))), i("first-letter", [
        "&::first-letter"
    ]), i("first-line", [
        "&::first-line"
    ]), i("marker", [
        "& *::marker",
        "&::marker",
        "& *::-webkit-details-marker",
        "&::-webkit-details-marker"
    ]), i("selection", [
        "& *::selection",
        "&::selection"
    ]), i("file", [
        "&::file-selector-button"
    ]), i("placeholder", [
        "&::placeholder"
    ]), i("backdrop", [
        "&::backdrop"
    ]), i("details-content", [
        "&::details-content"
    ]);
    {
        let c = function() {
            return z([
                F("@property", "--tw-content", [
                    o("syntax", '"*"'),
                    o("initial-value", '""'),
                    o("inherits", "false")
                ])
            ]);
        };
        var p = c;
        r.static("before", (m)=>{
            m.nodes = [
                B("&::before", [
                    c(),
                    o("content", "var(--tw-content)"),
                    ...m.nodes
                ])
            ];
        }, {
            compounds: 0
        }), r.static("after", (m)=>{
            m.nodes = [
                B("&::after", [
                    c(),
                    o("content", "var(--tw-content)"),
                    ...m.nodes
                ])
            ];
        }, {
            compounds: 0
        });
    }
    i("first", [
        "&:first-child"
    ]), i("last", [
        "&:last-child"
    ]), i("only", [
        "&:only-child"
    ]), i("odd", [
        "&:nth-child(odd)"
    ]), i("even", [
        "&:nth-child(even)"
    ]), i("first-of-type", [
        "&:first-of-type"
    ]), i("last-of-type", [
        "&:last-of-type"
    ]), i("only-of-type", [
        "&:only-of-type"
    ]), i("visited", [
        "&:visited"
    ]), i("target", [
        "&:target"
    ]), i("open", [
        "&:is([open], :popover-open, :open)"
    ]), i("default", [
        "&:default"
    ]), i("checked", [
        "&:checked"
    ]), i("indeterminate", [
        "&:indeterminate"
    ]), i("placeholder-shown", [
        "&:placeholder-shown"
    ]), i("autofill", [
        "&:autofill"
    ]), i("optional", [
        "&:optional"
    ]), i("required", [
        "&:required"
    ]), i("valid", [
        "&:valid"
    ]), i("invalid", [
        "&:invalid"
    ]), i("user-valid", [
        "&:user-valid"
    ]), i("user-invalid", [
        "&:user-invalid"
    ]), i("in-range", [
        "&:in-range"
    ]), i("out-of-range", [
        "&:out-of-range"
    ]), i("read-only", [
        "&:read-only"
    ]), i("empty", [
        "&:empty"
    ]), i("focus-within", [
        "&:focus-within"
    ]), r.static("hover", (c)=>{
        c.nodes = [
            B("&:hover", [
                F("@media", "(hover: hover)", c.nodes)
            ])
        ];
    }), i("focus", [
        "&:focus"
    ]), i("focus-visible", [
        "&:focus-visible"
    ]), i("active", [
        "&:active"
    ]), i("enabled", [
        "&:enabled"
    ]), i("disabled", [
        "&:disabled"
    ]), i("inert", [
        "&:is([inert], [inert] *)"
    ]), r.compound("in", 2, (c, m)=>{
        if (m.modifier) return null;
        let g = !1;
        if (L([
            c
        ], (d, param)=>{
            let { path: w } = param;
            if (d.kind !== "rule") return 0;
            for (let v of w.slice(0, -1))if (v.kind === "rule") return g = !1, 2;
            d.selector = ":where(".concat(d.selector.replaceAll("&", "*"), ") &"), g = !0;
        }), !g) return null;
    }), r.suggest("in", ()=>Array.from(r.keys()).filter((c)=>r.compoundsWith("in", c))), r.compound("has", 2, (c, m)=>{
        if (m.modifier) return null;
        let g = !1;
        if (L([
            c
        ], (d, param)=>{
            let { path: w } = param;
            if (d.kind !== "rule") return 0;
            for (let v of w.slice(0, -1))if (v.kind === "rule") return g = !1, 2;
            d.selector = "&:has(".concat(d.selector.replaceAll("&", "*"), ")"), g = !0;
        }), !g) return null;
    }), r.suggest("has", ()=>Array.from(r.keys()).filter((c)=>r.compoundsWith("has", c))), r.functional("aria", (c, m)=>{
        if (!m.value || m.modifier) return null;
        m.value.kind === "arbitrary" ? c.nodes = [
            B("&[aria-".concat(Dr(m.value.value), "]"), c.nodes)
        ] : c.nodes = [
            B("&[aria-".concat(m.value.value, '="true"]'), c.nodes)
        ];
    }), r.suggest("aria", ()=>[
            "busy",
            "checked",
            "disabled",
            "expanded",
            "hidden",
            "pressed",
            "readonly",
            "required",
            "selected"
        ]), r.functional("data", (c, m)=>{
        if (!m.value || m.modifier) return null;
        c.nodes = [
            B("&[data-".concat(Dr(m.value.value), "]"), c.nodes)
        ];
    }), r.functional("nth", (c, m)=>{
        if (!m.value || m.modifier || m.value.kind === "named" && !T(m.value.value)) return null;
        c.nodes = [
            B("&:nth-child(".concat(m.value.value, ")"), c.nodes)
        ];
    }), r.functional("nth-last", (c, m)=>{
        if (!m.value || m.modifier || m.value.kind === "named" && !T(m.value.value)) return null;
        c.nodes = [
            B("&:nth-last-child(".concat(m.value.value, ")"), c.nodes)
        ];
    }), r.functional("nth-of-type", (c, m)=>{
        if (!m.value || m.modifier || m.value.kind === "named" && !T(m.value.value)) return null;
        c.nodes = [
            B("&:nth-of-type(".concat(m.value.value, ")"), c.nodes)
        ];
    }), r.functional("nth-last-of-type", (c, m)=>{
        if (!m.value || m.modifier || m.value.kind === "named" && !T(m.value.value)) return null;
        c.nodes = [
            B("&:nth-last-of-type(".concat(m.value.value, ")"), c.nodes)
        ];
    }), r.functional("supports", (c, m)=>{
        if (!m.value || m.modifier) return null;
        let g = m.value.value;
        if (g === null) return null;
        if (/^[\w-]*\s*\(/.test(g)) {
            let d = g.replace(/\b(and|or|not)\b/g, " $1 ");
            c.nodes = [
                F("@supports", d, c.nodes)
            ];
            return;
        }
        g.includes(":") || (g = "".concat(g, ": var(--tw)")), (g[0] !== "(" || g[g.length - 1] !== ")") && (g = "(".concat(g, ")")), c.nodes = [
            F("@supports", g, c.nodes)
        ];
    }, {
        compounds: 1
    }), i("motion-safe", [
        "@media (prefers-reduced-motion: no-preference)"
    ]), i("motion-reduce", [
        "@media (prefers-reduced-motion: reduce)"
    ]), i("contrast-more", [
        "@media (prefers-contrast: more)"
    ]), i("contrast-less", [
        "@media (prefers-contrast: less)"
    ]);
    {
        let c = function(m, g, d, w) {
            if (m === g) return 0;
            let v = w.get(m);
            if (v === null) return d === "asc" ? -1 : 1;
            let k1 = w.get(g);
            return k1 === null ? d === "asc" ? 1 : -1 : be(v, k1, d);
        };
        var u = c;
        {
            let m = e.namespace("--breakpoint"), g = new W((d)=>{
                switch(d.kind){
                    case "static":
                        var _e_resolveValue;
                        return (_e_resolveValue = e.resolveValue(d.root, [
                            "--breakpoint"
                        ])) !== null && _e_resolveValue !== void 0 ? _e_resolveValue : null;
                    case "functional":
                        {
                            if (!d.value || d.modifier) return null;
                            let w = null;
                            return d.value.kind === "arbitrary" ? w = d.value.value : d.value.kind === "named" && (w = e.resolveValue(d.value.value, [
                                "--breakpoint"
                            ])), !w || w.includes("var(") ? null : w;
                        }
                    case "arbitrary":
                    case "compound":
                        return null;
                }
            });
            r.group(()=>{
                r.functional("max", (d, w)=>{
                    if (w.modifier) return null;
                    let v = g.get(w);
                    if (v === null) return null;
                    d.nodes = [
                        F("@media", "(width < ".concat(v, ")"), d.nodes)
                    ];
                }, {
                    compounds: 1
                });
            }, (d, w)=>c(d, w, "desc", g)), r.suggest("max", ()=>Array.from(m.keys()).filter((d)=>d !== null)), r.group(()=>{
                for (let [d, w] of e.namespace("--breakpoint"))d !== null && r.static(d, (v)=>{
                    v.nodes = [
                        F("@media", "(width >= ".concat(w, ")"), v.nodes)
                    ];
                }, {
                    compounds: 1
                });
                r.functional("min", (d, w)=>{
                    if (w.modifier) return null;
                    let v = g.get(w);
                    if (v === null) return null;
                    d.nodes = [
                        F("@media", "(width >= ".concat(v, ")"), d.nodes)
                    ];
                }, {
                    compounds: 1
                });
            }, (d, w)=>c(d, w, "asc", g)), r.suggest("min", ()=>Array.from(m.keys()).filter((d)=>d !== null));
        }
        {
            let m = e.namespace("--container"), g = new W((d)=>{
                switch(d.kind){
                    case "functional":
                        {
                            if (d.value === null) return null;
                            let w = null;
                            return d.value.kind === "arbitrary" ? w = d.value.value : d.value.kind === "named" && (w = e.resolveValue(d.value.value, [
                                "--container"
                            ])), !w || w.includes("var(") ? null : w;
                        }
                    case "static":
                    case "arbitrary":
                    case "compound":
                        return null;
                }
            });
            r.group(()=>{
                r.functional("@max", (d, w)=>{
                    let v = g.get(w);
                    if (v === null) return null;
                    d.nodes = [
                        F("@container", w.modifier ? "".concat(w.modifier.value, " (width < ").concat(v, ")") : "(width < ".concat(v, ")"), d.nodes)
                    ];
                }, {
                    compounds: 1
                });
            }, (d, w)=>c(d, w, "desc", g)), r.suggest("@max", ()=>Array.from(m.keys()).filter((d)=>d !== null)), r.group(()=>{
                r.functional("@", (d, w)=>{
                    let v = g.get(w);
                    if (v === null) return null;
                    d.nodes = [
                        F("@container", w.modifier ? "".concat(w.modifier.value, " (width >= ").concat(v, ")") : "(width >= ".concat(v, ")"), d.nodes)
                    ];
                }, {
                    compounds: 1
                }), r.functional("@min", (d, w)=>{
                    let v = g.get(w);
                    if (v === null) return null;
                    d.nodes = [
                        F("@container", w.modifier ? "".concat(w.modifier.value, " (width >= ").concat(v, ")") : "(width >= ".concat(v, ")"), d.nodes)
                    ];
                }, {
                    compounds: 1
                });
            }, (d, w)=>c(d, w, "asc", g)), r.suggest("@min", ()=>Array.from(m.keys()).filter((d)=>d !== null)), r.suggest("@", ()=>Array.from(m.keys()).filter((d)=>d !== null));
        }
    }
    return i("portrait", [
        "@media (orientation: portrait)"
    ]), i("landscape", [
        "@media (orientation: landscape)"
    ]), i("ltr", [
        '&:where(:dir(ltr), [dir="ltr"], [dir="ltr"] *)'
    ]), i("rtl", [
        '&:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *)'
    ]), i("dark", [
        "@media (prefers-color-scheme: dark)"
    ]), i("starting", [
        "@starting-style"
    ]), i("print", [
        "@media print"
    ]), i("forced-colors", [
        "@media (forced-colors: active)"
    ]), i("inverted-colors", [
        "@media (inverted-colors: inverted)"
    ]), i("pointer-none", [
        "@media (pointer: none)"
    ]), i("pointer-coarse", [
        "@media (pointer: coarse)"
    ]), i("pointer-fine", [
        "@media (pointer: fine)"
    ]), i("any-pointer-none", [
        "@media (any-pointer: none)"
    ]), i("any-pointer-coarse", [
        "@media (any-pointer: coarse)"
    ]), i("any-pointer-fine", [
        "@media (any-pointer: fine)"
    ]), i("noscript", [
        "@media (scripting: none)"
    ]), r;
}
function Dr(e) {
    if (e.includes("=")) {
        let [r, ...i] = U(e, "="), t = i.join("=").trim();
        if (t[0] === "'" || t[0] === '"') return e;
        if (t.length > 1) {
            let n = t[t.length - 1];
            if (t[t.length - 2] === " " && (n === "i" || n === "I" || n === "s" || n === "S")) return "".concat(r, '="').concat(t.slice(0, -2), '" ').concat(n);
        }
        return "".concat(r, '="').concat(t, '"');
    }
    return e;
}
function Ut(e, r) {
    L(e, (i, param)=>{
        let { replaceWith: t } = param;
        if (i.kind === "at-rule" && i.name === "@slot") t(r);
        else if (i.kind === "at-rule" && (i.name === "@keyframes" || i.name === "@property")) return Object.assign(i, z([
            F(i.name, i.params, i.nodes)
        ])), 1;
    });
}
function Lt(e, r) {
    let i = 0;
    return L(e, (t, param)=>{
        let { replaceWith: n } = param;
        if (t.kind !== "at-rule" || t.name !== "@variant") return;
        let s = B("&", t.nodes), a = t.params, p = r.parseVariant(a);
        if (p === null) throw new Error("Cannot use `@variant` with unknown variant: ".concat(a));
        if (Ee(s, p, r.variants) === null) throw new Error("Cannot use `@variant` with variant: ".concat(a));
        n(s), i |= 32;
    }), i;
}
function Ur(e) {
    let r = Sr(e), i = Kr(e), t = new W((u)=>hr(u, p)), n = new W((u)=>Array.from(gr(u, p))), s = new W((u)=>new W((c)=>{
            let m = Lr(c, p, u);
            try {
                Se(m.map((param)=>{
                    let { node: g } = param;
                    return g;
                }), p);
            } catch (e) {
                return [];
            }
            return m;
        })), a = new W((u)=>{
        for (let c of Qe(u))e.markUsedVariable(c);
    }), p = {
        theme: e,
        utilities: r,
        variants: i,
        invalidCandidates: new Set,
        important: !1,
        candidatesToCss (u) {
            let c = [];
            for (let m of u){
                let g = !1, { astNodes: d } = ge([
                    m
                ], this, {
                    onInvalidCandidate () {
                        g = !0;
                    }
                });
                d = ye(d, p, 0), d.length === 0 || g ? c.push(null) : c.push(ne(d));
            }
            return c;
        },
        getClassOrder (u) {
            return _r1(this, u);
        },
        getClassList () {
            return Pr(this);
        },
        getVariants () {
            return Or(this);
        },
        parseCandidate (u) {
            return n.get(u);
        },
        parseVariant (u) {
            return t.get(u);
        },
        compileAstNodes (u) {
            let c = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
            return s.get(c).get(u);
        },
        printCandidate (u) {
            return wr(p, u);
        },
        printVariant (u) {
            return it(u);
        },
        getVariantOrder () {
            let u = Array.from(t.values());
            u.sort((d, w)=>this.variants.compare(d, w));
            let c = new Map, m, g = 0;
            for (let d of u)d !== null && (m !== void 0 && this.variants.compare(m, d) !== 0 && g++, c.set(d, g), m = d);
            return c;
        },
        resolveThemeValue (u) {
            let c = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
            let m = u.lastIndexOf("/"), g = null;
            m !== -1 && (g = u.slice(m + 1).trim(), u = u.slice(0, m).trim());
            var _e_resolve;
            let d = (_e_resolve = e.resolve(null, [
                u
            ], c ? 1 : 0)) !== null && _e_resolve !== void 0 ? _e_resolve : void 0;
            return g && d ? Q(d, g) : d;
        },
        trackUsedVariables (u) {
            a.get(u);
        }
    };
    return p;
}
var It = [
    "container-type",
    "pointer-events",
    "visibility",
    "position",
    "inset",
    "inset-inline",
    "inset-block",
    "inset-inline-start",
    "inset-inline-end",
    "top",
    "right",
    "bottom",
    "left",
    "isolation",
    "z-index",
    "order",
    "grid-column",
    "grid-column-start",
    "grid-column-end",
    "grid-row",
    "grid-row-start",
    "grid-row-end",
    "float",
    "clear",
    "--tw-container-component",
    "margin",
    "margin-inline",
    "margin-block",
    "margin-inline-start",
    "margin-inline-end",
    "margin-top",
    "margin-right",
    "margin-bottom",
    "margin-left",
    "box-sizing",
    "display",
    "field-sizing",
    "aspect-ratio",
    "height",
    "max-height",
    "min-height",
    "width",
    "max-width",
    "min-width",
    "flex",
    "flex-shrink",
    "flex-grow",
    "flex-basis",
    "table-layout",
    "caption-side",
    "border-collapse",
    "border-spacing",
    "transform-origin",
    "translate",
    "--tw-translate-x",
    "--tw-translate-y",
    "--tw-translate-z",
    "scale",
    "--tw-scale-x",
    "--tw-scale-y",
    "--tw-scale-z",
    "rotate",
    "--tw-rotate-x",
    "--tw-rotate-y",
    "--tw-rotate-z",
    "--tw-skew-x",
    "--tw-skew-y",
    "transform",
    "animation",
    "cursor",
    "touch-action",
    "--tw-pan-x",
    "--tw-pan-y",
    "--tw-pinch-zoom",
    "resize",
    "scroll-snap-type",
    "--tw-scroll-snap-strictness",
    "scroll-snap-align",
    "scroll-snap-stop",
    "scroll-margin",
    "scroll-margin-inline",
    "scroll-margin-block",
    "scroll-margin-inline-start",
    "scroll-margin-inline-end",
    "scroll-margin-top",
    "scroll-margin-right",
    "scroll-margin-bottom",
    "scroll-margin-left",
    "scroll-padding",
    "scroll-padding-inline",
    "scroll-padding-block",
    "scroll-padding-inline-start",
    "scroll-padding-inline-end",
    "scroll-padding-top",
    "scroll-padding-right",
    "scroll-padding-bottom",
    "scroll-padding-left",
    "list-style-position",
    "list-style-type",
    "list-style-image",
    "appearance",
    "columns",
    "break-before",
    "break-inside",
    "break-after",
    "grid-auto-columns",
    "grid-auto-flow",
    "grid-auto-rows",
    "grid-template-columns",
    "grid-template-rows",
    "flex-direction",
    "flex-wrap",
    "place-content",
    "place-items",
    "align-content",
    "align-items",
    "justify-content",
    "justify-items",
    "gap",
    "column-gap",
    "row-gap",
    "--tw-space-x-reverse",
    "--tw-space-y-reverse",
    "divide-x-width",
    "divide-y-width",
    "--tw-divide-y-reverse",
    "divide-style",
    "divide-color",
    "place-self",
    "align-self",
    "justify-self",
    "overflow",
    "overflow-x",
    "overflow-y",
    "overscroll-behavior",
    "overscroll-behavior-x",
    "overscroll-behavior-y",
    "scroll-behavior",
    "border-radius",
    "border-start-radius",
    "border-end-radius",
    "border-top-radius",
    "border-right-radius",
    "border-bottom-radius",
    "border-left-radius",
    "border-start-start-radius",
    "border-start-end-radius",
    "border-end-end-radius",
    "border-end-start-radius",
    "border-top-left-radius",
    "border-top-right-radius",
    "border-bottom-right-radius",
    "border-bottom-left-radius",
    "border-width",
    "border-inline-width",
    "border-block-width",
    "border-inline-start-width",
    "border-inline-end-width",
    "border-top-width",
    "border-right-width",
    "border-bottom-width",
    "border-left-width",
    "border-style",
    "border-inline-style",
    "border-block-style",
    "border-inline-start-style",
    "border-inline-end-style",
    "border-top-style",
    "border-right-style",
    "border-bottom-style",
    "border-left-style",
    "border-color",
    "border-inline-color",
    "border-block-color",
    "border-inline-start-color",
    "border-inline-end-color",
    "border-top-color",
    "border-right-color",
    "border-bottom-color",
    "border-left-color",
    "background-color",
    "background-image",
    "--tw-gradient-position",
    "--tw-gradient-stops",
    "--tw-gradient-via-stops",
    "--tw-gradient-from",
    "--tw-gradient-from-position",
    "--tw-gradient-via",
    "--tw-gradient-via-position",
    "--tw-gradient-to",
    "--tw-gradient-to-position",
    "mask-image",
    "--tw-mask-top",
    "--tw-mask-top-from-color",
    "--tw-mask-top-from-position",
    "--tw-mask-top-to-color",
    "--tw-mask-top-to-position",
    "--tw-mask-right",
    "--tw-mask-right-from-color",
    "--tw-mask-right-from-position",
    "--tw-mask-right-to-color",
    "--tw-mask-right-to-position",
    "--tw-mask-bottom",
    "--tw-mask-bottom-from-color",
    "--tw-mask-bottom-from-position",
    "--tw-mask-bottom-to-color",
    "--tw-mask-bottom-to-position",
    "--tw-mask-left",
    "--tw-mask-left-from-color",
    "--tw-mask-left-from-position",
    "--tw-mask-left-to-color",
    "--tw-mask-left-to-position",
    "--tw-mask-linear",
    "--tw-mask-linear-position",
    "--tw-mask-linear-from-color",
    "--tw-mask-linear-from-position",
    "--tw-mask-linear-to-color",
    "--tw-mask-linear-to-position",
    "--tw-mask-radial",
    "--tw-mask-radial-shape",
    "--tw-mask-radial-size",
    "--tw-mask-radial-position",
    "--tw-mask-radial-from-color",
    "--tw-mask-radial-from-position",
    "--tw-mask-radial-to-color",
    "--tw-mask-radial-to-position",
    "--tw-mask-conic",
    "--tw-mask-conic-position",
    "--tw-mask-conic-from-color",
    "--tw-mask-conic-from-position",
    "--tw-mask-conic-to-color",
    "--tw-mask-conic-to-position",
    "box-decoration-break",
    "background-size",
    "background-attachment",
    "background-clip",
    "background-position",
    "background-repeat",
    "background-origin",
    "mask-composite",
    "mask-mode",
    "mask-type",
    "mask-size",
    "mask-clip",
    "mask-position",
    "mask-repeat",
    "mask-origin",
    "fill",
    "stroke",
    "stroke-width",
    "object-fit",
    "object-position",
    "padding",
    "padding-inline",
    "padding-block",
    "padding-inline-start",
    "padding-inline-end",
    "padding-top",
    "padding-right",
    "padding-bottom",
    "padding-left",
    "text-align",
    "text-indent",
    "vertical-align",
    "font-family",
    "font-size",
    "line-height",
    "font-weight",
    "letter-spacing",
    "text-wrap",
    "overflow-wrap",
    "word-break",
    "text-overflow",
    "hyphens",
    "white-space",
    "color",
    "text-transform",
    "font-style",
    "font-stretch",
    "font-variant-numeric",
    "text-decoration-line",
    "text-decoration-color",
    "text-decoration-style",
    "text-decoration-thickness",
    "text-underline-offset",
    "-webkit-font-smoothing",
    "placeholder-color",
    "caret-color",
    "accent-color",
    "color-scheme",
    "opacity",
    "background-blend-mode",
    "mix-blend-mode",
    "box-shadow",
    "--tw-shadow",
    "--tw-shadow-color",
    "--tw-ring-shadow",
    "--tw-ring-color",
    "--tw-inset-shadow",
    "--tw-inset-shadow-color",
    "--tw-inset-ring-shadow",
    "--tw-inset-ring-color",
    "--tw-ring-offset-width",
    "--tw-ring-offset-color",
    "outline",
    "outline-width",
    "outline-offset",
    "outline-color",
    "--tw-blur",
    "--tw-brightness",
    "--tw-contrast",
    "--tw-drop-shadow",
    "--tw-grayscale",
    "--tw-hue-rotate",
    "--tw-invert",
    "--tw-saturate",
    "--tw-sepia",
    "filter",
    "--tw-backdrop-blur",
    "--tw-backdrop-brightness",
    "--tw-backdrop-contrast",
    "--tw-backdrop-grayscale",
    "--tw-backdrop-hue-rotate",
    "--tw-backdrop-invert",
    "--tw-backdrop-opacity",
    "--tw-backdrop-saturate",
    "--tw-backdrop-sepia",
    "backdrop-filter",
    "transition-property",
    "transition-behavior",
    "transition-delay",
    "transition-duration",
    "transition-timing-function",
    "will-change",
    "contain",
    "content",
    "forced-color-adjust"
];
function ge(e, r) {
    let { onInvalidCandidate: i, respectImportant: t } = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    let n = new Map, s = [], a = new Map;
    for (let c of e){
        if (r.invalidCandidates.has(c)) {
            i === null || i === void 0 ? void 0 : i(c);
            continue;
        }
        let m = r.parseCandidate(c);
        if (m.length === 0) {
            i === null || i === void 0 ? void 0 : i(c);
            continue;
        }
        a.set(c, m);
    }
    let p = 0;
    (t !== null && t !== void 0 ? t : !0) && (p |= 1);
    let u = r.getVariantOrder();
    for (let [c, m] of a){
        let g = !1;
        for (let d of m){
            let w = r.compileAstNodes(d, p);
            if (w.length !== 0) {
                g = !0;
                for (let { node: v, propertySort: k1 } of w){
                    let x = 0n;
                    for (let S of d.variants)x |= 1n << BigInt(u.get(S));
                    n.set(v, {
                        properties: k1,
                        variants: x,
                        candidate: c
                    }), s.push(v);
                }
            }
        }
        g || (i === null || i === void 0 ? void 0 : i(c));
    }
    return s.sort((c, m)=>{
        let g = n.get(c), d = n.get(m);
        if (g.variants - d.variants !== 0n) return Number(g.variants - d.variants);
        let w = 0;
        for(; w < g.properties.order.length && w < d.properties.order.length && g.properties.order[w] === d.properties.order[w];)w += 1;
        var _g_properties_order_w, _d_properties_order_w;
        return ((_g_properties_order_w = g.properties.order[w]) !== null && _g_properties_order_w !== void 0 ? _g_properties_order_w : 1 / 0) - ((_d_properties_order_w = d.properties.order[w]) !== null && _d_properties_order_w !== void 0 ? _d_properties_order_w : 1 / 0) || d.properties.count - g.properties.count || st(g.candidate, d.candidate);
    }), {
        astNodes: s,
        nodeSorting: n
    };
}
function Lr(e, r, i) {
    let t = Rn(e, r);
    if (t.length === 0) return [];
    let n = r.important && !!(i & 1), s = [], a = ".".concat(de(e.raw));
    for (let p of t){
        let u = Pn(p);
        (e.important || n) && jr(p);
        let c = {
            kind: "rule",
            selector: a,
            nodes: p
        };
        for (let m of e.variants)if (Ee(c, m, r.variants) === null) return [];
        s.push({
            node: c,
            propertySort: u
        });
    }
    return s;
}
function Ee(e, r, i) {
    let t = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0;
    if (r.kind === "arbitrary") {
        if (r.relative && t === 0) return null;
        e.nodes = [
            Y(r.selector, e.nodes)
        ];
        return;
    }
    let { applyFn: n } = i.get(r.root);
    if (r.kind === "compound") {
        let a = F("@slot");
        if (Ee(a, r.variant, i, t + 1) === null || r.root === "not" && a.nodes.length > 1) return null;
        for (let u of a.nodes)if (u.kind !== "rule" && u.kind !== "at-rule" || n(u, r) === null) return null;
        L(a.nodes, (u)=>{
            if ((u.kind === "rule" || u.kind === "at-rule") && u.nodes.length <= 0) return u.nodes = e.nodes, 1;
        }), e.nodes = a.nodes;
        return;
    }
    if (n(e, r) === null) return null;
}
function Ir(e) {
    var _e_options;
    var _e_options_types;
    let r = (_e_options_types = (_e_options = e.options) === null || _e_options === void 0 ? void 0 : _e_options.types) !== null && _e_options_types !== void 0 ? _e_options_types : [];
    return r.length > 1 && r.includes("any");
}
function Rn(e, r) {
    if (e.kind === "arbitrary") {
        let a = e.value;
        return e.modifier && (a = X(a, e.modifier, r.theme)), a === null ? [] : [
            [
                o(e.property, a)
            ]
        ];
    }
    var _r_utilities_get;
    let i = (_r_utilities_get = r.utilities.get(e.root)) !== null && _r_utilities_get !== void 0 ? _r_utilities_get : [], t = [], n = i.filter((a)=>!Ir(a));
    for (let a of n){
        if (a.kind !== e.kind) continue;
        let p = a.compileFn(e);
        if (p !== void 0) {
            if (p === null) return t;
            t.push(p);
        }
    }
    if (t.length > 0) return t;
    let s = i.filter((a)=>Ir(a));
    for (let a of s){
        if (a.kind !== e.kind) continue;
        let p = a.compileFn(e);
        if (p !== void 0) {
            if (p === null) return t;
            t.push(p);
        }
    }
    return t;
}
function jr(e) {
    for (let r of e)r.kind !== "at-root" && (r.kind === "declaration" ? r.important = !0 : (r.kind === "rule" || r.kind === "at-rule") && jr(r.nodes));
}
function Pn(e) {
    let r = new Set, i = 0, t = e.slice(), n = !1;
    for(; t.length > 0;){
        let s = t.shift();
        if (s.kind === "declaration") {
            if (s.value === void 0 || (i++, n)) continue;
            if (s.property === "--tw-sort") {
                var _s_value;
                let p = It.indexOf((_s_value = s.value) !== null && _s_value !== void 0 ? _s_value : "");
                if (p !== -1) {
                    r.add(p), n = !0;
                    continue;
                }
            }
            let a = It.indexOf(s.property);
            a !== -1 && r.add(a);
        } else if (s.kind === "rule" || s.kind === "at-rule") for (let a of s.nodes)t.push(a);
    }
    return {
        order: Array.from(r).sort((s, a)=>s - a),
        count: i
    };
}
function Ie(e, r) {
    let i = 0, t = Y("&", e), n = new Set, s = new W(()=>new Set), a = new W(()=>new Set);
    L([
        t
    ], (g, param)=>{
        let { parent: d, path: w } = param;
        if (g.kind === "at-rule") {
            if (g.name === "@keyframes") return L(g.nodes, (v)=>{
                if (v.kind === "at-rule" && v.name === "@apply") throw new Error("You cannot use `@apply` inside `@keyframes`.");
            }), 1;
            if (g.name === "@utility") {
                let v = g.params.replace(/-\*$/, "");
                a.get(v).add(g), L(g.nodes, (k1)=>{
                    if (!(k1.kind !== "at-rule" || k1.name !== "@apply")) {
                        n.add(g);
                        for (let x of zr(k1, r))s.get(g).add(x);
                    }
                });
                return;
            }
            if (g.name === "@apply") {
                if (d === null) return;
                i |= 1, n.add(d);
                for (let v of zr(g, r))for (let k1 of w)k1 !== g && n.has(k1) && s.get(k1).add(v);
            }
        }
    });
    let p = new Set, u = [], c = new Set;
    function m(g) {
        let d = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
        if (!p.has(g)) {
            if (c.has(g)) {
                let w = d[(d.indexOf(g) + 1) % d.length];
                throw g.kind === "at-rule" && g.name === "@utility" && w.kind === "at-rule" && w.name === "@utility" && L(g.nodes, (v)=>{
                    if (v.kind !== "at-rule" || v.name !== "@apply") return;
                    let k1 = v.params.split(/\s+/g);
                    for (let x of k1)for (let S of r.parseCandidate(x))switch(S.kind){
                        case "arbitrary":
                            break;
                        case "static":
                        case "functional":
                            if (w.params.replace(/-\*$/, "") === S.root) throw new Error("You cannot `@apply` the `".concat(x, "` utility here because it creates a circular dependency."));
                            break;
                        default:
                    }
                }), new Error("Circular dependency detected:\n\n".concat(ne([
                    g
                ]), "\nRelies on:\n\n").concat(ne([
                    w
                ])));
            }
            c.add(g);
            for (let w of s.get(g))for (let v of a.get(w))d.push(g), m(v, d), d.pop();
            p.add(g), c.delete(g), u.push(g);
        }
    }
    for (let g of n)m(g);
    for (let g of u)"nodes" in g && L(g.nodes, (d, param)=>{
        let { replaceWith: w } = param;
        if (d.kind !== "at-rule" || d.name !== "@apply") return;
        let v = d.params.split(/(\s+)/g), k1 = {}, x = 0;
        for (let [S, C] of v.entries())S % 2 === 0 && (k1[C] = x), x += C.length;
        {
            let S = Object.keys(k1), C = ge(S, r, {
                respectImportant: !1,
                onInvalidCandidate: (D)=>{
                    if (r.theme.prefix && !D.startsWith(r.theme.prefix)) throw new Error("Cannot apply unprefixed utility class `".concat(D, "`. Did you mean `").concat(r.theme.prefix, ":").concat(D, "`?"));
                    if (r.invalidCandidates.has(D)) throw new Error("Cannot apply utility class `".concat(D, "` because it has been explicitly disabled: https://tailwindcss.com/docs/detecting-classes-in-source-files#explicitly-excluding-classes"));
                    let K = U(D, ":");
                    if (K.length > 1) {
                        let H = K.pop();
                        if (r.candidatesToCss([
                            H
                        ])[0]) {
                            let O = r.candidatesToCss(K.map((q)=>"".concat(q, ":[--tw-variant-check:1]"))), I = K.filter((q, M)=>O[M] === null);
                            if (I.length > 0) {
                                if (I.length === 1) throw new Error("Cannot apply utility class `".concat(D, "` because the ").concat(I.map((q)=>"`".concat(q, "`")), " variant does not exist."));
                                {
                                    let q = new Intl.ListFormat("en", {
                                        style: "long",
                                        type: "conjunction"
                                    });
                                    throw new Error("Cannot apply utility class `".concat(D, "` because the ").concat(q.format(I.map((M)=>"`".concat(M, "`"))), " variants do not exist."));
                                }
                            }
                        }
                    }
                    throw r.theme.size === 0 ? new Error("Cannot apply unknown utility class `".concat(D, "`. Are you using CSS modules or similar and missing `@reference`? https://tailwindcss.com/docs/functions-and-directives#reference-directive")) : new Error("Cannot apply unknown utility class `".concat(D, "`"));
                }
            }), b = d.src, _ = C.astNodes.map((D)=>{
                var _C_nodeSorting_get;
                let K = (_C_nodeSorting_get = C.nodeSorting.get(D)) === null || _C_nodeSorting_get === void 0 ? void 0 : _C_nodeSorting_get.candidate, H = K ? k1[K] : void 0;
                if (D = structuredClone(D), !b || !K || H === void 0) return L([
                    D
                ], (I)=>{
                    I.src = b;
                }), D;
                let O = [
                    b[0],
                    b[1],
                    b[2]
                ];
                return O[1] += 7 + H, O[2] = O[1] + K.length, L([
                    D
                ], (I)=>{
                    I.src = O;
                }), D;
            }), R = [];
            for (let D of _)if (D.kind === "rule") for (let K of D.nodes)R.push(K);
            else R.push(D);
            w(R);
        }
    });
    return i;
}
function* zr(e, r) {
    for (let i of e.params.split(/\s+/g))for (let t of r.parseCandidate(i))switch(t.kind){
        case "arbitrary":
            break;
        case "static":
        case "functional":
            yield t.root;
            break;
        default:
    }
}
async function jt(e, r, i) {
    let t = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0, n = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : !1;
    let s = 0, a = [];
    return L(e, (p, param)=>{
        let { replaceWith: u } = param;
        if (p.kind === "at-rule" && (p.name === "@import" || p.name === "@reference")) {
            let c = On(G(p.params));
            if (c === null) return;
            p.name === "@reference" && (c.media = "reference"), s |= 2;
            let { uri: m, layer: g, media: d, supports: w } = c;
            if (m.startsWith("data:") || m.startsWith("http://") || m.startsWith("https://")) return;
            let v = se({}, []);
            return a.push((async ()=>{
                if (t > 100) throw new Error("Exceeded maximum recursion depth while resolving `".concat(m, "` in `").concat(r, "`)"));
                let k1 = await i(m, r), x = ve(k1.content, {
                    from: n ? k1.path : void 0
                });
                await jt(x, k1.base, i, t + 1, n), v.nodes = _n(p, [
                    se({
                        base: k1.base
                    }, x)
                ], g, d, w);
            })()), u(v), 1;
        }
    }), a.length > 0 && await Promise.all(a), s;
}
function On(e) {
    let r, i = null, t = null, n = null;
    for(let s = 0; s < e.length; s++){
        let a = e[s];
        if (a.kind !== "separator") {
            if (a.kind === "word" && !r) {
                if (!a.value || a.value[0] !== '"' && a.value[0] !== "'") return null;
                r = a.value.slice(1, -1);
                continue;
            }
            if (a.kind === "function" && a.value.toLowerCase() === "url" || !r) return null;
            if ((a.kind === "word" || a.kind === "function") && a.value.toLowerCase() === "layer") {
                if (i) return null;
                if (n) throw new Error("`layer(\u2026)` in an `@import` should come before any other functions or conditions");
                "nodes" in a ? i = J(a.nodes) : i = "";
                continue;
            }
            if (a.kind === "function" && a.value.toLowerCase() === "supports") {
                if (n) return null;
                n = J(a.nodes);
                continue;
            }
            t = J(e.slice(s));
            break;
        }
    }
    return r ? {
        uri: r,
        layer: i,
        media: t,
        supports: n
    } : null;
}
function _n(e, r, i, t, n) {
    let s = r;
    if (i !== null) {
        let a = F("@layer", i, s);
        a.src = e.src, s = [
            a
        ];
    }
    if (t !== null) {
        let a = F("@media", t, s);
        a.src = e.src, s = [
            a
        ];
    }
    if (n !== null) {
        let a = F("@supports", n[0] === "(" ? n : "(".concat(n, ")"), s);
        a.src = e.src, s = [
            a
        ];
    }
    return s;
}
function Te(e) {
    let r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
    var _e__r;
    return Array.isArray(e) && e.length === 2 && typeof e[1] == "object" && typeof e[1] !== null ? r ? (_e__r = e[1][r]) !== null && _e__r !== void 0 ? _e__r : null : e[0] : Array.isArray(e) && r === null ? e.join(", ") : typeof e == "string" && r === null ? e : null;
}
function Fr(e, param, i) {
    let { theme: r } = param;
    for (let t of i){
        let n = ct([
            t
        ]);
        n && e.theme.clearNamespace("--".concat(n), 4);
    }
    for (let [t, n] of Dn(r)){
        if (typeof n != "string" && typeof n != "number") continue;
        if (typeof n == "string" && (n = n.replace(/<alpha-value>/g, "1")), t[0] === "opacity" && (typeof n == "number" || typeof n == "string")) {
            let a = typeof n == "string" ? parseFloat(n) : n;
            a >= 0 && a <= 1 && (n = a * 100 + "%");
        }
        let s = ct(t);
        s && e.theme.add("--".concat(s), "" + n, 7);
    }
    if (Object.hasOwn(r, "fontFamily")) {
        let t = 5;
        {
            let n = Te(r.fontFamily.sans);
            var _Te, _Te1;
            n && e.theme.hasDefault("--font-sans") && (e.theme.add("--default-font-family", n, t), e.theme.add("--default-font-feature-settings", (_Te = Te(r.fontFamily.sans, "fontFeatureSettings")) !== null && _Te !== void 0 ? _Te : "normal", t), e.theme.add("--default-font-variation-settings", (_Te1 = Te(r.fontFamily.sans, "fontVariationSettings")) !== null && _Te1 !== void 0 ? _Te1 : "normal", t));
        }
        {
            let n = Te(r.fontFamily.mono);
            var _Te2, _Te3;
            n && e.theme.hasDefault("--font-mono") && (e.theme.add("--default-mono-font-family", n, t), e.theme.add("--default-mono-font-feature-settings", (_Te2 = Te(r.fontFamily.mono, "fontFeatureSettings")) !== null && _Te2 !== void 0 ? _Te2 : "normal", t), e.theme.add("--default-mono-font-variation-settings", (_Te3 = Te(r.fontFamily.mono, "fontVariationSettings")) !== null && _Te3 !== void 0 ? _Te3 : "normal", t));
        }
    }
    return r;
}
function Dn(e) {
    let r = [];
    return Mr(e, [], (i, t)=>{
        if (Un(i)) return r.push([
            t,
            i
        ]), 1;
        if (Ln(i)) {
            r.push([
                t,
                i[0]
            ]);
            for (let n of Reflect.ownKeys(i[1]))r.push([
                [
                    ...t,
                    "-".concat(n)
                ],
                i[1][n]
            ]);
            return 1;
        }
        if (Array.isArray(i) && i.every((n)=>typeof n == "string")) return t[0] === "fontSize" ? (r.push([
            t,
            i[0]
        ]), i.length >= 2 && r.push([
            [
                ...t,
                "-line-height"
            ],
            i[1]
        ])) : r.push([
            t,
            i.join(", ")
        ]), 1;
    }), r;
}
var Kn = /^[a-zA-Z0-9-_%/\.]+$/;
function ct(e) {
    if (e[0] === "container") return null;
    e = structuredClone(e), e[0] === "animation" && (e[0] = "animate"), e[0] === "aspectRatio" && (e[0] = "aspect"), e[0] === "borderRadius" && (e[0] = "radius"), e[0] === "boxShadow" && (e[0] = "shadow"), e[0] === "colors" && (e[0] = "color"), e[0] === "containers" && (e[0] = "container"), e[0] === "fontFamily" && (e[0] = "font"), e[0] === "fontSize" && (e[0] = "text"), e[0] === "letterSpacing" && (e[0] = "tracking"), e[0] === "lineHeight" && (e[0] = "leading"), e[0] === "maxWidth" && (e[0] = "container"), e[0] === "screens" && (e[0] = "breakpoint"), e[0] === "transitionTimingFunction" && (e[0] = "ease");
    for (let r of e)if (!Kn.test(r)) return null;
    return e.map((r, i, t)=>r === "1" && i !== t.length - 1 ? "" : r).map((r)=>r.replaceAll(".", "_").replace(/([a-z])([A-Z])/g, (i, t, n)=>"".concat(t, "-").concat(n.toLowerCase()))).filter((r, i)=>r !== "DEFAULT" || i !== e.length - 1).join("-");
}
function Un(e) {
    return typeof e == "number" || typeof e == "string";
}
function Ln(e) {
    if (!Array.isArray(e) || e.length !== 2 || typeof e[0] != "string" && typeof e[0] != "number" || e[1] === void 0 || e[1] === null || typeof e[1] != "object") return !1;
    for (let r of Reflect.ownKeys(e[1]))if (typeof r != "string" || typeof e[1][r] != "string" && typeof e[1][r] != "number") return !1;
    return !0;
}
function Mr(e) {
    let r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [], i = arguments.length > 2 ? arguments[2] : void 0;
    for (let t of Reflect.ownKeys(e)){
        let n = e[t];
        if (n == null) continue;
        var _i;
        let s = [
            ...r,
            t
        ], a = (_i = i(n, s)) !== null && _i !== void 0 ? _i : 0;
        if (a !== 1) {
            if (a === 2) return 2;
            if (!(!Array.isArray(n) && typeof n != "object") && Mr(n, s, i) === 2) return 2;
        }
    }
}
function ft(e) {
    let r = [];
    for (let i of U(e, ".")){
        if (!i.includes("[")) {
            r.push(i);
            continue;
        }
        let t = 0;
        for(;;){
            let n = i.indexOf("[", t), s = i.indexOf("]", n);
            if (n === -1 || s === -1) break;
            n > t && r.push(i.slice(t, n)), r.push(i.slice(n + 1, s)), t = s + 1;
        }
        t <= i.length - 1 && r.push(i.slice(t));
    }
    return r;
}
function Re(e) {
    if (Object.prototype.toString.call(e) !== "[object Object]") return !1;
    let r = Object.getPrototypeOf(e);
    return r === null || Object.getPrototypeOf(r) === null;
}
function je(e, r, i) {
    let t = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : [];
    for (let n of r)if (n != null) for (let s of Reflect.ownKeys(n)){
        t.push(s);
        let a = i(e[s], n[s], t);
        a !== void 0 ? e[s] = a : !Re(e[s]) || !Re(n[s]) ? e[s] = n[s] : e[s] = je({}, [
            e[s],
            n[s]
        ], i, t), t.pop();
    }
    return e;
}
function pt(e, r, i) {
    return function(n, s) {
        let a = n.lastIndexOf("/"), p = null;
        a !== -1 && (p = n.slice(a + 1).trim(), n = n.slice(0, a).trim());
        let u = (()=>{
            var _r, _Wr;
            let c = ft(n), [m, g] = In(e.theme, c), d = i((_Wr = Wr((_r = r()) !== null && _r !== void 0 ? _r : {}, c)) !== null && _Wr !== void 0 ? _Wr : null);
            if (typeof d == "string" && (d = d.replace("<alpha-value>", "1")), typeof m != "object") return typeof g != "object" && g & 4 ? d !== null && d !== void 0 ? d : m : m;
            if (d !== null && typeof d == "object" && !Array.isArray(d)) {
                var _d___CSS_VALUES__;
                let w = je({}, [
                    d
                ], (v, k1)=>k1);
                if (m === null && Object.hasOwn(d, "__CSS_VALUES__")) {
                    let v = {};
                    for(let k1 in d.__CSS_VALUES__)v[k1] = d[k1], delete w[k1];
                    m = v;
                }
                for(let v in m)v !== "__CSS_VALUES__" && ((d === null || d === void 0 ? void 0 : (_d___CSS_VALUES__ = d.__CSS_VALUES__) === null || _d___CSS_VALUES__ === void 0 ? void 0 : _d___CSS_VALUES__[v]) & 4 && Wr(w, v.split("-")) !== void 0 || (w[we(v)] = m[v]));
                return w;
            }
            if (Array.isArray(m) && Array.isArray(g) && Array.isArray(d)) {
                let w = m[0], v = m[1];
                var _d_;
                g[0] & 4 && (w = (_d_ = d[0]) !== null && _d_ !== void 0 ? _d_ : w);
                var _d__k;
                for (let k1 of Object.keys(v))g[1][k1] & 4 && (v[k1] = (_d__k = d[1][k1]) !== null && _d__k !== void 0 ? _d__k : v[k1]);
                return [
                    w,
                    v
                ];
            }
            return m !== null && m !== void 0 ? m : d;
        })();
        return p && typeof u == "string" && (u = Q(u, p)), u !== null && u !== void 0 ? u : s;
    };
}
function In(e, r) {
    if (r.length === 1 && r[0].startsWith("--")) return [
        e.get([
            r[0]
        ]),
        e.getOptions(r[0])
    ];
    let i = ct(r), t = new Map, n = new W(()=>new Map), s = e.namespace("--".concat(i));
    if (s.size === 0) return [
        null,
        0
    ];
    let a = new Map;
    for (let [m, g] of s){
        if (!m || !m.includes("--")) {
            t.set(m, g), a.set(m, e.getOptions(m ? "--".concat(i, "-").concat(m) : "--".concat(i)));
            continue;
        }
        let d = m.indexOf("--"), w = m.slice(0, d), v = m.slice(d + 2);
        v = v.replace(/-([a-z])/g, (k1, x)=>x.toUpperCase()), n.get(w === "" ? null : w).set(v, [
            g,
            e.getOptions("--".concat(i).concat(m))
        ]);
    }
    let p = e.getOptions("--".concat(i));
    for (let [m, g] of n){
        let d = t.get(m);
        if (typeof d != "string") continue;
        let w = {}, v = {};
        for (let [k1, [x, S]] of g)w[k1] = x, v[k1] = S;
        t.set(m, [
            d,
            w
        ]), a.set(m, [
            p,
            v
        ]);
    }
    let u = {}, c = {};
    for (let [m, g] of t)Br(u, [
        m !== null && m !== void 0 ? m : "DEFAULT"
    ], g);
    for (let [m, g] of a)Br(c, [
        m !== null && m !== void 0 ? m : "DEFAULT"
    ], g);
    var _u_DEFAULT, _c_DEFAULT, _c_DEFAULT1;
    return r[r.length - 1] === "DEFAULT" ? [
        (_u_DEFAULT = u === null || u === void 0 ? void 0 : u.DEFAULT) !== null && _u_DEFAULT !== void 0 ? _u_DEFAULT : null,
        (_c_DEFAULT = c.DEFAULT) !== null && _c_DEFAULT !== void 0 ? _c_DEFAULT : 0
    ] : "DEFAULT" in u && Object.keys(u).length === 1 ? [
        u.DEFAULT,
        (_c_DEFAULT1 = c.DEFAULT) !== null && _c_DEFAULT1 !== void 0 ? _c_DEFAULT1 : 0
    ] : (u.__CSS_VALUES__ = c, [
        u,
        c
    ]);
}
function Wr(e, r) {
    for(let i = 0; i < r.length; ++i){
        let t = r[i];
        if ((e === null || e === void 0 ? void 0 : e[t]) === void 0) {
            if (r[i + 1] === void 0) return;
            r[i + 1] = "".concat(t, "-").concat(r[i + 1]);
            continue;
        }
        e = e[t];
    }
    return e;
}
function Br(e, r, i) {
    for (let t of r.slice(0, -1))e[t] === void 0 && (e[t] = {}), e = e[t];
    e[r[r.length - 1]] = i;
}
function jn(e) {
    return {
        kind: "combinator",
        value: e
    };
}
function zn(e, r) {
    return {
        kind: "function",
        value: e,
        nodes: r
    };
}
function ze(e) {
    return {
        kind: "selector",
        value: e
    };
}
function Fn(e) {
    return {
        kind: "separator",
        value: e
    };
}
function Mn(e) {
    return {
        kind: "value",
        value: e
    };
}
function Fe(e, r) {
    let i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
    for(let t = 0; t < e.length; t++){
        var _r;
        let n = e[t], s = !1, a = 0, p = (_r = r(n, {
            parent: i,
            replaceWith (u) {
                s || (s = !0, Array.isArray(u) ? u.length === 0 ? (e.splice(t, 1), a = 0) : u.length === 1 ? (e[t] = u[0], a = 1) : (e.splice(t, 1, ...u), a = u.length) : (e[t] = u, a = 1));
            }
        })) !== null && _r !== void 0 ? _r : 0;
        if (s) {
            p === 0 ? t-- : t += a - 1;
            continue;
        }
        if (p === 2) return 2;
        if (p !== 1 && n.kind === "function" && Fe(n.nodes, r, n) === 2) return 2;
    }
}
function Me(e) {
    let r = "";
    for (let i of e)switch(i.kind){
        case "combinator":
        case "selector":
        case "separator":
        case "value":
            {
                r += i.value;
                break;
            }
        case "function":
            r += i.value + "(" + Me(i.nodes) + ")";
    }
    return r;
}
var qr = 92, Wn = 93, Hr = 41, Bn = 58, Gr = 44, qn = 34, Hn = 46, Yr = 62, Zr = 10, Gn = 35, Jr = 91, Qr = 40, Xr = 43, Yn = 39, ei = 32, ti = 9, ri = 126;
function dt(e) {
    e = e.replaceAll("\r\n", "\n");
    let r = [], i = [], t = null, n = "", s;
    for(let a = 0; a < e.length; a++){
        let p = e.charCodeAt(a);
        switch(p){
            case Gr:
            case Yr:
            case Zr:
            case ei:
            case Xr:
            case ti:
            case ri:
                {
                    if (n.length > 0) {
                        let d = ze(n);
                        t ? t.nodes.push(d) : r.push(d), n = "";
                    }
                    let u = a, c = a + 1;
                    for(; c < e.length && (s = e.charCodeAt(c), !(s !== Gr && s !== Yr && s !== Zr && s !== ei && s !== Xr && s !== ti && s !== ri)); c++);
                    a = c - 1;
                    let m = e.slice(u, c), g = m.trim() === "," ? Fn(m) : jn(m);
                    t ? t.nodes.push(g) : r.push(g);
                    break;
                }
            case Qr:
                {
                    let u = zn(n, []);
                    if (n = "", u.value !== ":not" && u.value !== ":where" && u.value !== ":has" && u.value !== ":is") {
                        let c = a + 1, m = 0;
                        for(let d = a + 1; d < e.length; d++){
                            if (s = e.charCodeAt(d), s === Qr) {
                                m++;
                                continue;
                            }
                            if (s === Hr) {
                                if (m === 0) {
                                    a = d;
                                    break;
                                }
                                m--;
                            }
                        }
                        let g = a;
                        u.nodes.push(Mn(e.slice(c, g))), n = "", a = g, t ? t.nodes.push(u) : r.push(u);
                        break;
                    }
                    t ? t.nodes.push(u) : r.push(u), i.push(u), t = u;
                    break;
                }
            case Hr:
                {
                    let u = i.pop();
                    if (n.length > 0) {
                        let c = ze(n);
                        u.nodes.push(c), n = "";
                    }
                    i.length > 0 ? t = i[i.length - 1] : t = null;
                    break;
                }
            case Hn:
            case Bn:
            case Gn:
                {
                    if (n.length > 0) {
                        let u = ze(n);
                        t ? t.nodes.push(u) : r.push(u);
                    }
                    n = String.fromCharCode(p);
                    break;
                }
            case Jr:
                {
                    if (n.length > 0) {
                        let m = ze(n);
                        t ? t.nodes.push(m) : r.push(m);
                    }
                    n = "";
                    let u = a, c = 0;
                    for(let m = a + 1; m < e.length; m++){
                        if (s = e.charCodeAt(m), s === Jr) {
                            c++;
                            continue;
                        }
                        if (s === Wn) {
                            if (c === 0) {
                                a = m;
                                break;
                            }
                            c--;
                        }
                    }
                    n += e.slice(u, a + 1);
                    break;
                }
            case Yn:
            case qn:
                {
                    let u = a;
                    for(let c = a + 1; c < e.length; c++)if (s = e.charCodeAt(c), s === qr) c += 1;
                    else if (s === p) {
                        a = c;
                        break;
                    }
                    n += e.slice(u, a + 1);
                    break;
                }
            case qr:
                {
                    let u = e.charCodeAt(a + 1);
                    n += String.fromCharCode(p) + String.fromCharCode(u), a += 1;
                    break;
                }
            default:
                n += String.fromCharCode(p);
        }
    }
    return n.length > 0 && r.push(ze(n)), r;
}
var ii = /^[a-z@][a-zA-Z0-9/%._-]*$/;
function zt(param) {
    let { designSystem: e, ast: r, resolvedConfig: i, featuresRef: t, referenceMode: n, src: s } = param;
    let a = {
        addBase (p) {
            if (n) return;
            let u = ue(p);
            t.current |= Se(u, e);
            let c = F("@layer", "base", u);
            L([
                c
            ], (m)=>{
                m.src = s;
            }), r.push(c);
        },
        addVariant (p, u) {
            if (!ut.test(p)) throw new Error("`addVariant('".concat(p, "')` defines an invalid variant name. Variants should only contain alphanumeric, dashes, or underscore characters and start with a lowercase letter or number."));
            if (typeof u == "string") {
                if (u.includes(":merge(")) return;
            } else if (Array.isArray(u)) {
                if (u.some((m)=>m.includes(":merge("))) return;
            } else if (typeof u == "object") {
                let m = function(g, d) {
                    return Object.entries(g).some((param)=>{
                        let [w, v] = param;
                        return w.includes(d) || typeof v == "object" && m(v, d);
                    });
                };
                var c = m;
                if (m(u, ":merge(")) return;
            }
            typeof u == "string" || Array.isArray(u) ? e.variants.static(p, (m)=>{
                m.nodes = ni(u, m.nodes);
            }, {
                compounds: Ce(typeof u == "string" ? [
                    u
                ] : u)
            }) : typeof u == "object" && e.variants.fromAst(p, ue(u), e);
        },
        matchVariant (p, u, c) {
            function m(d, w, v) {
                var _w_value;
                let k1 = u(d, {
                    modifier: (_w_value = w === null || w === void 0 ? void 0 : w.value) !== null && _w_value !== void 0 ? _w_value : null
                });
                return ni(k1, v);
            }
            try {
                let d = u("a", {
                    modifier: null
                });
                if (typeof d == "string" && d.includes(":merge(")) return;
                if (Array.isArray(d) && d.some((w)=>w.includes(":merge("))) return;
            } catch (e) {}
            var _c_values;
            let g = Object.keys((_c_values = c === null || c === void 0 ? void 0 : c.values) !== null && _c_values !== void 0 ? _c_values : {});
            e.variants.group(()=>{
                e.variants.functional(p, (d, w)=>{
                    if (!w.value) {
                        if ((c === null || c === void 0 ? void 0 : c.values) && "DEFAULT" in c.values) {
                            d.nodes = m(c.values.DEFAULT, w.modifier, d.nodes);
                            return;
                        }
                        return null;
                    }
                    if (w.value.kind === "arbitrary") d.nodes = m(w.value.value, w.modifier, d.nodes);
                    else if (w.value.kind === "named" && (c === null || c === void 0 ? void 0 : c.values)) {
                        let v = c.values[w.value.value];
                        if (typeof v != "string") return null;
                        d.nodes = m(v, w.modifier, d.nodes);
                    } else return null;
                });
            }, (d, w)=>{
                var _c_values, _c_values1, _d_modifier, _w_modifier;
                if (d.kind !== "functional" || w.kind !== "functional") return 0;
                var _c_values_v, _c_values_k;
                let v = d.value ? d.value.value : "DEFAULT", k1 = w.value ? w.value.value : "DEFAULT", x = (_c_values_v = c === null || c === void 0 ? void 0 : (_c_values = c.values) === null || _c_values === void 0 ? void 0 : _c_values[v]) !== null && _c_values_v !== void 0 ? _c_values_v : v, S = (_c_values_k = c === null || c === void 0 ? void 0 : (_c_values1 = c.values) === null || _c_values1 === void 0 ? void 0 : _c_values1[k1]) !== null && _c_values_k !== void 0 ? _c_values_k : k1;
                var _d_modifier_value, _w_modifier_value;
                if (c && typeof c.sort == "function") return c.sort({
                    value: x,
                    modifier: (_d_modifier_value = (_d_modifier = d.modifier) === null || _d_modifier === void 0 ? void 0 : _d_modifier.value) !== null && _d_modifier_value !== void 0 ? _d_modifier_value : null
                }, {
                    value: S,
                    modifier: (_w_modifier_value = (_w_modifier = w.modifier) === null || _w_modifier === void 0 ? void 0 : _w_modifier.value) !== null && _w_modifier_value !== void 0 ? _w_modifier_value : null
                });
                let C = g.indexOf(v), b = g.indexOf(k1);
                return C = C === -1 ? g.length : C, b = b === -1 ? g.length : b, C !== b ? C - b : x < S ? -1 : 1;
            }), e.variants.suggest(p, ()=>{
                var _c_values;
                return Object.keys((_c_values = c === null || c === void 0 ? void 0 : c.values) !== null && _c_values !== void 0 ? _c_values : {}).filter((d)=>d !== "DEFAULT");
            });
        },
        addUtilities (p) {
            p = Array.isArray(p) ? p : [
                p
            ];
            let u = p.flatMap((m)=>Object.entries(m));
            u = u.flatMap((param)=>{
                let [m, g] = param;
                return U(m, ",").map((d)=>[
                        d.trim(),
                        g
                    ]);
            });
            let c = new W(()=>[]);
            for (let [m, g] of u){
                if (m.startsWith("@keyframes ")) {
                    if (!n) {
                        let v = Y(m, ue(g));
                        L([
                            v
                        ], (k1)=>{
                            k1.src = s;
                        }), r.push(v);
                    }
                    continue;
                }
                let d = dt(m), w = !1;
                if (Fe(d, (v)=>{
                    if (v.kind === "selector" && v.value[0] === "." && ii.test(v.value.slice(1))) {
                        let k1 = v.value;
                        v.value = "&";
                        let x = Me(d), S = k1.slice(1), C = x === "&" ? ue(g) : [
                            Y(x, ue(g))
                        ];
                        c.get(S).push(...C), w = !0, v.value = k1;
                        return;
                    }
                    if (v.kind === "function" && v.value === ":not") return 1;
                }), !w) throw new Error("`addUtilities({ '".concat(m, "' : … })` defines an invalid utility selector. Utilities must be a single class name and start with a lowercase letter, eg. `.scrollbar-none`."));
            }
            for (let [m, g] of c)e.theme.prefix && L(g, (d)=>{
                if (d.kind === "rule") {
                    let w = dt(d.selector);
                    Fe(w, (v)=>{
                        v.kind === "selector" && v.value[0] === "." && (v.value = ".".concat(e.theme.prefix, "\\:").concat(v.value.slice(1)));
                    }), d.selector = Me(w);
                }
            }), e.utilities.static(m, (d)=>{
                let w = structuredClone(g);
                return oi(w, m, d.raw), t.current |= Ie(w, e), w;
            });
        },
        matchUtilities (p, u) {
            let c = (u === null || u === void 0 ? void 0 : u.type) ? Array.isArray(u === null || u === void 0 ? void 0 : u.type) ? u.type : [
                u.type
            ] : [
                "any"
            ];
            for (let [g, d] of Object.entries(p)){
                let w = function(param) {
                    let { negative: v } = param;
                    return (k1)=>{
                        var _k_value, _k_value1;
                        if (((_k_value = k1.value) === null || _k_value === void 0 ? void 0 : _k_value.kind) === "arbitrary" && c.length > 0 && !c.includes("any") && (k1.value.dataType && !c.includes(k1.value.dataType) || !k1.value.dataType && !Z(k1.value.value, c))) return;
                        let x = c.includes("color"), S = null, C = !1;
                        {
                            var _u_values;
                            let R = (_u_values = u === null || u === void 0 ? void 0 : u.values) !== null && _u_values !== void 0 ? _u_values : {};
                            var _R___BARE_VALUE__, _ref, _R_DEFAULT;
                            x && (R = Object.assign({
                                inherit: "inherit",
                                transparent: "transparent",
                                current: "currentcolor"
                            }, R)), k1.value ? k1.value.kind === "arbitrary" ? S = k1.value.value : k1.value.fraction && R[k1.value.fraction] ? (S = R[k1.value.fraction], C = !0) : R[k1.value.value] ? S = R[k1.value.value] : R.__BARE_VALUE__ && (S = (_R___BARE_VALUE__ = R.__BARE_VALUE__(k1.value)) !== null && _R___BARE_VALUE__ !== void 0 ? _R___BARE_VALUE__ : null, C = (_ref = k1.value.fraction !== null && (S === null || S === void 0 ? void 0 : S.includes("/"))) !== null && _ref !== void 0 ? _ref : !1) : S = (_R_DEFAULT = R.DEFAULT) !== null && _R_DEFAULT !== void 0 ? _R_DEFAULT : null;
                        }
                        if (S === null) return;
                        let b;
                        {
                            var _u_modifiers;
                            let R = (_u_modifiers = u === null || u === void 0 ? void 0 : u.modifiers) !== null && _u_modifiers !== void 0 ? _u_modifiers : null;
                            k1.modifier ? R === "any" || k1.modifier.kind === "arbitrary" ? b = k1.modifier.value : (R === null || R === void 0 ? void 0 : R[k1.modifier.value]) ? b = R[k1.modifier.value] : x && !Number.isNaN(Number(k1.modifier.value)) ? b = "".concat(k1.modifier.value, "%") : b = null : b = null;
                        }
                        if (k1.modifier && b === null && !C) return ((_k_value1 = k1.value) === null || _k_value1 === void 0 ? void 0 : _k_value1.kind) === "arbitrary" ? null : void 0;
                        x && b !== null && (S = Q(S, b)), v && (S = "calc(".concat(S, " * -1)"));
                        let _ = ue(d(S, {
                            modifier: b
                        }));
                        return oi(_, g, k1.raw), t.current |= Ie(_, e), _;
                    };
                };
                var m = w;
                if (!ii.test(g)) throw new Error("`matchUtilities({ '".concat(g, "' : … })` defines an invalid utility name. Utilities should be alphanumeric and start with a lowercase letter, eg. `scrollbar`."));
                (u === null || u === void 0 ? void 0 : u.supportsNegativeValues) && e.utilities.functional("-".concat(g), w({
                    negative: !0
                }), {
                    types: c
                }), e.utilities.functional(g, w({
                    negative: !1
                }), {
                    types: c
                }), e.utilities.suggest(g, ()=>{
                    var _u_values;
                    let v = (_u_values = u === null || u === void 0 ? void 0 : u.values) !== null && _u_values !== void 0 ? _u_values : {}, k1 = new Set(Object.keys(v));
                    k1.delete("__BARE_VALUE__"), k1.delete("__CSS_VALUES__"), k1.has("DEFAULT") && (k1.delete("DEFAULT"), k1.add(null));
                    var _u_modifiers;
                    let x = (_u_modifiers = u === null || u === void 0 ? void 0 : u.modifiers) !== null && _u_modifiers !== void 0 ? _u_modifiers : {}, S = x === "any" ? [] : Object.keys(x);
                    var _u_supportsNegativeValues;
                    return [
                        {
                            supportsNegative: (_u_supportsNegativeValues = u === null || u === void 0 ? void 0 : u.supportsNegativeValues) !== null && _u_supportsNegativeValues !== void 0 ? _u_supportsNegativeValues : !1,
                            values: Array.from(k1),
                            modifiers: S
                        }
                    ];
                });
            }
        },
        addComponents (p, u) {
            this.addUtilities(p, u);
        },
        matchComponents (p, u) {
            this.matchUtilities(p, u);
        },
        theme: pt(e, ()=>{
            var _i_theme;
            return (_i_theme = i.theme) !== null && _i_theme !== void 0 ? _i_theme : {};
        }, (p)=>p),
        prefix (p) {
            return p;
        },
        config (p, u) {
            let c = i;
            if (!p) return c;
            let m = ft(p);
            for(let g = 0; g < m.length; ++g){
                let d = m[g];
                if (c[d] === void 0) return u;
                c = c[d];
            }
            return c !== null && c !== void 0 ? c : u;
        }
    };
    return a.addComponents = a.addComponents.bind(a), a.matchComponents = a.matchComponents.bind(a), a;
}
function ue(e) {
    let r = [];
    e = Array.isArray(e) ? e : [
        e
    ];
    let i = e.flatMap((t)=>Object.entries(t));
    for (let [t, n] of i)if (n != null && n !== !1) if (typeof n != "object") {
        if (!t.startsWith("--")) {
            if (n === "@slot") {
                r.push(Y(t, [
                    F("@slot")
                ]));
                continue;
            }
            t = t.replace(/([A-Z])/g, "-$1").toLowerCase();
        }
        r.push(o(t, String(n)));
    } else if (Array.isArray(n)) for (let s of n)typeof s == "string" ? r.push(o(t, s)) : r.push(Y(t, ue(s)));
    else r.push(Y(t, ue(n)));
    return r;
}
function ni(e, r) {
    return (typeof e == "string" ? [
        e
    ] : e).flatMap((t)=>{
        if (t.trim().endsWith("}")) {
            let n = t.replace("}", "{@slot}}"), s = ve(n);
            return Ut(s, r), s;
        } else return Y(t, r);
    });
}
function oi(e, r, i) {
    L(e, (t)=>{
        if (t.kind === "rule") {
            let n = dt(t.selector);
            Fe(n, (s)=>{
                s.kind === "selector" && s.value === ".".concat(r) && (s.value = ".".concat(de(i)));
            }), t.selector = Me(n);
        }
    });
}
function li(e, r, i) {
    for (let t of Jn(r))e.theme.addKeyframes(t);
}
function Jn(e) {
    let r = [];
    if ("keyframes" in e.theme) for (let [i, t] of Object.entries(e.theme.keyframes))r.push(F("@keyframes", i, ue(t)));
    return r;
}
var mt = {
    inherit: "inherit",
    current: "currentcolor",
    transparent: "transparent",
    black: "#000",
    white: "#fff",
    slate: {
        50: "oklch(98.4% 0.003 247.858)",
        100: "oklch(96.8% 0.007 247.896)",
        200: "oklch(92.9% 0.013 255.508)",
        300: "oklch(86.9% 0.022 252.894)",
        400: "oklch(70.4% 0.04 256.788)",
        500: "oklch(55.4% 0.046 257.417)",
        600: "oklch(44.6% 0.043 257.281)",
        700: "oklch(37.2% 0.044 257.287)",
        800: "oklch(27.9% 0.041 260.031)",
        900: "oklch(20.8% 0.042 265.755)",
        950: "oklch(12.9% 0.042 264.695)"
    },
    gray: {
        50: "oklch(98.5% 0.002 247.839)",
        100: "oklch(96.7% 0.003 264.542)",
        200: "oklch(92.8% 0.006 264.531)",
        300: "oklch(87.2% 0.01 258.338)",
        400: "oklch(70.7% 0.022 261.325)",
        500: "oklch(55.1% 0.027 264.364)",
        600: "oklch(44.6% 0.03 256.802)",
        700: "oklch(37.3% 0.034 259.733)",
        800: "oklch(27.8% 0.033 256.848)",
        900: "oklch(21% 0.034 264.665)",
        950: "oklch(13% 0.028 261.692)"
    },
    zinc: {
        50: "oklch(98.5% 0 0)",
        100: "oklch(96.7% 0.001 286.375)",
        200: "oklch(92% 0.004 286.32)",
        300: "oklch(87.1% 0.006 286.286)",
        400: "oklch(70.5% 0.015 286.067)",
        500: "oklch(55.2% 0.016 285.938)",
        600: "oklch(44.2% 0.017 285.786)",
        700: "oklch(37% 0.013 285.805)",
        800: "oklch(27.4% 0.006 286.033)",
        900: "oklch(21% 0.006 285.885)",
        950: "oklch(14.1% 0.005 285.823)"
    },
    neutral: {
        50: "oklch(98.5% 0 0)",
        100: "oklch(97% 0 0)",
        200: "oklch(92.2% 0 0)",
        300: "oklch(87% 0 0)",
        400: "oklch(70.8% 0 0)",
        500: "oklch(55.6% 0 0)",
        600: "oklch(43.9% 0 0)",
        700: "oklch(37.1% 0 0)",
        800: "oklch(26.9% 0 0)",
        900: "oklch(20.5% 0 0)",
        950: "oklch(14.5% 0 0)"
    },
    stone: {
        50: "oklch(98.5% 0.001 106.423)",
        100: "oklch(97% 0.001 106.424)",
        200: "oklch(92.3% 0.003 48.717)",
        300: "oklch(86.9% 0.005 56.366)",
        400: "oklch(70.9% 0.01 56.259)",
        500: "oklch(55.3% 0.013 58.071)",
        600: "oklch(44.4% 0.011 73.639)",
        700: "oklch(37.4% 0.01 67.558)",
        800: "oklch(26.8% 0.007 34.298)",
        900: "oklch(21.6% 0.006 56.043)",
        950: "oklch(14.7% 0.004 49.25)"
    },
    red: {
        50: "oklch(97.1% 0.013 17.38)",
        100: "oklch(93.6% 0.032 17.717)",
        200: "oklch(88.5% 0.062 18.334)",
        300: "oklch(80.8% 0.114 19.571)",
        400: "oklch(70.4% 0.191 22.216)",
        500: "oklch(63.7% 0.237 25.331)",
        600: "oklch(57.7% 0.245 27.325)",
        700: "oklch(50.5% 0.213 27.518)",
        800: "oklch(44.4% 0.177 26.899)",
        900: "oklch(39.6% 0.141 25.723)",
        950: "oklch(25.8% 0.092 26.042)"
    },
    orange: {
        50: "oklch(98% 0.016 73.684)",
        100: "oklch(95.4% 0.038 75.164)",
        200: "oklch(90.1% 0.076 70.697)",
        300: "oklch(83.7% 0.128 66.29)",
        400: "oklch(75% 0.183 55.934)",
        500: "oklch(70.5% 0.213 47.604)",
        600: "oklch(64.6% 0.222 41.116)",
        700: "oklch(55.3% 0.195 38.402)",
        800: "oklch(47% 0.157 37.304)",
        900: "oklch(40.8% 0.123 38.172)",
        950: "oklch(26.6% 0.079 36.259)"
    },
    amber: {
        50: "oklch(98.7% 0.022 95.277)",
        100: "oklch(96.2% 0.059 95.617)",
        200: "oklch(92.4% 0.12 95.746)",
        300: "oklch(87.9% 0.169 91.605)",
        400: "oklch(82.8% 0.189 84.429)",
        500: "oklch(76.9% 0.188 70.08)",
        600: "oklch(66.6% 0.179 58.318)",
        700: "oklch(55.5% 0.163 48.998)",
        800: "oklch(47.3% 0.137 46.201)",
        900: "oklch(41.4% 0.112 45.904)",
        950: "oklch(27.9% 0.077 45.635)"
    },
    yellow: {
        50: "oklch(98.7% 0.026 102.212)",
        100: "oklch(97.3% 0.071 103.193)",
        200: "oklch(94.5% 0.129 101.54)",
        300: "oklch(90.5% 0.182 98.111)",
        400: "oklch(85.2% 0.199 91.936)",
        500: "oklch(79.5% 0.184 86.047)",
        600: "oklch(68.1% 0.162 75.834)",
        700: "oklch(55.4% 0.135 66.442)",
        800: "oklch(47.6% 0.114 61.907)",
        900: "oklch(42.1% 0.095 57.708)",
        950: "oklch(28.6% 0.066 53.813)"
    },
    lime: {
        50: "oklch(98.6% 0.031 120.757)",
        100: "oklch(96.7% 0.067 122.328)",
        200: "oklch(93.8% 0.127 124.321)",
        300: "oklch(89.7% 0.196 126.665)",
        400: "oklch(84.1% 0.238 128.85)",
        500: "oklch(76.8% 0.233 130.85)",
        600: "oklch(64.8% 0.2 131.684)",
        700: "oklch(53.2% 0.157 131.589)",
        800: "oklch(45.3% 0.124 130.933)",
        900: "oklch(40.5% 0.101 131.063)",
        950: "oklch(27.4% 0.072 132.109)"
    },
    green: {
        50: "oklch(98.2% 0.018 155.826)",
        100: "oklch(96.2% 0.044 156.743)",
        200: "oklch(92.5% 0.084 155.995)",
        300: "oklch(87.1% 0.15 154.449)",
        400: "oklch(79.2% 0.209 151.711)",
        500: "oklch(72.3% 0.219 149.579)",
        600: "oklch(62.7% 0.194 149.214)",
        700: "oklch(52.7% 0.154 150.069)",
        800: "oklch(44.8% 0.119 151.328)",
        900: "oklch(39.3% 0.095 152.535)",
        950: "oklch(26.6% 0.065 152.934)"
    },
    emerald: {
        50: "oklch(97.9% 0.021 166.113)",
        100: "oklch(95% 0.052 163.051)",
        200: "oklch(90.5% 0.093 164.15)",
        300: "oklch(84.5% 0.143 164.978)",
        400: "oklch(76.5% 0.177 163.223)",
        500: "oklch(69.6% 0.17 162.48)",
        600: "oklch(59.6% 0.145 163.225)",
        700: "oklch(50.8% 0.118 165.612)",
        800: "oklch(43.2% 0.095 166.913)",
        900: "oklch(37.8% 0.077 168.94)",
        950: "oklch(26.2% 0.051 172.552)"
    },
    teal: {
        50: "oklch(98.4% 0.014 180.72)",
        100: "oklch(95.3% 0.051 180.801)",
        200: "oklch(91% 0.096 180.426)",
        300: "oklch(85.5% 0.138 181.071)",
        400: "oklch(77.7% 0.152 181.912)",
        500: "oklch(70.4% 0.14 182.503)",
        600: "oklch(60% 0.118 184.704)",
        700: "oklch(51.1% 0.096 186.391)",
        800: "oklch(43.7% 0.078 188.216)",
        900: "oklch(38.6% 0.063 188.416)",
        950: "oklch(27.7% 0.046 192.524)"
    },
    cyan: {
        50: "oklch(98.4% 0.019 200.873)",
        100: "oklch(95.6% 0.045 203.388)",
        200: "oklch(91.7% 0.08 205.041)",
        300: "oklch(86.5% 0.127 207.078)",
        400: "oklch(78.9% 0.154 211.53)",
        500: "oklch(71.5% 0.143 215.221)",
        600: "oklch(60.9% 0.126 221.723)",
        700: "oklch(52% 0.105 223.128)",
        800: "oklch(45% 0.085 224.283)",
        900: "oklch(39.8% 0.07 227.392)",
        950: "oklch(30.2% 0.056 229.695)"
    },
    sky: {
        50: "oklch(97.7% 0.013 236.62)",
        100: "oklch(95.1% 0.026 236.824)",
        200: "oklch(90.1% 0.058 230.902)",
        300: "oklch(82.8% 0.111 230.318)",
        400: "oklch(74.6% 0.16 232.661)",
        500: "oklch(68.5% 0.169 237.323)",
        600: "oklch(58.8% 0.158 241.966)",
        700: "oklch(50% 0.134 242.749)",
        800: "oklch(44.3% 0.11 240.79)",
        900: "oklch(39.1% 0.09 240.876)",
        950: "oklch(29.3% 0.066 243.157)"
    },
    blue: {
        50: "oklch(97% 0.014 254.604)",
        100: "oklch(93.2% 0.032 255.585)",
        200: "oklch(88.2% 0.059 254.128)",
        300: "oklch(80.9% 0.105 251.813)",
        400: "oklch(70.7% 0.165 254.624)",
        500: "oklch(62.3% 0.214 259.815)",
        600: "oklch(54.6% 0.245 262.881)",
        700: "oklch(48.8% 0.243 264.376)",
        800: "oklch(42.4% 0.199 265.638)",
        900: "oklch(37.9% 0.146 265.522)",
        950: "oklch(28.2% 0.091 267.935)"
    },
    indigo: {
        50: "oklch(96.2% 0.018 272.314)",
        100: "oklch(93% 0.034 272.788)",
        200: "oklch(87% 0.065 274.039)",
        300: "oklch(78.5% 0.115 274.713)",
        400: "oklch(67.3% 0.182 276.935)",
        500: "oklch(58.5% 0.233 277.117)",
        600: "oklch(51.1% 0.262 276.966)",
        700: "oklch(45.7% 0.24 277.023)",
        800: "oklch(39.8% 0.195 277.366)",
        900: "oklch(35.9% 0.144 278.697)",
        950: "oklch(25.7% 0.09 281.288)"
    },
    violet: {
        50: "oklch(96.9% 0.016 293.756)",
        100: "oklch(94.3% 0.029 294.588)",
        200: "oklch(89.4% 0.057 293.283)",
        300: "oklch(81.1% 0.111 293.571)",
        400: "oklch(70.2% 0.183 293.541)",
        500: "oklch(60.6% 0.25 292.717)",
        600: "oklch(54.1% 0.281 293.009)",
        700: "oklch(49.1% 0.27 292.581)",
        800: "oklch(43.2% 0.232 292.759)",
        900: "oklch(38% 0.189 293.745)",
        950: "oklch(28.3% 0.141 291.089)"
    },
    purple: {
        50: "oklch(97.7% 0.014 308.299)",
        100: "oklch(94.6% 0.033 307.174)",
        200: "oklch(90.2% 0.063 306.703)",
        300: "oklch(82.7% 0.119 306.383)",
        400: "oklch(71.4% 0.203 305.504)",
        500: "oklch(62.7% 0.265 303.9)",
        600: "oklch(55.8% 0.288 302.321)",
        700: "oklch(49.6% 0.265 301.924)",
        800: "oklch(43.8% 0.218 303.724)",
        900: "oklch(38.1% 0.176 304.987)",
        950: "oklch(29.1% 0.149 302.717)"
    },
    fuchsia: {
        50: "oklch(97.7% 0.017 320.058)",
        100: "oklch(95.2% 0.037 318.852)",
        200: "oklch(90.3% 0.076 319.62)",
        300: "oklch(83.3% 0.145 321.434)",
        400: "oklch(74% 0.238 322.16)",
        500: "oklch(66.7% 0.295 322.15)",
        600: "oklch(59.1% 0.293 322.896)",
        700: "oklch(51.8% 0.253 323.949)",
        800: "oklch(45.2% 0.211 324.591)",
        900: "oklch(40.1% 0.17 325.612)",
        950: "oklch(29.3% 0.136 325.661)"
    },
    pink: {
        50: "oklch(97.1% 0.014 343.198)",
        100: "oklch(94.8% 0.028 342.258)",
        200: "oklch(89.9% 0.061 343.231)",
        300: "oklch(82.3% 0.12 346.018)",
        400: "oklch(71.8% 0.202 349.761)",
        500: "oklch(65.6% 0.241 354.308)",
        600: "oklch(59.2% 0.249 0.584)",
        700: "oklch(52.5% 0.223 3.958)",
        800: "oklch(45.9% 0.187 3.815)",
        900: "oklch(40.8% 0.153 2.432)",
        950: "oklch(28.4% 0.109 3.907)"
    },
    rose: {
        50: "oklch(96.9% 0.015 12.422)",
        100: "oklch(94.1% 0.03 12.58)",
        200: "oklch(89.2% 0.058 10.001)",
        300: "oklch(81% 0.117 11.638)",
        400: "oklch(71.2% 0.194 13.428)",
        500: "oklch(64.5% 0.246 16.439)",
        600: "oklch(58.6% 0.253 17.585)",
        700: "oklch(51.4% 0.222 16.935)",
        800: "oklch(45.5% 0.188 13.697)",
        900: "oklch(41% 0.159 10.272)",
        950: "oklch(27.1% 0.105 12.094)"
    }
};
function $e(e) {
    return {
        __BARE_VALUE__: e
    };
}
var le = $e((e)=>{
    if (T(e.value)) return e.value;
}), re = $e((e)=>{
    if (T(e.value)) return "".concat(e.value, "%");
}), he = $e((e)=>{
    if (T(e.value)) return "".concat(e.value, "px");
}), ai = $e((e)=>{
    if (T(e.value)) return "".concat(e.value, "ms");
}), gt = $e((e)=>{
    if (T(e.value)) return "".concat(e.value, "deg");
}), Qn = $e((e)=>{
    if (e.fraction === null) return;
    let [r, i] = U(e.fraction, "/");
    if (!(!T(r) || !T(i))) return e.fraction;
}), si = $e((e)=>{
    if (T(Number(e.value))) return "repeat(".concat(e.value, ", minmax(0, 1fr))");
}), ui = {
    accentColor: (param)=>{
        let { theme: e } = param;
        return e("colors");
    },
    animation: {
        none: "none",
        spin: "spin 1s linear infinite",
        ping: "ping 1s cubic-bezier(0, 0, 0.2, 1) infinite",
        pulse: "pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite",
        bounce: "bounce 1s infinite"
    },
    aria: {
        busy: 'busy="true"',
        checked: 'checked="true"',
        disabled: 'disabled="true"',
        expanded: 'expanded="true"',
        hidden: 'hidden="true"',
        pressed: 'pressed="true"',
        readonly: 'readonly="true"',
        required: 'required="true"',
        selected: 'selected="true"'
    },
    aspectRatio: {
        auto: "auto",
        square: "1 / 1",
        video: "16 / 9",
        ...Qn
    },
    backdropBlur: (param)=>{
        let { theme: e } = param;
        return e("blur");
    },
    backdropBrightness: (param)=>{
        let { theme: e } = param;
        return {
            ...e("brightness"),
            ...re
        };
    },
    backdropContrast: (param)=>{
        let { theme: e } = param;
        return {
            ...e("contrast"),
            ...re
        };
    },
    backdropGrayscale: (param)=>{
        let { theme: e } = param;
        return {
            ...e("grayscale"),
            ...re
        };
    },
    backdropHueRotate: (param)=>{
        let { theme: e } = param;
        return {
            ...e("hueRotate"),
            ...gt
        };
    },
    backdropInvert: (param)=>{
        let { theme: e } = param;
        return {
            ...e("invert"),
            ...re
        };
    },
    backdropOpacity: (param)=>{
        let { theme: e } = param;
        return {
            ...e("opacity"),
            ...re
        };
    },
    backdropSaturate: (param)=>{
        let { theme: e } = param;
        return {
            ...e("saturate"),
            ...re
        };
    },
    backdropSepia: (param)=>{
        let { theme: e } = param;
        return {
            ...e("sepia"),
            ...re
        };
    },
    backgroundColor: (param)=>{
        let { theme: e } = param;
        return e("colors");
    },
    backgroundImage: {
        none: "none",
        "gradient-to-t": "linear-gradient(to top, var(--tw-gradient-stops))",
        "gradient-to-tr": "linear-gradient(to top right, var(--tw-gradient-stops))",
        "gradient-to-r": "linear-gradient(to right, var(--tw-gradient-stops))",
        "gradient-to-br": "linear-gradient(to bottom right, var(--tw-gradient-stops))",
        "gradient-to-b": "linear-gradient(to bottom, var(--tw-gradient-stops))",
        "gradient-to-bl": "linear-gradient(to bottom left, var(--tw-gradient-stops))",
        "gradient-to-l": "linear-gradient(to left, var(--tw-gradient-stops))",
        "gradient-to-tl": "linear-gradient(to top left, var(--tw-gradient-stops))"
    },
    backgroundOpacity: (param)=>{
        let { theme: e } = param;
        return e("opacity");
    },
    backgroundPosition: {
        bottom: "bottom",
        center: "center",
        left: "left",
        "left-bottom": "left bottom",
        "left-top": "left top",
        right: "right",
        "right-bottom": "right bottom",
        "right-top": "right top",
        top: "top"
    },
    backgroundSize: {
        auto: "auto",
        cover: "cover",
        contain: "contain"
    },
    blur: {
        0: "0",
        none: "",
        sm: "4px",
        DEFAULT: "8px",
        md: "12px",
        lg: "16px",
        xl: "24px",
        "2xl": "40px",
        "3xl": "64px"
    },
    borderColor: (param)=>{
        let { theme: e } = param;
        return {
            DEFAULT: "currentcolor",
            ...e("colors")
        };
    },
    borderOpacity: (param)=>{
        let { theme: e } = param;
        return e("opacity");
    },
    borderRadius: {
        none: "0px",
        sm: "0.125rem",
        DEFAULT: "0.25rem",
        md: "0.375rem",
        lg: "0.5rem",
        xl: "0.75rem",
        "2xl": "1rem",
        "3xl": "1.5rem",
        full: "9999px"
    },
    borderSpacing: (param)=>{
        let { theme: e } = param;
        return e("spacing");
    },
    borderWidth: {
        DEFAULT: "1px",
        0: "0px",
        2: "2px",
        4: "4px",
        8: "8px",
        ...he
    },
    boxShadow: {
        sm: "0 1px 2px 0 rgb(0 0 0 / 0.05)",
        DEFAULT: "0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)",
        md: "0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)",
        lg: "0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)",
        xl: "0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)",
        "2xl": "0 25px 50px -12px rgb(0 0 0 / 0.25)",
        inner: "inset 0 2px 4px 0 rgb(0 0 0 / 0.05)",
        none: "none"
    },
    boxShadowColor: (param)=>{
        let { theme: e } = param;
        return e("colors");
    },
    brightness: {
        0: "0",
        50: ".5",
        75: ".75",
        90: ".9",
        95: ".95",
        100: "1",
        105: "1.05",
        110: "1.1",
        125: "1.25",
        150: "1.5",
        200: "2",
        ...re
    },
    caretColor: (param)=>{
        let { theme: e } = param;
        return e("colors");
    },
    colors: ()=>({
            ...mt
        }),
    columns: {
        auto: "auto",
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        7: "7",
        8: "8",
        9: "9",
        10: "10",
        11: "11",
        12: "12",
        "3xs": "16rem",
        "2xs": "18rem",
        xs: "20rem",
        sm: "24rem",
        md: "28rem",
        lg: "32rem",
        xl: "36rem",
        "2xl": "42rem",
        "3xl": "48rem",
        "4xl": "56rem",
        "5xl": "64rem",
        "6xl": "72rem",
        "7xl": "80rem",
        ...le
    },
    container: {},
    content: {
        none: "none"
    },
    contrast: {
        0: "0",
        50: ".5",
        75: ".75",
        100: "1",
        125: "1.25",
        150: "1.5",
        200: "2",
        ...re
    },
    cursor: {
        auto: "auto",
        default: "default",
        pointer: "pointer",
        wait: "wait",
        text: "text",
        move: "move",
        help: "help",
        "not-allowed": "not-allowed",
        none: "none",
        "context-menu": "context-menu",
        progress: "progress",
        cell: "cell",
        crosshair: "crosshair",
        "vertical-text": "vertical-text",
        alias: "alias",
        copy: "copy",
        "no-drop": "no-drop",
        grab: "grab",
        grabbing: "grabbing",
        "all-scroll": "all-scroll",
        "col-resize": "col-resize",
        "row-resize": "row-resize",
        "n-resize": "n-resize",
        "e-resize": "e-resize",
        "s-resize": "s-resize",
        "w-resize": "w-resize",
        "ne-resize": "ne-resize",
        "nw-resize": "nw-resize",
        "se-resize": "se-resize",
        "sw-resize": "sw-resize",
        "ew-resize": "ew-resize",
        "ns-resize": "ns-resize",
        "nesw-resize": "nesw-resize",
        "nwse-resize": "nwse-resize",
        "zoom-in": "zoom-in",
        "zoom-out": "zoom-out"
    },
    divideColor: (param)=>{
        let { theme: e } = param;
        return e("borderColor");
    },
    divideOpacity: (param)=>{
        let { theme: e } = param;
        return e("borderOpacity");
    },
    divideWidth: (param)=>{
        let { theme: e } = param;
        return {
            ...e("borderWidth"),
            ...he
        };
    },
    dropShadow: {
        sm: "0 1px 1px rgb(0 0 0 / 0.05)",
        DEFAULT: [
            "0 1px 2px rgb(0 0 0 / 0.1)",
            "0 1px 1px rgb(0 0 0 / 0.06)"
        ],
        md: [
            "0 4px 3px rgb(0 0 0 / 0.07)",
            "0 2px 2px rgb(0 0 0 / 0.06)"
        ],
        lg: [
            "0 10px 8px rgb(0 0 0 / 0.04)",
            "0 4px 3px rgb(0 0 0 / 0.1)"
        ],
        xl: [
            "0 20px 13px rgb(0 0 0 / 0.03)",
            "0 8px 5px rgb(0 0 0 / 0.08)"
        ],
        "2xl": "0 25px 25px rgb(0 0 0 / 0.15)",
        none: "0 0 #0000"
    },
    fill: (param)=>{
        let { theme: e } = param;
        return e("colors");
    },
    flex: {
        1: "1 1 0%",
        auto: "1 1 auto",
        initial: "0 1 auto",
        none: "none"
    },
    flexBasis: (param)=>{
        let { theme: e } = param;
        return {
            auto: "auto",
            "1/2": "50%",
            "1/3": "33.333333%",
            "2/3": "66.666667%",
            "1/4": "25%",
            "2/4": "50%",
            "3/4": "75%",
            "1/5": "20%",
            "2/5": "40%",
            "3/5": "60%",
            "4/5": "80%",
            "1/6": "16.666667%",
            "2/6": "33.333333%",
            "3/6": "50%",
            "4/6": "66.666667%",
            "5/6": "83.333333%",
            "1/12": "8.333333%",
            "2/12": "16.666667%",
            "3/12": "25%",
            "4/12": "33.333333%",
            "5/12": "41.666667%",
            "6/12": "50%",
            "7/12": "58.333333%",
            "8/12": "66.666667%",
            "9/12": "75%",
            "10/12": "83.333333%",
            "11/12": "91.666667%",
            full: "100%",
            ...e("spacing")
        };
    },
    flexGrow: {
        0: "0",
        DEFAULT: "1",
        ...le
    },
    flexShrink: {
        0: "0",
        DEFAULT: "1",
        ...le
    },
    fontFamily: {
        sans: [
            "ui-sans-serif",
            "system-ui",
            "sans-serif",
            '"Apple Color Emoji"',
            '"Segoe UI Emoji"',
            '"Segoe UI Symbol"',
            '"Noto Color Emoji"'
        ],
        serif: [
            "ui-serif",
            "Georgia",
            "Cambria",
            '"Times New Roman"',
            "Times",
            "serif"
        ],
        mono: [
            "ui-monospace",
            "SFMono-Regular",
            "Menlo",
            "Monaco",
            "Consolas",
            '"Liberation Mono"',
            '"Courier New"',
            "monospace"
        ]
    },
    fontSize: {
        xs: [
            "0.75rem",
            {
                lineHeight: "1rem"
            }
        ],
        sm: [
            "0.875rem",
            {
                lineHeight: "1.25rem"
            }
        ],
        base: [
            "1rem",
            {
                lineHeight: "1.5rem"
            }
        ],
        lg: [
            "1.125rem",
            {
                lineHeight: "1.75rem"
            }
        ],
        xl: [
            "1.25rem",
            {
                lineHeight: "1.75rem"
            }
        ],
        "2xl": [
            "1.5rem",
            {
                lineHeight: "2rem"
            }
        ],
        "3xl": [
            "1.875rem",
            {
                lineHeight: "2.25rem"
            }
        ],
        "4xl": [
            "2.25rem",
            {
                lineHeight: "2.5rem"
            }
        ],
        "5xl": [
            "3rem",
            {
                lineHeight: "1"
            }
        ],
        "6xl": [
            "3.75rem",
            {
                lineHeight: "1"
            }
        ],
        "7xl": [
            "4.5rem",
            {
                lineHeight: "1"
            }
        ],
        "8xl": [
            "6rem",
            {
                lineHeight: "1"
            }
        ],
        "9xl": [
            "8rem",
            {
                lineHeight: "1"
            }
        ]
    },
    fontWeight: {
        thin: "100",
        extralight: "200",
        light: "300",
        normal: "400",
        medium: "500",
        semibold: "600",
        bold: "700",
        extrabold: "800",
        black: "900"
    },
    gap: (param)=>{
        let { theme: e } = param;
        return e("spacing");
    },
    gradientColorStops: (param)=>{
        let { theme: e } = param;
        return e("colors");
    },
    gradientColorStopPositions: {
        "0%": "0%",
        "5%": "5%",
        "10%": "10%",
        "15%": "15%",
        "20%": "20%",
        "25%": "25%",
        "30%": "30%",
        "35%": "35%",
        "40%": "40%",
        "45%": "45%",
        "50%": "50%",
        "55%": "55%",
        "60%": "60%",
        "65%": "65%",
        "70%": "70%",
        "75%": "75%",
        "80%": "80%",
        "85%": "85%",
        "90%": "90%",
        "95%": "95%",
        "100%": "100%",
        ...re
    },
    grayscale: {
        0: "0",
        DEFAULT: "100%",
        ...re
    },
    gridAutoColumns: {
        auto: "auto",
        min: "min-content",
        max: "max-content",
        fr: "minmax(0, 1fr)"
    },
    gridAutoRows: {
        auto: "auto",
        min: "min-content",
        max: "max-content",
        fr: "minmax(0, 1fr)"
    },
    gridColumn: {
        auto: "auto",
        "span-1": "span 1 / span 1",
        "span-2": "span 2 / span 2",
        "span-3": "span 3 / span 3",
        "span-4": "span 4 / span 4",
        "span-5": "span 5 / span 5",
        "span-6": "span 6 / span 6",
        "span-7": "span 7 / span 7",
        "span-8": "span 8 / span 8",
        "span-9": "span 9 / span 9",
        "span-10": "span 10 / span 10",
        "span-11": "span 11 / span 11",
        "span-12": "span 12 / span 12",
        "span-full": "1 / -1"
    },
    gridColumnEnd: {
        auto: "auto",
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        7: "7",
        8: "8",
        9: "9",
        10: "10",
        11: "11",
        12: "12",
        13: "13",
        ...le
    },
    gridColumnStart: {
        auto: "auto",
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        7: "7",
        8: "8",
        9: "9",
        10: "10",
        11: "11",
        12: "12",
        13: "13",
        ...le
    },
    gridRow: {
        auto: "auto",
        "span-1": "span 1 / span 1",
        "span-2": "span 2 / span 2",
        "span-3": "span 3 / span 3",
        "span-4": "span 4 / span 4",
        "span-5": "span 5 / span 5",
        "span-6": "span 6 / span 6",
        "span-7": "span 7 / span 7",
        "span-8": "span 8 / span 8",
        "span-9": "span 9 / span 9",
        "span-10": "span 10 / span 10",
        "span-11": "span 11 / span 11",
        "span-12": "span 12 / span 12",
        "span-full": "1 / -1"
    },
    gridRowEnd: {
        auto: "auto",
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        7: "7",
        8: "8",
        9: "9",
        10: "10",
        11: "11",
        12: "12",
        13: "13",
        ...le
    },
    gridRowStart: {
        auto: "auto",
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        7: "7",
        8: "8",
        9: "9",
        10: "10",
        11: "11",
        12: "12",
        13: "13",
        ...le
    },
    gridTemplateColumns: {
        none: "none",
        subgrid: "subgrid",
        1: "repeat(1, minmax(0, 1fr))",
        2: "repeat(2, minmax(0, 1fr))",
        3: "repeat(3, minmax(0, 1fr))",
        4: "repeat(4, minmax(0, 1fr))",
        5: "repeat(5, minmax(0, 1fr))",
        6: "repeat(6, minmax(0, 1fr))",
        7: "repeat(7, minmax(0, 1fr))",
        8: "repeat(8, minmax(0, 1fr))",
        9: "repeat(9, minmax(0, 1fr))",
        10: "repeat(10, minmax(0, 1fr))",
        11: "repeat(11, minmax(0, 1fr))",
        12: "repeat(12, minmax(0, 1fr))",
        ...si
    },
    gridTemplateRows: {
        none: "none",
        subgrid: "subgrid",
        1: "repeat(1, minmax(0, 1fr))",
        2: "repeat(2, minmax(0, 1fr))",
        3: "repeat(3, minmax(0, 1fr))",
        4: "repeat(4, minmax(0, 1fr))",
        5: "repeat(5, minmax(0, 1fr))",
        6: "repeat(6, minmax(0, 1fr))",
        7: "repeat(7, minmax(0, 1fr))",
        8: "repeat(8, minmax(0, 1fr))",
        9: "repeat(9, minmax(0, 1fr))",
        10: "repeat(10, minmax(0, 1fr))",
        11: "repeat(11, minmax(0, 1fr))",
        12: "repeat(12, minmax(0, 1fr))",
        ...si
    },
    height: (param)=>{
        let { theme: e } = param;
        return {
            auto: "auto",
            "1/2": "50%",
            "1/3": "33.333333%",
            "2/3": "66.666667%",
            "1/4": "25%",
            "2/4": "50%",
            "3/4": "75%",
            "1/5": "20%",
            "2/5": "40%",
            "3/5": "60%",
            "4/5": "80%",
            "1/6": "16.666667%",
            "2/6": "33.333333%",
            "3/6": "50%",
            "4/6": "66.666667%",
            "5/6": "83.333333%",
            full: "100%",
            screen: "100vh",
            svh: "100svh",
            lvh: "100lvh",
            dvh: "100dvh",
            min: "min-content",
            max: "max-content",
            fit: "fit-content",
            ...e("spacing")
        };
    },
    hueRotate: {
        0: "0deg",
        15: "15deg",
        30: "30deg",
        60: "60deg",
        90: "90deg",
        180: "180deg",
        ...gt
    },
    inset: (param)=>{
        let { theme: e } = param;
        return {
            auto: "auto",
            "1/2": "50%",
            "1/3": "33.333333%",
            "2/3": "66.666667%",
            "1/4": "25%",
            "2/4": "50%",
            "3/4": "75%",
            full: "100%",
            ...e("spacing")
        };
    },
    invert: {
        0: "0",
        DEFAULT: "100%",
        ...re
    },
    keyframes: {
        spin: {
            to: {
                transform: "rotate(360deg)"
            }
        },
        ping: {
            "75%, 100%": {
                transform: "scale(2)",
                opacity: "0"
            }
        },
        pulse: {
            "50%": {
                opacity: ".5"
            }
        },
        bounce: {
            "0%, 100%": {
                transform: "translateY(-25%)",
                animationTimingFunction: "cubic-bezier(0.8,0,1,1)"
            },
            "50%": {
                transform: "none",
                animationTimingFunction: "cubic-bezier(0,0,0.2,1)"
            }
        }
    },
    letterSpacing: {
        tighter: "-0.05em",
        tight: "-0.025em",
        normal: "0em",
        wide: "0.025em",
        wider: "0.05em",
        widest: "0.1em"
    },
    lineHeight: {
        none: "1",
        tight: "1.25",
        snug: "1.375",
        normal: "1.5",
        relaxed: "1.625",
        loose: "2",
        3: ".75rem",
        4: "1rem",
        5: "1.25rem",
        6: "1.5rem",
        7: "1.75rem",
        8: "2rem",
        9: "2.25rem",
        10: "2.5rem"
    },
    listStyleType: {
        none: "none",
        disc: "disc",
        decimal: "decimal"
    },
    listStyleImage: {
        none: "none"
    },
    margin: (param)=>{
        let { theme: e } = param;
        return {
            auto: "auto",
            ...e("spacing")
        };
    },
    lineClamp: {
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        ...le
    },
    maxHeight: (param)=>{
        let { theme: e } = param;
        return {
            none: "none",
            full: "100%",
            screen: "100vh",
            svh: "100svh",
            lvh: "100lvh",
            dvh: "100dvh",
            min: "min-content",
            max: "max-content",
            fit: "fit-content",
            ...e("spacing")
        };
    },
    maxWidth: (param)=>{
        let { theme: e } = param;
        return {
            none: "none",
            xs: "20rem",
            sm: "24rem",
            md: "28rem",
            lg: "32rem",
            xl: "36rem",
            "2xl": "42rem",
            "3xl": "48rem",
            "4xl": "56rem",
            "5xl": "64rem",
            "6xl": "72rem",
            "7xl": "80rem",
            full: "100%",
            min: "min-content",
            max: "max-content",
            fit: "fit-content",
            prose: "65ch",
            ...e("spacing")
        };
    },
    minHeight: (param)=>{
        let { theme: e } = param;
        return {
            full: "100%",
            screen: "100vh",
            svh: "100svh",
            lvh: "100lvh",
            dvh: "100dvh",
            min: "min-content",
            max: "max-content",
            fit: "fit-content",
            ...e("spacing")
        };
    },
    minWidth: (param)=>{
        let { theme: e } = param;
        return {
            full: "100%",
            min: "min-content",
            max: "max-content",
            fit: "fit-content",
            ...e("spacing")
        };
    },
    objectPosition: {
        bottom: "bottom",
        center: "center",
        left: "left",
        "left-bottom": "left bottom",
        "left-top": "left top",
        right: "right",
        "right-bottom": "right bottom",
        "right-top": "right top",
        top: "top"
    },
    opacity: {
        0: "0",
        5: "0.05",
        10: "0.1",
        15: "0.15",
        20: "0.2",
        25: "0.25",
        30: "0.3",
        35: "0.35",
        40: "0.4",
        45: "0.45",
        50: "0.5",
        55: "0.55",
        60: "0.6",
        65: "0.65",
        70: "0.7",
        75: "0.75",
        80: "0.8",
        85: "0.85",
        90: "0.9",
        95: "0.95",
        100: "1",
        ...re
    },
    order: {
        first: "-9999",
        last: "9999",
        none: "0",
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        7: "7",
        8: "8",
        9: "9",
        10: "10",
        11: "11",
        12: "12",
        ...le
    },
    outlineColor: (param)=>{
        let { theme: e } = param;
        return e("colors");
    },
    outlineOffset: {
        0: "0px",
        1: "1px",
        2: "2px",
        4: "4px",
        8: "8px",
        ...he
    },
    outlineWidth: {
        0: "0px",
        1: "1px",
        2: "2px",
        4: "4px",
        8: "8px",
        ...he
    },
    padding: (param)=>{
        let { theme: e } = param;
        return e("spacing");
    },
    placeholderColor: (param)=>{
        let { theme: e } = param;
        return e("colors");
    },
    placeholderOpacity: (param)=>{
        let { theme: e } = param;
        return e("opacity");
    },
    ringColor: (param)=>{
        let { theme: e } = param;
        return {
            DEFAULT: "currentcolor",
            ...e("colors")
        };
    },
    ringOffsetColor: (param)=>{
        let { theme: e } = param;
        return e("colors");
    },
    ringOffsetWidth: {
        0: "0px",
        1: "1px",
        2: "2px",
        4: "4px",
        8: "8px",
        ...he
    },
    ringOpacity: (param)=>{
        let { theme: e } = param;
        return {
            DEFAULT: "0.5",
            ...e("opacity")
        };
    },
    ringWidth: {
        DEFAULT: "3px",
        0: "0px",
        1: "1px",
        2: "2px",
        4: "4px",
        8: "8px",
        ...he
    },
    rotate: {
        0: "0deg",
        1: "1deg",
        2: "2deg",
        3: "3deg",
        6: "6deg",
        12: "12deg",
        45: "45deg",
        90: "90deg",
        180: "180deg",
        ...gt
    },
    saturate: {
        0: "0",
        50: ".5",
        100: "1",
        150: "1.5",
        200: "2",
        ...re
    },
    scale: {
        0: "0",
        50: ".5",
        75: ".75",
        90: ".9",
        95: ".95",
        100: "1",
        105: "1.05",
        110: "1.1",
        125: "1.25",
        150: "1.5",
        ...re
    },
    screens: {
        sm: "40rem",
        md: "48rem",
        lg: "64rem",
        xl: "80rem",
        "2xl": "96rem"
    },
    scrollMargin: (param)=>{
        let { theme: e } = param;
        return e("spacing");
    },
    scrollPadding: (param)=>{
        let { theme: e } = param;
        return e("spacing");
    },
    sepia: {
        0: "0",
        DEFAULT: "100%",
        ...re
    },
    skew: {
        0: "0deg",
        1: "1deg",
        2: "2deg",
        3: "3deg",
        6: "6deg",
        12: "12deg",
        ...gt
    },
    space: (param)=>{
        let { theme: e } = param;
        return e("spacing");
    },
    spacing: {
        px: "1px",
        0: "0px",
        .5: "0.125rem",
        1: "0.25rem",
        1.5: "0.375rem",
        2: "0.5rem",
        2.5: "0.625rem",
        3: "0.75rem",
        3.5: "0.875rem",
        4: "1rem",
        5: "1.25rem",
        6: "1.5rem",
        7: "1.75rem",
        8: "2rem",
        9: "2.25rem",
        10: "2.5rem",
        11: "2.75rem",
        12: "3rem",
        14: "3.5rem",
        16: "4rem",
        20: "5rem",
        24: "6rem",
        28: "7rem",
        32: "8rem",
        36: "9rem",
        40: "10rem",
        44: "11rem",
        48: "12rem",
        52: "13rem",
        56: "14rem",
        60: "15rem",
        64: "16rem",
        72: "18rem",
        80: "20rem",
        96: "24rem"
    },
    stroke: (param)=>{
        let { theme: e } = param;
        return {
            none: "none",
            ...e("colors")
        };
    },
    strokeWidth: {
        0: "0",
        1: "1",
        2: "2",
        ...le
    },
    supports: {},
    data: {},
    textColor: (param)=>{
        let { theme: e } = param;
        return e("colors");
    },
    textDecorationColor: (param)=>{
        let { theme: e } = param;
        return e("colors");
    },
    textDecorationThickness: {
        auto: "auto",
        "from-font": "from-font",
        0: "0px",
        1: "1px",
        2: "2px",
        4: "4px",
        8: "8px",
        ...he
    },
    textIndent: (param)=>{
        let { theme: e } = param;
        return e("spacing");
    },
    textOpacity: (param)=>{
        let { theme: e } = param;
        return e("opacity");
    },
    textUnderlineOffset: {
        auto: "auto",
        0: "0px",
        1: "1px",
        2: "2px",
        4: "4px",
        8: "8px",
        ...he
    },
    transformOrigin: {
        center: "center",
        top: "top",
        "top-right": "top right",
        right: "right",
        "bottom-right": "bottom right",
        bottom: "bottom",
        "bottom-left": "bottom left",
        left: "left",
        "top-left": "top left"
    },
    transitionDelay: {
        0: "0s",
        75: "75ms",
        100: "100ms",
        150: "150ms",
        200: "200ms",
        300: "300ms",
        500: "500ms",
        700: "700ms",
        1e3: "1000ms",
        ...ai
    },
    transitionDuration: {
        DEFAULT: "150ms",
        0: "0s",
        75: "75ms",
        100: "100ms",
        150: "150ms",
        200: "200ms",
        300: "300ms",
        500: "500ms",
        700: "700ms",
        1e3: "1000ms",
        ...ai
    },
    transitionProperty: {
        none: "none",
        all: "all",
        DEFAULT: "color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter",
        colors: "color, background-color, border-color, outline-color, text-decoration-color, fill, stroke",
        opacity: "opacity",
        shadow: "box-shadow",
        transform: "transform"
    },
    transitionTimingFunction: {
        DEFAULT: "cubic-bezier(0.4, 0, 0.2, 1)",
        linear: "linear",
        in: "cubic-bezier(0.4, 0, 1, 1)",
        out: "cubic-bezier(0, 0, 0.2, 1)",
        "in-out": "cubic-bezier(0.4, 0, 0.2, 1)"
    },
    translate: (param)=>{
        let { theme: e } = param;
        return {
            "1/2": "50%",
            "1/3": "33.333333%",
            "2/3": "66.666667%",
            "1/4": "25%",
            "2/4": "50%",
            "3/4": "75%",
            full: "100%",
            ...e("spacing")
        };
    },
    size: (param)=>{
        let { theme: e } = param;
        return {
            auto: "auto",
            "1/2": "50%",
            "1/3": "33.333333%",
            "2/3": "66.666667%",
            "1/4": "25%",
            "2/4": "50%",
            "3/4": "75%",
            "1/5": "20%",
            "2/5": "40%",
            "3/5": "60%",
            "4/5": "80%",
            "1/6": "16.666667%",
            "2/6": "33.333333%",
            "3/6": "50%",
            "4/6": "66.666667%",
            "5/6": "83.333333%",
            "1/12": "8.333333%",
            "2/12": "16.666667%",
            "3/12": "25%",
            "4/12": "33.333333%",
            "5/12": "41.666667%",
            "6/12": "50%",
            "7/12": "58.333333%",
            "8/12": "66.666667%",
            "9/12": "75%",
            "10/12": "83.333333%",
            "11/12": "91.666667%",
            full: "100%",
            min: "min-content",
            max: "max-content",
            fit: "fit-content",
            ...e("spacing")
        };
    },
    width: (param)=>{
        let { theme: e } = param;
        return {
            auto: "auto",
            "1/2": "50%",
            "1/3": "33.333333%",
            "2/3": "66.666667%",
            "1/4": "25%",
            "2/4": "50%",
            "3/4": "75%",
            "1/5": "20%",
            "2/5": "40%",
            "3/5": "60%",
            "4/5": "80%",
            "1/6": "16.666667%",
            "2/6": "33.333333%",
            "3/6": "50%",
            "4/6": "66.666667%",
            "5/6": "83.333333%",
            "1/12": "8.333333%",
            "2/12": "16.666667%",
            "3/12": "25%",
            "4/12": "33.333333%",
            "5/12": "41.666667%",
            "6/12": "50%",
            "7/12": "58.333333%",
            "8/12": "66.666667%",
            "9/12": "75%",
            "10/12": "83.333333%",
            "11/12": "91.666667%",
            full: "100%",
            screen: "100vw",
            svw: "100svw",
            lvw: "100lvw",
            dvw: "100dvw",
            min: "min-content",
            max: "max-content",
            fit: "fit-content",
            ...e("spacing")
        };
    },
    willChange: {
        auto: "auto",
        scroll: "scroll-position",
        contents: "contents",
        transform: "transform"
    },
    zIndex: {
        auto: "auto",
        0: "0",
        10: "10",
        20: "20",
        30: "30",
        40: "40",
        50: "50",
        ...le
    }
};
function ci(e) {
    var _e_get, _e_get1;
    return {
        theme: {
            ...ui,
            colors: (param)=>{
                let { theme: r } = param;
                return r("color", {});
            },
            extend: {
                fontSize: (param)=>{
                    let { theme: r } = param;
                    return {
                        ...r("text", {})
                    };
                },
                boxShadow: (param)=>{
                    let { theme: r } = param;
                    return {
                        ...r("shadow", {})
                    };
                },
                animation: (param)=>{
                    let { theme: r } = param;
                    return {
                        ...r("animate", {})
                    };
                },
                aspectRatio: (param)=>{
                    let { theme: r } = param;
                    return {
                        ...r("aspect", {})
                    };
                },
                borderRadius: (param)=>{
                    let { theme: r } = param;
                    return {
                        ...r("radius", {})
                    };
                },
                screens: (param)=>{
                    let { theme: r } = param;
                    return {
                        ...r("breakpoint", {})
                    };
                },
                letterSpacing: (param)=>{
                    let { theme: r } = param;
                    return {
                        ...r("tracking", {})
                    };
                },
                lineHeight: (param)=>{
                    let { theme: r } = param;
                    return {
                        ...r("leading", {})
                    };
                },
                transitionDuration: {
                    DEFAULT: (_e_get = e.get([
                        "--default-transition-duration"
                    ])) !== null && _e_get !== void 0 ? _e_get : null
                },
                transitionTimingFunction: {
                    DEFAULT: (_e_get1 = e.get([
                        "--default-transition-timing-function"
                    ])) !== null && _e_get1 !== void 0 ? _e_get1 : null
                },
                maxWidth: (param)=>{
                    let { theme: r } = param;
                    return {
                        ...r("container", {})
                    };
                }
            }
        }
    };
}
var Xn = {
    blocklist: [],
    future: {},
    prefix: "",
    important: !1,
    darkMode: null,
    theme: {},
    plugins: [],
    content: {
        files: []
    }
};
function Mt(e, r) {
    let i = {
        design: e,
        configs: [],
        plugins: [],
        content: {
            files: []
        },
        theme: {},
        extend: {},
        result: structuredClone(Xn)
    };
    for (let n of r)Ft(i, n);
    var _n_darkMode, _n_prefix, _n_blocklist, _n_important;
    for (let n of i.configs)"darkMode" in n && n.darkMode !== void 0 && (i.result.darkMode = (_n_darkMode = n.darkMode) !== null && _n_darkMode !== void 0 ? _n_darkMode : null), "prefix" in n && n.prefix !== void 0 && (i.result.prefix = (_n_prefix = n.prefix) !== null && _n_prefix !== void 0 ? _n_prefix : ""), "blocklist" in n && n.blocklist !== void 0 && (i.result.blocklist = (_n_blocklist = n.blocklist) !== null && _n_blocklist !== void 0 ? _n_blocklist : []), "important" in n && n.important !== void 0 && (i.result.important = (_n_important = n.important) !== null && _n_important !== void 0 ? _n_important : !1);
    let t = to(i);
    return {
        resolvedConfig: {
            ...i.result,
            content: i.content,
            theme: i.theme,
            plugins: i.plugins
        },
        replacedThemeKeys: t
    };
}
function eo(e, r) {
    if (Array.isArray(e) && Re(e[0])) return e.concat(r);
    if (Array.isArray(r) && Re(r[0]) && Re(e)) return [
        e,
        ...r
    ];
    if (Array.isArray(r)) return r;
}
function Ft(e, param) {
    let { config: r, base: i, path: t, reference: n, src: s } = param;
    let a = [];
    var _r_plugins;
    for (let c of (_r_plugins = r.plugins) !== null && _r_plugins !== void 0 ? _r_plugins : [])"__isOptionsFunction" in c ? a.push({
        ...c(),
        reference: n,
        src: s
    }) : "handler" in c ? a.push({
        ...c,
        reference: n,
        src: s
    }) : a.push({
        handler: c,
        reference: n,
        src: s
    });
    if (Array.isArray(r.presets) && r.presets.length === 0) throw new Error("Error in the config file/plugin/preset. An empty preset (`preset: []`) is not currently supported.");
    var _r_presets;
    for (let c of (_r_presets = r.presets) !== null && _r_presets !== void 0 ? _r_presets : [])Ft(e, {
        path: t,
        base: i,
        config: c,
        reference: n,
        src: s
    });
    var _c_src;
    for (let c of a)e.plugins.push(c), c.config && Ft(e, {
        path: t,
        base: i,
        config: c.config,
        reference: !!c.reference,
        src: (_c_src = c.src) !== null && _c_src !== void 0 ? _c_src : s
    });
    var _r_content;
    let p = (_r_content = r.content) !== null && _r_content !== void 0 ? _r_content : [], u = Array.isArray(p) ? p : p.files;
    for (let c of u)e.content.files.push(typeof c == "object" ? c : {
        base: i,
        pattern: c
    });
    e.configs.push(r);
}
function to(e) {
    let r = new Set, i = pt(e.design, ()=>e.theme, n), t = Object.assign(i, {
        theme: i,
        colors: mt
    });
    function n(s) {
        var _s;
        return typeof s == "function" ? (_s = s(t)) !== null && _s !== void 0 ? _s : null : s !== null && s !== void 0 ? s : null;
    }
    for (let s of e.configs){
        var _e_extend, _u;
        var _s_theme, _a_extend;
        let a = (_s_theme = s.theme) !== null && _s_theme !== void 0 ? _s_theme : {}, p = (_a_extend = a.extend) !== null && _a_extend !== void 0 ? _a_extend : {};
        for(let u in a)u !== "extend" && r.add(u);
        Object.assign(e.theme, a);
        var _;
        for(let u in p)(_ = (_e_extend = e.extend)[_u = u]) !== null && _ !== void 0 ? _ : _e_extend[_u] = [], e.extend[u].push(p[u]);
    }
    delete e.theme.extend;
    for(let s in e.extend){
        let a = [
            e.theme[s],
            ...e.extend[s]
        ];
        e.theme[s] = ()=>{
            let p = a.map(n);
            return je({}, p, eo);
        };
    }
    for(let s in e.theme)e.theme[s] = n(e.theme[s]);
    if (e.theme.screens && typeof e.theme.screens == "object") for (let s of Object.keys(e.theme.screens)){
        let a = e.theme.screens[s];
        a && typeof a == "object" && ("raw" in a || "max" in a || "min" in a && (e.theme.screens[s] = a.min));
    }
    return r;
}
function fi(e, r) {
    let i = e.theme.container || {};
    if (typeof i != "object" || i === null) return;
    let t = ro(i, r);
    t.length !== 0 && r.utilities.static("container", ()=>structuredClone(t));
}
function ro(param, t) {
    let { center: e, padding: r, screens: i } = param;
    let n = [], s = null;
    if (e && n.push(o("margin-inline", "auto")), (typeof r == "string" || typeof r == "object" && r !== null && "DEFAULT" in r) && n.push(o("padding-inline", typeof r == "string" ? r : r.DEFAULT)), typeof i == "object" && i !== null) {
        s = new Map;
        let a = Array.from(t.theme.namespace("--breakpoint").entries());
        if (a.sort((p, u)=>be(p[1], u[1], "asc")), a.length > 0) {
            let [p] = a[0];
            n.push(F("@media", "(width >= --theme(--breakpoint-".concat(p, "))"), [
                o("max-width", "none")
            ]));
        }
        for (let [p, u] of Object.entries(i)){
            if (typeof u == "object") if ("min" in u) u = u.min;
            else continue;
            s.set(p, F("@media", "(width >= ".concat(u, ")"), [
                o("max-width", u)
            ]));
        }
    }
    if (typeof r == "object" && r !== null) {
        let a = Object.entries(r).filter((param)=>{
            let [p] = param;
            return p !== "DEFAULT";
        }).map((param)=>{
            let [p, u] = param;
            return [
                p,
                t.theme.resolveValue(p, [
                    "--breakpoint"
                ]),
                u
            ];
        }).filter(Boolean);
        a.sort((p, u)=>be(p[1], u[1], "asc"));
        for (let [p, , u] of a)if (s && s.has(p)) s.get(p).nodes.push(o("padding-inline", u));
        else {
            if (s) continue;
            n.push(F("@media", "(width >= theme(--breakpoint-".concat(p, "))"), [
                o("padding-inline", u)
            ]));
        }
    }
    if (s) for (let [, a] of s)n.push(a);
    return n;
}
function pi(param) {
    let { addVariant: e, config: r } = param;
    let i = r("darkMode", null), [t, n = ".dark"] = Array.isArray(i) ? i : [
        i
    ];
    if (t === "variant") {
        let s;
        if (Array.isArray(n) || typeof n == "function" ? s = n : typeof n == "string" && (s = [
            n
        ]), Array.isArray(s)) for (let a of s)a === ".dark" ? (t = !1, console.warn('When using `variant` for `darkMode`, you must provide a selector.\nExample: `darkMode: ["variant", ".your-selector &"]`')) : a.includes("&") || (t = !1, console.warn('When using `variant` for `darkMode`, your selector must contain `&`.\nExample `darkMode: ["variant", ".your-selector &"]`'));
        n = s;
    }
    t === null || (t === "selector" ? e("dark", "&:where(".concat(n, ", ").concat(n, " *)")) : t === "media" ? e("dark", "@media (prefers-color-scheme: dark)") : t === "variant" ? e("dark", n) : t === "class" && e("dark", "&:is(".concat(n, " *)")));
}
function di(e) {
    for (let [r, i] of [
        [
            "t",
            "top"
        ],
        [
            "tr",
            "top right"
        ],
        [
            "r",
            "right"
        ],
        [
            "br",
            "bottom right"
        ],
        [
            "b",
            "bottom"
        ],
        [
            "bl",
            "bottom left"
        ],
        [
            "l",
            "left"
        ],
        [
            "tl",
            "top left"
        ]
    ])e.utilities.static("bg-gradient-to-".concat(r), ()=>[
            o("--tw-gradient-position", "to ".concat(i, " in oklab")),
            o("background-image", "linear-gradient(var(--tw-gradient-stops))")
        ]);
    e.utilities.static("bg-left-top", ()=>[
            o("background-position", "left top")
        ]), e.utilities.static("bg-right-top", ()=>[
            o("background-position", "right top")
        ]), e.utilities.static("bg-left-bottom", ()=>[
            o("background-position", "left bottom")
        ]), e.utilities.static("bg-right-bottom", ()=>[
            o("background-position", "right bottom")
        ]), e.utilities.static("object-left-top", ()=>[
            o("object-position", "left top")
        ]), e.utilities.static("object-right-top", ()=>[
            o("object-position", "right top")
        ]), e.utilities.static("object-left-bottom", ()=>[
            o("object-position", "left bottom")
        ]), e.utilities.static("object-right-bottom", ()=>[
            o("object-position", "right bottom")
        ]), e.utilities.functional("max-w-screen", (r)=>{
        if (!r.value || r.value.kind === "arbitrary") return;
        let i = e.theme.resolve(r.value.value, [
            "--breakpoint"
        ]);
        if (i) return [
            o("max-width", i)
        ];
    }), e.utilities.static("overflow-ellipsis", ()=>[
            o("text-overflow", "ellipsis")
        ]), e.utilities.static("decoration-slice", ()=>[
            o("-webkit-box-decoration-break", "slice"),
            o("box-decoration-break", "slice")
        ]), e.utilities.static("decoration-clone", ()=>[
            o("-webkit-box-decoration-break", "clone"),
            o("box-decoration-break", "clone")
        ]), e.utilities.functional("flex-shrink", (r)=>{
        if (!r.modifier) {
            if (!r.value) return [
                o("flex-shrink", "1")
            ];
            if (r.value.kind === "arbitrary") return [
                o("flex-shrink", r.value.value)
            ];
            if (T(r.value.value)) return [
                o("flex-shrink", r.value.value)
            ];
        }
    }), e.utilities.functional("flex-grow", (r)=>{
        if (!r.modifier) {
            if (!r.value) return [
                o("flex-grow", "1")
            ];
            if (r.value.kind === "arbitrary") return [
                o("flex-grow", r.value.value)
            ];
            if (T(r.value.value)) return [
                o("flex-grow", r.value.value)
            ];
        }
    }), e.utilities.static("order-none", ()=>[
            o("order", "0")
        ]);
}
function mi(e, r) {
    var _r_variants_get;
    var _r_variants_get_order;
    let i = e.theme.screens || {}, t = (_r_variants_get_order = (_r_variants_get = r.variants.get("min")) === null || _r_variants_get === void 0 ? void 0 : _r_variants_get.order) !== null && _r_variants_get_order !== void 0 ? _r_variants_get_order : 0, n = [];
    for (let [a, p] of Object.entries(i)){
        let d = function(w) {
            r.variants.static(a, (v)=>{
                v.nodes = [
                    F("@media", g, v.nodes)
                ];
            }, {
                order: w
            });
        };
        var s = d;
        let u = r.variants.get(a), c = r.theme.resolveValue(a, [
            "--breakpoint"
        ]);
        if (u && c && !r.theme.hasDefault("--breakpoint-".concat(a))) continue;
        let m = !0;
        typeof p == "string" && (m = !1);
        let g = io(p);
        m ? n.push(d) : d(t);
    }
    if (n.length !== 0) {
        for (let [, a] of r.variants.variants)a.order > t && (a.order += n.length);
        r.variants.compareFns = new Map(Array.from(r.variants.compareFns).map((param)=>{
            let [a, p] = param;
            return a > t && (a += n.length), [
                a,
                p
            ];
        }));
        for (let [a, p] of n.entries())p(t + a + 1);
    }
}
function io(e) {
    return (Array.isArray(e) ? e : [
        e
    ]).map((i)=>typeof i == "string" ? {
            min: i
        } : i && typeof i == "object" ? i : null).map((i)=>{
        if (i === null) return null;
        if ("raw" in i) return i.raw;
        let t = "";
        return i.max !== void 0 && (t += "".concat(i.max, " >= ")), t += "width", i.min !== void 0 && (t += " >= ".concat(i.min)), "(".concat(t, ")");
    }).filter(Boolean).join(", ");
}
function gi(e, r) {
    let i = e.theme.aria || {}, t = e.theme.supports || {}, n = e.theme.data || {};
    if (Object.keys(i).length > 0) {
        let s = r.variants.get("aria"), a = s === null || s === void 0 ? void 0 : s.applyFn, p = s === null || s === void 0 ? void 0 : s.compounds;
        r.variants.functional("aria", (u, c)=>{
            let m = c.value;
            return m && m.kind === "named" && m.value in i ? a === null || a === void 0 ? void 0 : a(u, {
                ...c,
                value: {
                    kind: "arbitrary",
                    value: i[m.value]
                }
            }) : a === null || a === void 0 ? void 0 : a(u, c);
        }, {
            compounds: p
        });
    }
    if (Object.keys(t).length > 0) {
        let s = r.variants.get("supports"), a = s === null || s === void 0 ? void 0 : s.applyFn, p = s === null || s === void 0 ? void 0 : s.compounds;
        r.variants.functional("supports", (u, c)=>{
            let m = c.value;
            return m && m.kind === "named" && m.value in t ? a === null || a === void 0 ? void 0 : a(u, {
                ...c,
                value: {
                    kind: "arbitrary",
                    value: t[m.value]
                }
            }) : a === null || a === void 0 ? void 0 : a(u, c);
        }, {
            compounds: p
        });
    }
    if (Object.keys(n).length > 0) {
        let s = r.variants.get("data"), a = s === null || s === void 0 ? void 0 : s.applyFn, p = s === null || s === void 0 ? void 0 : s.compounds;
        r.variants.functional("data", (u, c)=>{
            let m = c.value;
            return m && m.kind === "named" && m.value in n ? a === null || a === void 0 ? void 0 : a(u, {
                ...c,
                value: {
                    kind: "arbitrary",
                    value: n[m.value]
                }
            }) : a === null || a === void 0 ? void 0 : a(u, c);
        }, {
            compounds: p
        });
    }
}
var no = /^[a-z]+$/;
async function vi(param) {
    let { designSystem: e, base: r, ast: i, loadModule: t, sources: n } = param;
    let s = 0, a = [], p = [];
    L(i, (g, param)=>{
        let { parent: d, replaceWith: w, context: v } = param;
        if (g.kind === "at-rule") {
            if (g.name === "@plugin") {
                if (d !== null) throw new Error("`@plugin` cannot be nested.");
                let k1 = g.params.slice(1, -1);
                if (k1.length === 0) throw new Error("`@plugin` must have a path.");
                let x = {};
                var _g_nodes;
                for (let S of (_g_nodes = g.nodes) !== null && _g_nodes !== void 0 ? _g_nodes : []){
                    if (S.kind !== "declaration") throw new Error("Unexpected `@plugin` option:\n\n".concat(ne([
                        S
                    ]), "\n\n`@plugin` options must be a flat list of declarations."));
                    if (S.value === void 0) continue;
                    let C = S.value, b = U(C, ",").map((_)=>{
                        if (_ = _.trim(), _ === "null") return null;
                        if (_ === "true") return !0;
                        if (_ === "false") return !1;
                        if (Number.isNaN(Number(_))) {
                            if (_[0] === '"' && _[_.length - 1] === '"' || _[0] === "'" && _[_.length - 1] === "'") return _.slice(1, -1);
                            if (_[0] === "{" && _[_.length - 1] === "}") throw new Error("Unexpected `@plugin` option: Value of declaration `".concat(ne([
                                S
                            ]).trim(), "` is not supported.\n\nUsing an object as a plugin option is currently only supported in JavaScript configuration files."));
                        } else return Number(_);
                        return _;
                    });
                    x[S.property] = b.length === 1 ? b[0] : b;
                }
                a.push([
                    {
                        id: k1,
                        base: v.base,
                        reference: !!v.reference,
                        src: g.src
                    },
                    Object.keys(x).length > 0 ? x : null
                ]), w([]), s |= 4;
                return;
            }
            if (g.name === "@config") {
                if (g.nodes.length > 0) throw new Error("`@config` cannot have a body.");
                if (d !== null) throw new Error("`@config` cannot be nested.");
                p.push({
                    id: g.params.slice(1, -1),
                    base: v.base,
                    reference: !!v.reference,
                    src: g.src
                }), w([]), s |= 4;
                return;
            }
        }
    }), di(e);
    let u = e.resolveThemeValue;
    if (e.resolveThemeValue = function(d, w) {
        return d.startsWith("--") ? u(d, w) : (s |= hi({
            designSystem: e,
            base: r,
            ast: i,
            sources: n,
            configs: [],
            pluginDetails: []
        }), e.resolveThemeValue(d, w));
    }, !a.length && !p.length) return 0;
    let [c, m] = await Promise.all([
        Promise.all(p.map(async (param)=>{
            let { id: g, base: d, reference: w, src: v } = param;
            let k1 = await t(g, d, "config");
            return {
                path: g,
                base: k1.base,
                config: k1.module,
                reference: w,
                src: v
            };
        })),
        Promise.all(a.map(async (param)=>{
            let [{ id: g, base: d, reference: w, src: v }, k1] = param;
            let x = await t(g, d, "plugin");
            return {
                path: g,
                base: x.base,
                plugin: x.module,
                options: k1,
                reference: w,
                src: v
            };
        }))
    ]);
    return s |= hi({
        designSystem: e,
        base: r,
        ast: i,
        sources: n,
        configs: c,
        pluginDetails: m
    }), s;
}
function hi(param) {
    let { designSystem: e, base: r, ast: i, sources: t, configs: n, pluginDetails: s } = param;
    let a = 0, u = [
        ...s.map((k1)=>{
            if (!k1.options) return {
                config: {
                    plugins: [
                        k1.plugin
                    ]
                },
                base: k1.base,
                reference: k1.reference,
                src: k1.src
            };
            if ("__isOptionsFunction" in k1.plugin) return {
                config: {
                    plugins: [
                        k1.plugin(k1.options)
                    ]
                },
                base: k1.base,
                reference: k1.reference,
                src: k1.src
            };
            throw new Error('The plugin "'.concat(k1.path, '" does not accept options'));
        }),
        ...n
    ], { resolvedConfig: c } = Mt(e, [
        {
            config: ci(e.theme),
            base: r,
            reference: !0,
            src: void 0
        },
        ...u,
        {
            config: {
                plugins: [
                    pi
                ]
            },
            base: r,
            reference: !0,
            src: void 0
        }
    ]), { resolvedConfig: m, replacedThemeKeys: g } = Mt(e, u), d = {
        designSystem: e,
        ast: i,
        resolvedConfig: c,
        featuresRef: {
            set current (k){
                a |= k;
            }
        }
    }, w = zt({
        ...d,
        referenceMode: !1,
        src: void 0
    }), v = e.resolveThemeValue;
    e.resolveThemeValue = function(x, S) {
        if (x[0] === "-" && x[1] === "-") return v(x, S);
        let C = w.theme(x, void 0);
        if (Array.isArray(C) && C.length === 2) return C[0];
        if (Array.isArray(C)) return C.join(", ");
        if (typeof C == "string") return C;
    };
    for (let { handler: k1, reference: x, src: S } of c.plugins){
        let C = zt({
            ...d,
            referenceMode: x !== null && x !== void 0 ? x : !1,
            src: S
        });
        k1(C);
    }
    if (Fr(e, m, g), li(e, m, g), gi(m, e), mi(m, e), fi(m, e), !e.theme.prefix && c.prefix) {
        if (c.prefix.endsWith("-") && (c.prefix = c.prefix.slice(0, -1), console.warn('The prefix "'.concat(c.prefix, '" is invalid. Prefixes must be lowercase ASCII letters (a-z) only and is written as a variant before all utilities. We have fixed up the prefix for you. Remove the trailing `-` to silence this warning.'))), !no.test(c.prefix)) throw new Error('The prefix "'.concat(c.prefix, '" is invalid. Prefixes must be lowercase ASCII letters (a-z) only.'));
        e.theme.prefix = c.prefix;
    }
    if (!e.important && c.important === !0 && (e.important = !0), typeof c.important == "string") {
        let k1 = c.important;
        L(i, (x, param)=>{
            let { replaceWith: S, parent: C } = param;
            if (x.kind === "at-rule" && !(x.name !== "@tailwind" || x.params !== "utilities")) return (C === null || C === void 0 ? void 0 : C.kind) === "rule" && C.selector === k1 ? 2 : (S(B(k1, [
                x
            ])), 2);
        });
    }
    for (let k1 of c.blocklist)e.invalidCandidates.add(k1);
    for (let k1 of c.content.files){
        if ("raw" in k1) throw new Error("Error in the config file/plugin/preset. The `content` key contains a `raw` entry:\n\n".concat(JSON.stringify(k1, null, 2), "\n\nThis feature is not currently supported."));
        let x = !1;
        k1.pattern[0] == "!" && (x = !0, k1.pattern = k1.pattern.slice(1)), t.push({
            ...k1,
            negated: x
        });
    }
    return a;
}
function wi(e) {
    let r = [
        0
    ];
    for(let n = 0; n < e.length; n++)e.charCodeAt(n) === 10 && r.push(n + 1);
    function i(n) {
        let s = 0, a = r.length;
        for(; a > 0;){
            let u = (a | 0) >> 1, c = s + u;
            r[c] <= n ? (s = c + 1, a = a - u - 1) : a = u;
        }
        s -= 1;
        let p = n - r[s];
        return {
            line: s + 1,
            column: p
        };
    }
    function t(param) {
        let { line: n, column: s } = param;
        n -= 1, n = Math.min(Math.max(n, 0), r.length - 1);
        var _r_;
        let a = r[n], p = (_r_ = r[n + 1]) !== null && _r_ !== void 0 ? _r_ : a;
        return Math.min(Math.max(a + s, 0), p);
    }
    return {
        find: i,
        findOffset: t
    };
}
function ki(param) {
    let { ast: e } = param;
    let r = new W((n)=>wi(n.code)), i = new W((n)=>({
            url: n.file,
            content: n.code,
            ignore: !1
        })), t = {
        file: null,
        sources: [],
        mappings: []
    };
    L(e, (n)=>{
        if (!n.src || !n.dst) return;
        let s = i.get(n.src[0]);
        if (!s.content) return;
        let a = r.get(n.src[0]), p = r.get(n.dst[0]), u = s.content.slice(n.src[1], n.src[2]), c = 0;
        for (let d of u.split("\n")){
            if (d.trim() !== "") {
                let w = a.find(n.src[1] + c), v = p.find(n.dst[1]);
                t.mappings.push({
                    name: null,
                    originalPosition: {
                        source: s,
                        ...w
                    },
                    generatedPosition: v
                });
            }
            c += d.length, c += 1;
        }
        let m = a.find(n.src[2]), g = p.find(n.dst[2]);
        t.mappings.push({
            name: null,
            originalPosition: {
                source: s,
                ...m
            },
            generatedPosition: g
        });
    });
    for (let n of r.keys())t.sources.push(i.get(n));
    return t.mappings.sort((n, s)=>{
        var _n_originalPosition, _s_originalPosition, _n_originalPosition1, _s_originalPosition1;
        var _n_originalPosition_line, _s_originalPosition_line, _n_originalPosition_column, _s_originalPosition_column;
        return n.generatedPosition.line - s.generatedPosition.line || n.generatedPosition.column - s.generatedPosition.column || ((_n_originalPosition_line = (_n_originalPosition = n.originalPosition) === null || _n_originalPosition === void 0 ? void 0 : _n_originalPosition.line) !== null && _n_originalPosition_line !== void 0 ? _n_originalPosition_line : 0) - ((_s_originalPosition_line = (_s_originalPosition = s.originalPosition) === null || _s_originalPosition === void 0 ? void 0 : _s_originalPosition.line) !== null && _s_originalPosition_line !== void 0 ? _s_originalPosition_line : 0) || ((_n_originalPosition_column = (_n_originalPosition1 = n.originalPosition) === null || _n_originalPosition1 === void 0 ? void 0 : _n_originalPosition1.column) !== null && _n_originalPosition_column !== void 0 ? _n_originalPosition_column : 0) - ((_s_originalPosition_column = (_s_originalPosition1 = s.originalPosition) === null || _s_originalPosition1 === void 0 ? void 0 : _s_originalPosition1.column) !== null && _s_originalPosition_column !== void 0 ? _s_originalPosition_column : 0);
    }), t;
}
var yi = /^(-?\d+)\.\.(-?\d+)(?:\.\.(-?\d+))?$/;
function ht(e) {
    let r = e.indexOf("{");
    if (r === -1) return [
        e
    ];
    let i = [], t = e.slice(0, r), n = e.slice(r), s = 0, a = n.lastIndexOf("}");
    for(let g = 0; g < n.length; g++){
        let d = n[g];
        if (d === "{") s++;
        else if (d === "}" && (s--, s === 0)) {
            a = g;
            break;
        }
    }
    if (a === -1) throw new Error("The pattern `".concat(e, "` is not balanced."));
    let p = n.slice(1, a), u = n.slice(a + 1), c;
    oo(p) ? c = lo(p) : c = U(p, ","), c = c.flatMap((g)=>ht(g));
    let m = ht(u);
    for (let g of m)for (let d of c)i.push(t + d + g);
    return i;
}
function oo(e) {
    return yi.test(e);
}
function lo(e) {
    let r = e.match(yi);
    if (!r) return [
        e
    ];
    let [, i, t, n] = r, s = n ? parseInt(n, 10) : void 0, a = [];
    if (/^-?\d+$/.test(i) && /^-?\d+$/.test(t)) {
        let p = parseInt(i, 10), u = parseInt(t, 10);
        if (s === void 0 && (s = p <= u ? 1 : -1), s === 0) throw new Error("Step cannot be zero in sequence expansion.");
        let c = p < u;
        c && s < 0 && (s = -s), !c && s > 0 && (s = -s);
        for(let m = p; c ? m <= u : m >= u; m += s)a.push(m.toString());
    }
    return a;
}
function bi(e, r) {
    let i = new Set, t = new Set, n = [];
    function s(a) {
        let p = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
        if (e.has(a) && !i.has(a)) {
            var _r_onCircularDependency;
            t.has(a) && ((_r_onCircularDependency = r.onCircularDependency) === null || _r_onCircularDependency === void 0 ? void 0 : _r_onCircularDependency.call(r, p, a)), t.add(a);
            var _e_get;
            for (let u of (_e_get = e.get(a)) !== null && _e_get !== void 0 ? _e_get : [])p.push(a), s(u, p), p.pop();
            i.add(a), t.delete(a), n.push(a);
        }
    }
    for (let a of e.keys())s(a);
    return n;
}
var ao = /^[a-z]+$/, tt = ((n)=>(n[n.None = 0] = "None", n[n.AtProperty = 1] = "AtProperty", n[n.ColorMix = 2] = "ColorMix", n[n.All = 3] = "All", n))(tt || {});
function so() {
    throw new Error("No `loadModule` function provided to `compile`");
}
function uo() {
    throw new Error("No `loadStylesheet` function provided to `compile`");
}
function co(e) {
    let r = 0, i = null;
    for (let t of U(e, " "))t === "reference" ? r |= 2 : t === "inline" ? r |= 1 : t === "default" ? r |= 4 : t === "static" ? r |= 8 : t.startsWith("prefix(") && t.endsWith(")") && (i = t.slice(7, -1));
    return [
        r,
        i
    ];
}
var Ae = ((u)=>(u[u.None = 0] = "None", u[u.AtApply = 1] = "AtApply", u[u.AtImport = 2] = "AtImport", u[u.JsPluginCompat = 4] = "JsPluginCompat", u[u.ThemeFunction = 8] = "ThemeFunction", u[u.Utilities = 16] = "Utilities", u[u.Variants = 32] = "Variants", u[u.AtTheme = 64] = "AtTheme", u))(Ae || {});
async function xi(e) {
    let { base: r = "", from: i, loadModule: t = so, loadStylesheet: n = uo } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var _u_get;
    let s = 0;
    e = [
        se({
            base: r
        }, e)
    ], s |= await jt(e, r, n, 0, i !== void 0);
    let a = null, p = new Je, u = new Map, c = new Map, m = [], g = null, d = null, w = [], v = [], k1 = [], x = [], S = null;
    L(e, (b, param)=>{
        let { parent: _, replaceWith: R, context: D } = param;
        if (b.kind === "at-rule") {
            if (b.name === "@tailwind" && (b.params === "utilities" || b.params.startsWith("utilities"))) {
                if (d !== null) {
                    R([]);
                    return;
                }
                if (D.reference) {
                    R([]);
                    return;
                }
                let K = U(b.params, " ");
                for (let H of K)if (H.startsWith("source(")) {
                    let O = H.slice(7, -1);
                    if (O === "none") {
                        S = O;
                        continue;
                    }
                    if (O[0] === '"' && O[O.length - 1] !== '"' || O[0] === "'" && O[O.length - 1] !== "'" || O[0] !== "'" && O[0] !== '"') throw new Error("`source(\u2026)` paths must be quoted.");
                    var _D_sourceBase;
                    S = {
                        base: (_D_sourceBase = D.sourceBase) !== null && _D_sourceBase !== void 0 ? _D_sourceBase : D.base,
                        pattern: O.slice(1, -1)
                    };
                }
                d = b, s |= 16;
            }
            if (b.name === "@utility") {
                if (_ !== null) throw new Error("`@utility` cannot be nested.");
                if (b.nodes.length === 0) throw new Error("`@utility ".concat(b.params, "` is empty. Utilities should include at least one property."));
                let K = Er(b);
                if (K === null) {
                    if (!b.params.endsWith("-*")) {
                        if (b.params.endsWith("*")) throw new Error("`@utility ".concat(b.params, "` defines an invalid utility name. A functional utility must end in `-*`."));
                        if (b.params.includes("*")) throw new Error("`@utility ".concat(b.params, "` defines an invalid utility name. The dynamic portion marked by `-*` must appear once at the end."));
                    }
                    throw new Error("`@utility ".concat(b.params, "` defines an invalid utility name. Utilities should be alphanumeric and start with a lowercase letter."));
                }
                m.push(K);
            }
            if (b.name === "@source") {
                if (b.nodes.length > 0) throw new Error("`@source` cannot have a body.");
                if (_ !== null) throw new Error("`@source` cannot be nested.");
                let K = !1, H = !1, O = b.params;
                if (O[0] === "n" && O.startsWith("not ") && (K = !0, O = O.slice(4)), O[0] === "i" && O.startsWith("inline(") && (H = !0, O = O.slice(7, -1)), O[0] === '"' && O[O.length - 1] !== '"' || O[0] === "'" && O[O.length - 1] !== "'" || O[0] !== "'" && O[0] !== '"') throw new Error("`@source` paths must be quoted.");
                let I = O.slice(1, -1);
                if (H) {
                    let q = K ? x : k1, M = U(I, " ");
                    for (let ie of M)for (let l of ht(ie))q.push(l);
                } else v.push({
                    base: D.base,
                    pattern: I,
                    negated: K
                });
                R([]);
                return;
            }
            if (b.name === "@variant" && (_ === null ? b.nodes.length === 0 ? b.name = "@custom-variant" : (L(b.nodes, (K)=>{
                if (K.kind === "at-rule" && K.name === "@slot") return b.name = "@custom-variant", 2;
            }), b.name === "@variant" && w.push(b)) : w.push(b)), b.name === "@custom-variant") {
                if (_ !== null) throw new Error("`@custom-variant` cannot be nested.");
                R([]);
                let [K, H] = U(b.params, " ");
                if (!ut.test(K)) throw new Error("`@custom-variant ".concat(K, "` defines an invalid variant name. Variants should only contain alphanumeric, dashes, or underscore characters and start with a lowercase letter or number."));
                if (b.nodes.length > 0 && H) throw new Error("`@custom-variant ".concat(K, "` cannot have both a selector and a body."));
                if (b.nodes.length === 0) {
                    if (!H) throw new Error("`@custom-variant ".concat(K, "` has no selector or body."));
                    let O = U(H.slice(1, -1), ",");
                    if (O.length === 0 || O.some((M)=>M.trim() === "")) throw new Error("`@custom-variant ".concat(K, " (").concat(O.join(","), ")` selector is invalid."));
                    let I = [], q = [];
                    for (let M of O)M = M.trim(), M[0] === "@" ? I.push(M) : q.push(M);
                    u.set(K, (M)=>{
                        M.variants.static(K, (ie)=>{
                            let l = [];
                            q.length > 0 && l.push(B(q.join(", "), ie.nodes));
                            for (let f of I)l.push(Y(f, ie.nodes));
                            ie.nodes = l;
                        }, {
                            compounds: Ce([
                                ...q,
                                ...I
                            ])
                        });
                    }), c.set(K, new Set);
                    return;
                } else {
                    let O = new Set;
                    L(b.nodes, (I)=>{
                        I.kind === "at-rule" && I.name === "@variant" && O.add(I.params);
                    }), u.set(K, (I)=>{
                        I.variants.fromAst(K, b.nodes, I);
                    }), c.set(K, O);
                    return;
                }
            }
            if (b.name === "@media") {
                let K = U(b.params, " "), H = [];
                for (let O of K)if (O.startsWith("source(")) {
                    let I = O.slice(7, -1);
                    L(b.nodes, (q, param)=>{
                        let { replaceWith: M } = param;
                        if (q.kind === "at-rule" && q.name === "@tailwind" && q.params === "utilities") return q.params += " source(".concat(I, ")"), M([
                            se({
                                sourceBase: D.base
                            }, [
                                q
                            ])
                        ]), 2;
                    });
                } else if (O.startsWith("theme(")) {
                    let I = O.slice(6, -1), q = I.includes("reference");
                    L(b.nodes, (M)=>{
                        if (M.kind !== "at-rule") {
                            if (q) throw new Error('Files imported with `@import "\u2026" theme(reference)` must only contain `@theme` blocks.\nUse `@reference "\u2026";` instead.');
                            return 0;
                        }
                        if (M.name === "@theme") return M.params += " " + I, 1;
                    });
                } else if (O.startsWith("prefix(")) {
                    let I = O.slice(7, -1);
                    L(b.nodes, (q)=>{
                        if (q.kind === "at-rule" && q.name === "@theme") return q.params += " prefix(".concat(I, ")"), 1;
                    });
                } else O === "important" ? a = !0 : O === "reference" ? b.nodes = [
                    se({
                        reference: !0
                    }, b.nodes)
                ] : H.push(O);
                H.length > 0 ? b.params = H.join(" ") : K.length > 0 && R(b.nodes);
            }
            if (b.name === "@theme") {
                let [K, H] = co(b.params);
                if (s |= 64, D.reference && (K |= 2), H) {
                    if (!ao.test(H)) throw new Error('The prefix "'.concat(H, '" is invalid. Prefixes must be lowercase ASCII letters (a-z) only.'));
                    p.prefix = H;
                }
                return L(b.nodes, (O)=>{
                    if (O.kind === "at-rule" && O.name === "@keyframes") return p.addKeyframes(O), 1;
                    if (O.kind === "comment") return;
                    if (O.kind === "declaration" && O.property.startsWith("--")) {
                        var _O_value;
                        p.add(we(O.property), (_O_value = O.value) !== null && _O_value !== void 0 ? _O_value : "", K, O.src);
                        return;
                    }
                    let I = ne([
                        F(b.name, b.params, [
                            O
                        ])
                    ]).split("\n").map((q, M, ie)=>"".concat(M === 0 || M >= ie.length - 2 ? " " : ">", " ").concat(q)).join("\n");
                    throw new Error("`@theme` blocks must only contain custom properties or `@keyframes`.\n\n".concat(I));
                }), g ? R([]) : (g = B(":root, :host", []), g.src = b.src, R([
                    g
                ])), 1;
            }
        }
    });
    let C = Ur(p);
    if (a && (C.important = a), x.length > 0) for (let b of x)C.invalidCandidates.add(b);
    s |= await vi({
        designSystem: C,
        base: r,
        ast: e,
        loadModule: t,
        sources: v
    });
    for (let b of u.keys())C.variants.static(b, ()=>{});
    for (let b of bi(c, {
        onCircularDependency (_, R) {
            let D = ne(_.map((K, H)=>{
                var __;
                return F("@custom-variant", K, [
                    F("@variant", (__ = _[H + 1]) !== null && __ !== void 0 ? __ : R, [])
                ]);
            })).replaceAll(";", " { \u2026 }").replace("@custom-variant ".concat(R, " {"), "@custom-variant ".concat(R, " { /* ← */"));
            throw new Error("Circular dependency detected in custom variants:\n\n".concat(D));
        }
    }))(_u_get = u.get(b)) === null || _u_get === void 0 ? void 0 : _u_get(C);
    for (let b of m)b(C);
    if (g) {
        let b = [];
        for (let [R, D] of C.theme.entries()){
            if (D.options & 2) continue;
            let K = o(de(R), D.value);
            K.src = D.src, b.push(K);
        }
        let _ = C.theme.getKeyframes();
        for (let R of _)e.push(se({
            theme: !0
        }, [
            z([
                R
            ])
        ]));
        g.nodes = [
            se({
                theme: !0
            }, b)
        ];
    }
    if (s |= Lt(e, C), s |= Se(e, C), s |= Ie(e, C), d) {
        let b = d;
        b.kind = "context", b.context = {};
    }
    return L(e, (b, param)=>{
        let { replaceWith: _ } = param;
        if (b.kind === "at-rule") return b.name === "@utility" && _([]), 1;
    }), {
        designSystem: C,
        ast: e,
        sources: v,
        root: S,
        utilitiesNode: d,
        features: s,
        inlineCandidates: k1
    };
}
async function Ai(e) {
    let r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    let { designSystem: i, ast: t, sources: n, root: s, utilitiesNode: a, features: p, inlineCandidates: u } = await xi(e, r);
    t.unshift(Ze("! tailwindcss v".concat(Wt, " | MIT License | https://tailwindcss.com ")));
    function c(v) {
        i.invalidCandidates.add(v);
    }
    let m = new Set, g = null, d = 0, w = !1;
    for (let v of u)i.invalidCandidates.has(v) || (m.add(v), w = !0);
    return {
        sources: n,
        root: s,
        features: p,
        build (v) {
            if (p === 0) return e;
            if (!a) return g !== null && g !== void 0 ? g : g = ye(t, i, r.polyfills), g;
            let k1 = w, x = !1;
            w = !1;
            let S = m.size;
            for (let b of v)if (!i.invalidCandidates.has(b)) if (b[0] === "-" && b[1] === "-") {
                let _ = i.theme.markUsedVariable(b);
                k1 || (k1 = _), x || (x = _);
            } else m.add(b), k1 || (k1 = m.size !== S);
            if (!k1) return g !== null && g !== void 0 ? g : g = ye(t, i, r.polyfills), g;
            let C = ge(m, i, {
                onInvalidCandidate: c
            }).astNodes;
            return r.from && L(C, (b)=>{
                var _b;
                var _src;
                (_src = (_b = b).src) !== null && _src !== void 0 ? _src : _b.src = a.src;
            }), !x && d === C.length ? (g !== null && g !== void 0 ? g : g = ye(t, i, r.polyfills), g) : (d = C.length, a.nodes = C, g = ye(t, i, r.polyfills), g);
        }
    };
}
async function fo(e) {
    let r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    let i = ve(e, {
        from: r.from
    }), t = await Ai(i, r), n = i, s = e;
    return {
        ...t,
        build (a) {
            let p = t.build(a);
            return p === n || (s = ne(p, !!r.from), n = p), s;
        },
        buildSourceMap () {
            return ki({
                ast: n
            });
        }
    };
}
async function po(e) {
    let r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    return (await xi(ve(e), r)).designSystem;
}
function We() {
    throw new Error("It looks like you're trying to use `tailwindcss` directly as a PostCSS plugin. The PostCSS plugin has moved to a separate package, so to continue using Tailwind CSS with PostCSS you'll need to install `@tailwindcss/postcss` and update your PostCSS configuration.");
}
for(let e in vt)e !== "default" && (We[e] = vt[e]);
module.exports = We;
function r(r) {
    return this.prefix ? "--".concat(r.slice(3 + this.prefix.length)) : r;
}
function e(r, i) {
    for (let t of i){
        let n = r !== null ? "".concat(t, "-").concat(r) : t;
        if (!this.values.has(n)) if (r !== null && r.includes(".")) {
            if (n = "".concat(t, "-").concat(r.replaceAll(".", "_")), !this.values.has(n)) continue;
        } else continue;
        if (!Jt(n, t)) return n;
    }
    return null;
}
function t(r) {
    let i = this.values.get(r);
    if (!i) return null;
    let t = null;
    return i.options & 2 && (t = i.value), "var(".concat(de(this.prefixKey(r))).concat(t ? ", ".concat(t) : "", ")");
}
}),
"[project]/Documents/vsc/HTV/frontend/node_modules/@swc/helpers/esm/_class_private_method_get.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "_",
    ()=>_class_private_method_get
]);
function _class_private_method_get(receiver, privateSet, fn) {
    if (!privateSet.has(receiver)) throw new TypeError("attempted to get private field on non-instance");
    return fn;
}
;
}),
"[project]/Documents/vsc/HTV/frontend/node_modules/@swc/helpers/esm/_check_private_redeclaration.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "_",
    ()=>_check_private_redeclaration
]);
function _check_private_redeclaration(obj, privateCollection) {
    if (privateCollection.has(obj)) {
        throw new TypeError("Cannot initialize the same private elements twice on an object");
    }
}
;
}),
"[project]/Documents/vsc/HTV/frontend/node_modules/@swc/helpers/esm/_class_private_method_init.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "_",
    ()=>_class_private_method_init
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_check_private_redeclaration$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/Documents/vsc/HTV/frontend/node_modules/@swc/helpers/esm/_check_private_redeclaration.js [app-client] (ecmascript)");
;
function _class_private_method_init(obj, privateSet) {
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_check_private_redeclaration$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(obj, privateSet);
    privateSet.add(obj);
}
;
}),
"[project]/Documents/vsc/HTV/frontend/node_modules/@swc/helpers/esm/_define_property.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "_",
    ()=>_define_property
]);
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else obj[key] = value;
    return obj;
}
;
}),
"[project]/Documents/vsc/HTV/frontend/node_modules/@swc/helpers/esm/_tagged_template_literal.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "_",
    ()=>_tagged_template_literal
]);
function _tagged_template_literal(strings, raw) {
    if (!raw) raw = strings.slice(0);
    return Object.freeze(Object.defineProperties(strings, {
        raw: {
            value: Object.freeze(raw)
        }
    }));
}
;
}),
"[project]/Documents/vsc/HTV/frontend/node_modules/tailwindcss/dist/chunk-HTB5LLOP.mjs [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "a",
    ()=>l
]);
var l = {
    inherit: "inherit",
    current: "currentcolor",
    transparent: "transparent",
    black: "#000",
    white: "#fff",
    slate: {
        50: "oklch(98.4% 0.003 247.858)",
        100: "oklch(96.8% 0.007 247.896)",
        200: "oklch(92.9% 0.013 255.508)",
        300: "oklch(86.9% 0.022 252.894)",
        400: "oklch(70.4% 0.04 256.788)",
        500: "oklch(55.4% 0.046 257.417)",
        600: "oklch(44.6% 0.043 257.281)",
        700: "oklch(37.2% 0.044 257.287)",
        800: "oklch(27.9% 0.041 260.031)",
        900: "oklch(20.8% 0.042 265.755)",
        950: "oklch(12.9% 0.042 264.695)"
    },
    gray: {
        50: "oklch(98.5% 0.002 247.839)",
        100: "oklch(96.7% 0.003 264.542)",
        200: "oklch(92.8% 0.006 264.531)",
        300: "oklch(87.2% 0.01 258.338)",
        400: "oklch(70.7% 0.022 261.325)",
        500: "oklch(55.1% 0.027 264.364)",
        600: "oklch(44.6% 0.03 256.802)",
        700: "oklch(37.3% 0.034 259.733)",
        800: "oklch(27.8% 0.033 256.848)",
        900: "oklch(21% 0.034 264.665)",
        950: "oklch(13% 0.028 261.692)"
    },
    zinc: {
        50: "oklch(98.5% 0 0)",
        100: "oklch(96.7% 0.001 286.375)",
        200: "oklch(92% 0.004 286.32)",
        300: "oklch(87.1% 0.006 286.286)",
        400: "oklch(70.5% 0.015 286.067)",
        500: "oklch(55.2% 0.016 285.938)",
        600: "oklch(44.2% 0.017 285.786)",
        700: "oklch(37% 0.013 285.805)",
        800: "oklch(27.4% 0.006 286.033)",
        900: "oklch(21% 0.006 285.885)",
        950: "oklch(14.1% 0.005 285.823)"
    },
    neutral: {
        50: "oklch(98.5% 0 0)",
        100: "oklch(97% 0 0)",
        200: "oklch(92.2% 0 0)",
        300: "oklch(87% 0 0)",
        400: "oklch(70.8% 0 0)",
        500: "oklch(55.6% 0 0)",
        600: "oklch(43.9% 0 0)",
        700: "oklch(37.1% 0 0)",
        800: "oklch(26.9% 0 0)",
        900: "oklch(20.5% 0 0)",
        950: "oklch(14.5% 0 0)"
    },
    stone: {
        50: "oklch(98.5% 0.001 106.423)",
        100: "oklch(97% 0.001 106.424)",
        200: "oklch(92.3% 0.003 48.717)",
        300: "oklch(86.9% 0.005 56.366)",
        400: "oklch(70.9% 0.01 56.259)",
        500: "oklch(55.3% 0.013 58.071)",
        600: "oklch(44.4% 0.011 73.639)",
        700: "oklch(37.4% 0.01 67.558)",
        800: "oklch(26.8% 0.007 34.298)",
        900: "oklch(21.6% 0.006 56.043)",
        950: "oklch(14.7% 0.004 49.25)"
    },
    red: {
        50: "oklch(97.1% 0.013 17.38)",
        100: "oklch(93.6% 0.032 17.717)",
        200: "oklch(88.5% 0.062 18.334)",
        300: "oklch(80.8% 0.114 19.571)",
        400: "oklch(70.4% 0.191 22.216)",
        500: "oklch(63.7% 0.237 25.331)",
        600: "oklch(57.7% 0.245 27.325)",
        700: "oklch(50.5% 0.213 27.518)",
        800: "oklch(44.4% 0.177 26.899)",
        900: "oklch(39.6% 0.141 25.723)",
        950: "oklch(25.8% 0.092 26.042)"
    },
    orange: {
        50: "oklch(98% 0.016 73.684)",
        100: "oklch(95.4% 0.038 75.164)",
        200: "oklch(90.1% 0.076 70.697)",
        300: "oklch(83.7% 0.128 66.29)",
        400: "oklch(75% 0.183 55.934)",
        500: "oklch(70.5% 0.213 47.604)",
        600: "oklch(64.6% 0.222 41.116)",
        700: "oklch(55.3% 0.195 38.402)",
        800: "oklch(47% 0.157 37.304)",
        900: "oklch(40.8% 0.123 38.172)",
        950: "oklch(26.6% 0.079 36.259)"
    },
    amber: {
        50: "oklch(98.7% 0.022 95.277)",
        100: "oklch(96.2% 0.059 95.617)",
        200: "oklch(92.4% 0.12 95.746)",
        300: "oklch(87.9% 0.169 91.605)",
        400: "oklch(82.8% 0.189 84.429)",
        500: "oklch(76.9% 0.188 70.08)",
        600: "oklch(66.6% 0.179 58.318)",
        700: "oklch(55.5% 0.163 48.998)",
        800: "oklch(47.3% 0.137 46.201)",
        900: "oklch(41.4% 0.112 45.904)",
        950: "oklch(27.9% 0.077 45.635)"
    },
    yellow: {
        50: "oklch(98.7% 0.026 102.212)",
        100: "oklch(97.3% 0.071 103.193)",
        200: "oklch(94.5% 0.129 101.54)",
        300: "oklch(90.5% 0.182 98.111)",
        400: "oklch(85.2% 0.199 91.936)",
        500: "oklch(79.5% 0.184 86.047)",
        600: "oklch(68.1% 0.162 75.834)",
        700: "oklch(55.4% 0.135 66.442)",
        800: "oklch(47.6% 0.114 61.907)",
        900: "oklch(42.1% 0.095 57.708)",
        950: "oklch(28.6% 0.066 53.813)"
    },
    lime: {
        50: "oklch(98.6% 0.031 120.757)",
        100: "oklch(96.7% 0.067 122.328)",
        200: "oklch(93.8% 0.127 124.321)",
        300: "oklch(89.7% 0.196 126.665)",
        400: "oklch(84.1% 0.238 128.85)",
        500: "oklch(76.8% 0.233 130.85)",
        600: "oklch(64.8% 0.2 131.684)",
        700: "oklch(53.2% 0.157 131.589)",
        800: "oklch(45.3% 0.124 130.933)",
        900: "oklch(40.5% 0.101 131.063)",
        950: "oklch(27.4% 0.072 132.109)"
    },
    green: {
        50: "oklch(98.2% 0.018 155.826)",
        100: "oklch(96.2% 0.044 156.743)",
        200: "oklch(92.5% 0.084 155.995)",
        300: "oklch(87.1% 0.15 154.449)",
        400: "oklch(79.2% 0.209 151.711)",
        500: "oklch(72.3% 0.219 149.579)",
        600: "oklch(62.7% 0.194 149.214)",
        700: "oklch(52.7% 0.154 150.069)",
        800: "oklch(44.8% 0.119 151.328)",
        900: "oklch(39.3% 0.095 152.535)",
        950: "oklch(26.6% 0.065 152.934)"
    },
    emerald: {
        50: "oklch(97.9% 0.021 166.113)",
        100: "oklch(95% 0.052 163.051)",
        200: "oklch(90.5% 0.093 164.15)",
        300: "oklch(84.5% 0.143 164.978)",
        400: "oklch(76.5% 0.177 163.223)",
        500: "oklch(69.6% 0.17 162.48)",
        600: "oklch(59.6% 0.145 163.225)",
        700: "oklch(50.8% 0.118 165.612)",
        800: "oklch(43.2% 0.095 166.913)",
        900: "oklch(37.8% 0.077 168.94)",
        950: "oklch(26.2% 0.051 172.552)"
    },
    teal: {
        50: "oklch(98.4% 0.014 180.72)",
        100: "oklch(95.3% 0.051 180.801)",
        200: "oklch(91% 0.096 180.426)",
        300: "oklch(85.5% 0.138 181.071)",
        400: "oklch(77.7% 0.152 181.912)",
        500: "oklch(70.4% 0.14 182.503)",
        600: "oklch(60% 0.118 184.704)",
        700: "oklch(51.1% 0.096 186.391)",
        800: "oklch(43.7% 0.078 188.216)",
        900: "oklch(38.6% 0.063 188.416)",
        950: "oklch(27.7% 0.046 192.524)"
    },
    cyan: {
        50: "oklch(98.4% 0.019 200.873)",
        100: "oklch(95.6% 0.045 203.388)",
        200: "oklch(91.7% 0.08 205.041)",
        300: "oklch(86.5% 0.127 207.078)",
        400: "oklch(78.9% 0.154 211.53)",
        500: "oklch(71.5% 0.143 215.221)",
        600: "oklch(60.9% 0.126 221.723)",
        700: "oklch(52% 0.105 223.128)",
        800: "oklch(45% 0.085 224.283)",
        900: "oklch(39.8% 0.07 227.392)",
        950: "oklch(30.2% 0.056 229.695)"
    },
    sky: {
        50: "oklch(97.7% 0.013 236.62)",
        100: "oklch(95.1% 0.026 236.824)",
        200: "oklch(90.1% 0.058 230.902)",
        300: "oklch(82.8% 0.111 230.318)",
        400: "oklch(74.6% 0.16 232.661)",
        500: "oklch(68.5% 0.169 237.323)",
        600: "oklch(58.8% 0.158 241.966)",
        700: "oklch(50% 0.134 242.749)",
        800: "oklch(44.3% 0.11 240.79)",
        900: "oklch(39.1% 0.09 240.876)",
        950: "oklch(29.3% 0.066 243.157)"
    },
    blue: {
        50: "oklch(97% 0.014 254.604)",
        100: "oklch(93.2% 0.032 255.585)",
        200: "oklch(88.2% 0.059 254.128)",
        300: "oklch(80.9% 0.105 251.813)",
        400: "oklch(70.7% 0.165 254.624)",
        500: "oklch(62.3% 0.214 259.815)",
        600: "oklch(54.6% 0.245 262.881)",
        700: "oklch(48.8% 0.243 264.376)",
        800: "oklch(42.4% 0.199 265.638)",
        900: "oklch(37.9% 0.146 265.522)",
        950: "oklch(28.2% 0.091 267.935)"
    },
    indigo: {
        50: "oklch(96.2% 0.018 272.314)",
        100: "oklch(93% 0.034 272.788)",
        200: "oklch(87% 0.065 274.039)",
        300: "oklch(78.5% 0.115 274.713)",
        400: "oklch(67.3% 0.182 276.935)",
        500: "oklch(58.5% 0.233 277.117)",
        600: "oklch(51.1% 0.262 276.966)",
        700: "oklch(45.7% 0.24 277.023)",
        800: "oklch(39.8% 0.195 277.366)",
        900: "oklch(35.9% 0.144 278.697)",
        950: "oklch(25.7% 0.09 281.288)"
    },
    violet: {
        50: "oklch(96.9% 0.016 293.756)",
        100: "oklch(94.3% 0.029 294.588)",
        200: "oklch(89.4% 0.057 293.283)",
        300: "oklch(81.1% 0.111 293.571)",
        400: "oklch(70.2% 0.183 293.541)",
        500: "oklch(60.6% 0.25 292.717)",
        600: "oklch(54.1% 0.281 293.009)",
        700: "oklch(49.1% 0.27 292.581)",
        800: "oklch(43.2% 0.232 292.759)",
        900: "oklch(38% 0.189 293.745)",
        950: "oklch(28.3% 0.141 291.089)"
    },
    purple: {
        50: "oklch(97.7% 0.014 308.299)",
        100: "oklch(94.6% 0.033 307.174)",
        200: "oklch(90.2% 0.063 306.703)",
        300: "oklch(82.7% 0.119 306.383)",
        400: "oklch(71.4% 0.203 305.504)",
        500: "oklch(62.7% 0.265 303.9)",
        600: "oklch(55.8% 0.288 302.321)",
        700: "oklch(49.6% 0.265 301.924)",
        800: "oklch(43.8% 0.218 303.724)",
        900: "oklch(38.1% 0.176 304.987)",
        950: "oklch(29.1% 0.149 302.717)"
    },
    fuchsia: {
        50: "oklch(97.7% 0.017 320.058)",
        100: "oklch(95.2% 0.037 318.852)",
        200: "oklch(90.3% 0.076 319.62)",
        300: "oklch(83.3% 0.145 321.434)",
        400: "oklch(74% 0.238 322.16)",
        500: "oklch(66.7% 0.295 322.15)",
        600: "oklch(59.1% 0.293 322.896)",
        700: "oklch(51.8% 0.253 323.949)",
        800: "oklch(45.2% 0.211 324.591)",
        900: "oklch(40.1% 0.17 325.612)",
        950: "oklch(29.3% 0.136 325.661)"
    },
    pink: {
        50: "oklch(97.1% 0.014 343.198)",
        100: "oklch(94.8% 0.028 342.258)",
        200: "oklch(89.9% 0.061 343.231)",
        300: "oklch(82.3% 0.12 346.018)",
        400: "oklch(71.8% 0.202 349.761)",
        500: "oklch(65.6% 0.241 354.308)",
        600: "oklch(59.2% 0.249 0.584)",
        700: "oklch(52.5% 0.223 3.958)",
        800: "oklch(45.9% 0.187 3.815)",
        900: "oklch(40.8% 0.153 2.432)",
        950: "oklch(28.4% 0.109 3.907)"
    },
    rose: {
        50: "oklch(96.9% 0.015 12.422)",
        100: "oklch(94.1% 0.03 12.58)",
        200: "oklch(89.2% 0.058 10.001)",
        300: "oklch(81% 0.117 11.638)",
        400: "oklch(71.2% 0.194 13.428)",
        500: "oklch(64.5% 0.246 16.439)",
        600: "oklch(58.6% 0.253 17.585)",
        700: "oklch(51.4% 0.222 16.935)",
        800: "oklch(45.5% 0.188 13.697)",
        900: "oklch(41% 0.159 10.272)",
        950: "oklch(27.1% 0.105 12.094)"
    }
};
;
}),
"[project]/Documents/vsc/HTV/frontend/node_modules/tailwindcss/dist/chunk-G32FJCSR.mjs [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "a",
    ()=>oe,
    "b",
    ()=>d,
    "c",
    ()=>me,
    "d",
    ()=>u,
    "e",
    ()=>pe,
    "f",
    ()=>ge,
    "g",
    ()=>ue,
    "h",
    ()=>be
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$HTB5LLOP$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/Documents/vsc/HTV/frontend/node_modules/tailwindcss/dist/chunk-HTB5LLOP.mjs [app-client] (ecmascript)");
;
var _ = new Set([
    "black",
    "silver",
    "gray",
    "white",
    "maroon",
    "red",
    "purple",
    "fuchsia",
    "green",
    "lime",
    "olive",
    "yellow",
    "navy",
    "blue",
    "teal",
    "aqua",
    "aliceblue",
    "antiquewhite",
    "aqua",
    "aquamarine",
    "azure",
    "beige",
    "bisque",
    "black",
    "blanchedalmond",
    "blue",
    "blueviolet",
    "brown",
    "burlywood",
    "cadetblue",
    "chartreuse",
    "chocolate",
    "coral",
    "cornflowerblue",
    "cornsilk",
    "crimson",
    "cyan",
    "darkblue",
    "darkcyan",
    "darkgoldenrod",
    "darkgray",
    "darkgreen",
    "darkgrey",
    "darkkhaki",
    "darkmagenta",
    "darkolivegreen",
    "darkorange",
    "darkorchid",
    "darkred",
    "darksalmon",
    "darkseagreen",
    "darkslateblue",
    "darkslategray",
    "darkslategrey",
    "darkturquoise",
    "darkviolet",
    "deeppink",
    "deepskyblue",
    "dimgray",
    "dimgrey",
    "dodgerblue",
    "firebrick",
    "floralwhite",
    "forestgreen",
    "fuchsia",
    "gainsboro",
    "ghostwhite",
    "gold",
    "goldenrod",
    "gray",
    "green",
    "greenyellow",
    "grey",
    "honeydew",
    "hotpink",
    "indianred",
    "indigo",
    "ivory",
    "khaki",
    "lavender",
    "lavenderblush",
    "lawngreen",
    "lemonchiffon",
    "lightblue",
    "lightcoral",
    "lightcyan",
    "lightgoldenrodyellow",
    "lightgray",
    "lightgreen",
    "lightgrey",
    "lightpink",
    "lightsalmon",
    "lightseagreen",
    "lightskyblue",
    "lightslategray",
    "lightslategrey",
    "lightsteelblue",
    "lightyellow",
    "lime",
    "limegreen",
    "linen",
    "magenta",
    "maroon",
    "mediumaquamarine",
    "mediumblue",
    "mediumorchid",
    "mediumpurple",
    "mediumseagreen",
    "mediumslateblue",
    "mediumspringgreen",
    "mediumturquoise",
    "mediumvioletred",
    "midnightblue",
    "mintcream",
    "mistyrose",
    "moccasin",
    "navajowhite",
    "navy",
    "oldlace",
    "olive",
    "olivedrab",
    "orange",
    "orangered",
    "orchid",
    "palegoldenrod",
    "palegreen",
    "paleturquoise",
    "palevioletred",
    "papayawhip",
    "peachpuff",
    "peru",
    "pink",
    "plum",
    "powderblue",
    "purple",
    "rebeccapurple",
    "red",
    "rosybrown",
    "royalblue",
    "saddlebrown",
    "salmon",
    "sandybrown",
    "seagreen",
    "seashell",
    "sienna",
    "silver",
    "skyblue",
    "slateblue",
    "slategray",
    "slategrey",
    "snow",
    "springgreen",
    "steelblue",
    "tan",
    "teal",
    "thistle",
    "tomato",
    "turquoise",
    "violet",
    "wheat",
    "white",
    "whitesmoke",
    "yellow",
    "yellowgreen",
    "transparent",
    "currentcolor",
    "canvas",
    "canvastext",
    "linktext",
    "visitedtext",
    "activetext",
    "buttonface",
    "buttontext",
    "buttonborder",
    "field",
    "fieldtext",
    "highlight",
    "highlighttext",
    "selecteditem",
    "selecteditemtext",
    "mark",
    "marktext",
    "graytext",
    "accentcolor",
    "accentcolortext"
]), U = /^(rgba?|hsla?|hwb|color|(ok)?(lab|lch)|light-dark|color-mix)\(/i;
function S(e) {
    return e.charCodeAt(0) === 35 || U.test(e) || _.has(e.toLowerCase());
}
var A = [
    "calc",
    "min",
    "max",
    "clamp",
    "mod",
    "rem",
    "sin",
    "cos",
    "tan",
    "asin",
    "acos",
    "atan",
    "atan2",
    "pow",
    "sqrt",
    "hypot",
    "log",
    "exp",
    "round"
];
function b(e) {
    return e.indexOf("(") !== -1 && A.some((t)=>e.includes("".concat(t, "(")));
}
function oe(e) {
    if (!A.some((n)=>e.includes(n))) return e;
    let t = "", r = [], s = null, m = null;
    for(let n = 0; n < e.length; n++){
        let a = e.charCodeAt(n);
        if (a >= 48 && a <= 57 || s !== null && (a === 37 || a >= 97 && a <= 122 || a >= 65 && a <= 90) ? s = n : (m = s, s = null), a === 40) {
            t += e[n];
            let i = n;
            for(let p = n - 1; p >= 0; p--){
                let c = e.charCodeAt(p);
                if (c >= 48 && c <= 57) i = p;
                else if (c >= 97 && c <= 122) i = p;
                else break;
            }
            let o = e.slice(i, n);
            if (A.includes(o)) {
                r.unshift(!0);
                continue;
            } else if (r[0] && o === "") {
                r.unshift(!0);
                continue;
            }
            r.unshift(!1);
            continue;
        } else if (a === 41) t += e[n], r.shift();
        else if (a === 44 && r[0]) {
            t += ", ";
            continue;
        } else {
            if (a === 32 && r[0] && t.charCodeAt(t.length - 1) === 32) continue;
            if ((a === 43 || a === 42 || a === 47 || a === 45) && r[0]) {
                let i = t.trimEnd(), o = i.charCodeAt(i.length - 1), p = i.charCodeAt(i.length - 2), c = e.charCodeAt(n + 1);
                if ((o === 101 || o === 69) && p >= 48 && p <= 57) {
                    t += e[n];
                    continue;
                } else if (o === 43 || o === 42 || o === 47 || o === 45) {
                    t += e[n];
                    continue;
                } else if (o === 40 || o === 44) {
                    t += e[n];
                    continue;
                } else e.charCodeAt(n - 1) === 32 ? t += "".concat(e[n], " ") : o >= 48 && o <= 57 || c >= 48 && c <= 57 || o === 41 || c === 40 || c === 43 || c === 42 || c === 47 || c === 45 || m !== null && m === n - 1 ? t += " ".concat(e[n], " ") : t += e[n];
            } else t += e[n];
        }
    }
    return t;
}
var E = new Uint8Array(256);
function d(e, t) {
    let r = 0, s = [], m = 0, n = e.length, a = t.charCodeAt(0);
    for(let i = 0; i < n; i++){
        let o = e.charCodeAt(i);
        if (r === 0 && o === a) {
            s.push(e.slice(m, i)), m = i + 1;
            continue;
        }
        switch(o){
            case 92:
                i += 1;
                break;
            case 39:
            case 34:
                for(; ++i < n;){
                    let p = e.charCodeAt(i);
                    if (p === 92) {
                        i += 1;
                        continue;
                    }
                    if (p === o) break;
                }
                break;
            case 40:
                E[r] = 41, r++;
                break;
            case 91:
                E[r] = 93, r++;
                break;
            case 123:
                E[r] = 125, r++;
                break;
            case 93:
            case 125:
            case 41:
                r > 0 && o === E[r - 1] && r--;
                break;
        }
    }
    return s.push(e.slice(m)), s;
}
var P = {
    color: S,
    length: y,
    percentage: C,
    ratio: G,
    number: v,
    integer: u,
    url: R,
    position: K,
    "bg-size": Y,
    "line-width": T,
    image: F,
    "family-name": M,
    "generic-name": H,
    "absolute-size": $,
    "relative-size": W,
    angle: X,
    vector: te
};
function me(e, t) {
    var _P_r;
    if (e.startsWith("var(")) return null;
    for (let r of t)if ((_P_r = P[r]) === null || _P_r === void 0 ? void 0 : _P_r.call(P, e)) return r;
    return null;
}
var z = /^url\(.*\)$/;
function R(e) {
    return z.test(e);
}
function T(e) {
    return d(e, " ").every((t)=>y(t) || v(t) || t === "thin" || t === "medium" || t === "thick");
}
var D = /^(?:element|image|cross-fade|image-set)\(/, I = /^(repeating-)?(conic|linear|radial)-gradient\(/;
function F(e) {
    let t = 0;
    for (let r of d(e, ","))if (!r.startsWith("var(")) {
        if (R(r)) {
            t += 1;
            continue;
        }
        if (I.test(r)) {
            t += 1;
            continue;
        }
        if (D.test(r)) {
            t += 1;
            continue;
        }
        return !1;
    }
    return t > 0;
}
function H(e) {
    return e === "serif" || e === "sans-serif" || e === "monospace" || e === "cursive" || e === "fantasy" || e === "system-ui" || e === "ui-serif" || e === "ui-sans-serif" || e === "ui-monospace" || e === "ui-rounded" || e === "math" || e === "emoji" || e === "fangsong";
}
function M(e) {
    let t = 0;
    for (let r of d(e, ",")){
        let s = r.charCodeAt(0);
        if (s >= 48 && s <= 57) return !1;
        r.startsWith("var(") || (t += 1);
    }
    return t > 0;
}
function $(e) {
    return e === "xx-small" || e === "x-small" || e === "small" || e === "medium" || e === "large" || e === "x-large" || e === "xx-large" || e === "xxx-large";
}
function W(e) {
    return e === "larger" || e === "smaller";
}
var x = /[+-]?\d*\.?\d+(?:[eE][+-]?\d+)?/, B = new RegExp("^".concat(x.source, "$"));
function v(e) {
    return B.test(e) || b(e);
}
var q = new RegExp("^".concat(x.source, "%$"));
function C(e) {
    return q.test(e) || b(e);
}
var V = new RegExp("^".concat(x.source, "s*/s*").concat(x.source, "$"));
function G(e) {
    return V.test(e) || b(e);
}
var Z = [
    "cm",
    "mm",
    "Q",
    "in",
    "pc",
    "pt",
    "px",
    "em",
    "ex",
    "ch",
    "rem",
    "lh",
    "rlh",
    "vw",
    "vh",
    "vmin",
    "vmax",
    "vb",
    "vi",
    "svw",
    "svh",
    "lvw",
    "lvh",
    "dvw",
    "dvh",
    "cqw",
    "cqh",
    "cqi",
    "cqb",
    "cqmin",
    "cqmax"
], j = new RegExp("^".concat(x.source, "(").concat(Z.join("|"), ")$"));
function y(e) {
    return j.test(e) || b(e);
}
function K(e) {
    let t = 0;
    for (let r of d(e, " ")){
        if (r === "center" || r === "top" || r === "right" || r === "bottom" || r === "left") {
            t += 1;
            continue;
        }
        if (!r.startsWith("var(")) {
            if (y(r) || C(r)) {
                t += 1;
                continue;
            }
            return !1;
        }
    }
    return t > 0;
}
function Y(e) {
    let t = 0;
    for (let r of d(e, ",")){
        if (r === "cover" || r === "contain") {
            t += 1;
            continue;
        }
        let s = d(r, " ");
        if (s.length !== 1 && s.length !== 2) return !1;
        if (s.every((m)=>m === "auto" || y(m) || C(m))) {
            t += 1;
            continue;
        }
    }
    return t > 0;
}
var Q = [
    "deg",
    "rad",
    "grad",
    "turn"
], J = new RegExp("^".concat(x.source, "(").concat(Q.join("|"), ")$"));
function X(e) {
    return J.test(e);
}
var ee = new RegExp("^".concat(x.source, " +").concat(x.source, " +").concat(x.source, "$"));
function te(e) {
    return ee.test(e);
}
function u(e) {
    let t = Number(e);
    return Number.isInteger(t) && t >= 0 && String(t) === String(e);
}
function pe(e) {
    let t = Number(e);
    return Number.isInteger(t) && t > 0 && String(t) === String(e);
}
function ge(e) {
    return N(e, .25);
}
function ue(e) {
    return N(e, .25);
}
function N(e, t) {
    let r = Number(e);
    return r >= 0 && r % t === 0 && String(r) === String(e);
}
function h(e) {
    return {
        __BARE_VALUE__: e
    };
}
var g = h((e)=>{
    if (u(e.value)) return e.value;
}), l = h((e)=>{
    if (u(e.value)) return "".concat(e.value, "%");
}), f = h((e)=>{
    if (u(e.value)) return "".concat(e.value, "px");
}), O = h((e)=>{
    if (u(e.value)) return "".concat(e.value, "ms");
}), w = h((e)=>{
    if (u(e.value)) return "".concat(e.value, "deg");
}), re = h((e)=>{
    if (e.fraction === null) return;
    let [t, r] = d(e.fraction, "/");
    if (!(!u(t) || !u(r))) return e.fraction;
}), L = h((e)=>{
    if (u(Number(e.value))) return "repeat(".concat(e.value, ", minmax(0, 1fr))");
}), be = {
    accentColor: (param)=>{
        let { theme: e } = param;
        return e("colors");
    },
    animation: {
        none: "none",
        spin: "spin 1s linear infinite",
        ping: "ping 1s cubic-bezier(0, 0, 0.2, 1) infinite",
        pulse: "pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite",
        bounce: "bounce 1s infinite"
    },
    aria: {
        busy: 'busy="true"',
        checked: 'checked="true"',
        disabled: 'disabled="true"',
        expanded: 'expanded="true"',
        hidden: 'hidden="true"',
        pressed: 'pressed="true"',
        readonly: 'readonly="true"',
        required: 'required="true"',
        selected: 'selected="true"'
    },
    aspectRatio: {
        auto: "auto",
        square: "1 / 1",
        video: "16 / 9",
        ...re
    },
    backdropBlur: (param)=>{
        let { theme: e } = param;
        return e("blur");
    },
    backdropBrightness: (param)=>{
        let { theme: e } = param;
        return {
            ...e("brightness"),
            ...l
        };
    },
    backdropContrast: (param)=>{
        let { theme: e } = param;
        return {
            ...e("contrast"),
            ...l
        };
    },
    backdropGrayscale: (param)=>{
        let { theme: e } = param;
        return {
            ...e("grayscale"),
            ...l
        };
    },
    backdropHueRotate: (param)=>{
        let { theme: e } = param;
        return {
            ...e("hueRotate"),
            ...w
        };
    },
    backdropInvert: (param)=>{
        let { theme: e } = param;
        return {
            ...e("invert"),
            ...l
        };
    },
    backdropOpacity: (param)=>{
        let { theme: e } = param;
        return {
            ...e("opacity"),
            ...l
        };
    },
    backdropSaturate: (param)=>{
        let { theme: e } = param;
        return {
            ...e("saturate"),
            ...l
        };
    },
    backdropSepia: (param)=>{
        let { theme: e } = param;
        return {
            ...e("sepia"),
            ...l
        };
    },
    backgroundColor: (param)=>{
        let { theme: e } = param;
        return e("colors");
    },
    backgroundImage: {
        none: "none",
        "gradient-to-t": "linear-gradient(to top, var(--tw-gradient-stops))",
        "gradient-to-tr": "linear-gradient(to top right, var(--tw-gradient-stops))",
        "gradient-to-r": "linear-gradient(to right, var(--tw-gradient-stops))",
        "gradient-to-br": "linear-gradient(to bottom right, var(--tw-gradient-stops))",
        "gradient-to-b": "linear-gradient(to bottom, var(--tw-gradient-stops))",
        "gradient-to-bl": "linear-gradient(to bottom left, var(--tw-gradient-stops))",
        "gradient-to-l": "linear-gradient(to left, var(--tw-gradient-stops))",
        "gradient-to-tl": "linear-gradient(to top left, var(--tw-gradient-stops))"
    },
    backgroundOpacity: (param)=>{
        let { theme: e } = param;
        return e("opacity");
    },
    backgroundPosition: {
        bottom: "bottom",
        center: "center",
        left: "left",
        "left-bottom": "left bottom",
        "left-top": "left top",
        right: "right",
        "right-bottom": "right bottom",
        "right-top": "right top",
        top: "top"
    },
    backgroundSize: {
        auto: "auto",
        cover: "cover",
        contain: "contain"
    },
    blur: {
        0: "0",
        none: "",
        sm: "4px",
        DEFAULT: "8px",
        md: "12px",
        lg: "16px",
        xl: "24px",
        "2xl": "40px",
        "3xl": "64px"
    },
    borderColor: (param)=>{
        let { theme: e } = param;
        return {
            DEFAULT: "currentcolor",
            ...e("colors")
        };
    },
    borderOpacity: (param)=>{
        let { theme: e } = param;
        return e("opacity");
    },
    borderRadius: {
        none: "0px",
        sm: "0.125rem",
        DEFAULT: "0.25rem",
        md: "0.375rem",
        lg: "0.5rem",
        xl: "0.75rem",
        "2xl": "1rem",
        "3xl": "1.5rem",
        full: "9999px"
    },
    borderSpacing: (param)=>{
        let { theme: e } = param;
        return e("spacing");
    },
    borderWidth: {
        DEFAULT: "1px",
        0: "0px",
        2: "2px",
        4: "4px",
        8: "8px",
        ...f
    },
    boxShadow: {
        sm: "0 1px 2px 0 rgb(0 0 0 / 0.05)",
        DEFAULT: "0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)",
        md: "0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)",
        lg: "0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)",
        xl: "0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)",
        "2xl": "0 25px 50px -12px rgb(0 0 0 / 0.25)",
        inner: "inset 0 2px 4px 0 rgb(0 0 0 / 0.05)",
        none: "none"
    },
    boxShadowColor: (param)=>{
        let { theme: e } = param;
        return e("colors");
    },
    brightness: {
        0: "0",
        50: ".5",
        75: ".75",
        90: ".9",
        95: ".95",
        100: "1",
        105: "1.05",
        110: "1.1",
        125: "1.25",
        150: "1.5",
        200: "2",
        ...l
    },
    caretColor: (param)=>{
        let { theme: e } = param;
        return e("colors");
    },
    colors: ()=>({
            ...__TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$HTB5LLOP$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["a"]
        }),
    columns: {
        auto: "auto",
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        7: "7",
        8: "8",
        9: "9",
        10: "10",
        11: "11",
        12: "12",
        "3xs": "16rem",
        "2xs": "18rem",
        xs: "20rem",
        sm: "24rem",
        md: "28rem",
        lg: "32rem",
        xl: "36rem",
        "2xl": "42rem",
        "3xl": "48rem",
        "4xl": "56rem",
        "5xl": "64rem",
        "6xl": "72rem",
        "7xl": "80rem",
        ...g
    },
    container: {},
    content: {
        none: "none"
    },
    contrast: {
        0: "0",
        50: ".5",
        75: ".75",
        100: "1",
        125: "1.25",
        150: "1.5",
        200: "2",
        ...l
    },
    cursor: {
        auto: "auto",
        default: "default",
        pointer: "pointer",
        wait: "wait",
        text: "text",
        move: "move",
        help: "help",
        "not-allowed": "not-allowed",
        none: "none",
        "context-menu": "context-menu",
        progress: "progress",
        cell: "cell",
        crosshair: "crosshair",
        "vertical-text": "vertical-text",
        alias: "alias",
        copy: "copy",
        "no-drop": "no-drop",
        grab: "grab",
        grabbing: "grabbing",
        "all-scroll": "all-scroll",
        "col-resize": "col-resize",
        "row-resize": "row-resize",
        "n-resize": "n-resize",
        "e-resize": "e-resize",
        "s-resize": "s-resize",
        "w-resize": "w-resize",
        "ne-resize": "ne-resize",
        "nw-resize": "nw-resize",
        "se-resize": "se-resize",
        "sw-resize": "sw-resize",
        "ew-resize": "ew-resize",
        "ns-resize": "ns-resize",
        "nesw-resize": "nesw-resize",
        "nwse-resize": "nwse-resize",
        "zoom-in": "zoom-in",
        "zoom-out": "zoom-out"
    },
    divideColor: (param)=>{
        let { theme: e } = param;
        return e("borderColor");
    },
    divideOpacity: (param)=>{
        let { theme: e } = param;
        return e("borderOpacity");
    },
    divideWidth: (param)=>{
        let { theme: e } = param;
        return {
            ...e("borderWidth"),
            ...f
        };
    },
    dropShadow: {
        sm: "0 1px 1px rgb(0 0 0 / 0.05)",
        DEFAULT: [
            "0 1px 2px rgb(0 0 0 / 0.1)",
            "0 1px 1px rgb(0 0 0 / 0.06)"
        ],
        md: [
            "0 4px 3px rgb(0 0 0 / 0.07)",
            "0 2px 2px rgb(0 0 0 / 0.06)"
        ],
        lg: [
            "0 10px 8px rgb(0 0 0 / 0.04)",
            "0 4px 3px rgb(0 0 0 / 0.1)"
        ],
        xl: [
            "0 20px 13px rgb(0 0 0 / 0.03)",
            "0 8px 5px rgb(0 0 0 / 0.08)"
        ],
        "2xl": "0 25px 25px rgb(0 0 0 / 0.15)",
        none: "0 0 #0000"
    },
    fill: (param)=>{
        let { theme: e } = param;
        return e("colors");
    },
    flex: {
        1: "1 1 0%",
        auto: "1 1 auto",
        initial: "0 1 auto",
        none: "none"
    },
    flexBasis: (param)=>{
        let { theme: e } = param;
        return {
            auto: "auto",
            "1/2": "50%",
            "1/3": "33.333333%",
            "2/3": "66.666667%",
            "1/4": "25%",
            "2/4": "50%",
            "3/4": "75%",
            "1/5": "20%",
            "2/5": "40%",
            "3/5": "60%",
            "4/5": "80%",
            "1/6": "16.666667%",
            "2/6": "33.333333%",
            "3/6": "50%",
            "4/6": "66.666667%",
            "5/6": "83.333333%",
            "1/12": "8.333333%",
            "2/12": "16.666667%",
            "3/12": "25%",
            "4/12": "33.333333%",
            "5/12": "41.666667%",
            "6/12": "50%",
            "7/12": "58.333333%",
            "8/12": "66.666667%",
            "9/12": "75%",
            "10/12": "83.333333%",
            "11/12": "91.666667%",
            full: "100%",
            ...e("spacing")
        };
    },
    flexGrow: {
        0: "0",
        DEFAULT: "1",
        ...g
    },
    flexShrink: {
        0: "0",
        DEFAULT: "1",
        ...g
    },
    fontFamily: {
        sans: [
            "ui-sans-serif",
            "system-ui",
            "sans-serif",
            '"Apple Color Emoji"',
            '"Segoe UI Emoji"',
            '"Segoe UI Symbol"',
            '"Noto Color Emoji"'
        ],
        serif: [
            "ui-serif",
            "Georgia",
            "Cambria",
            '"Times New Roman"',
            "Times",
            "serif"
        ],
        mono: [
            "ui-monospace",
            "SFMono-Regular",
            "Menlo",
            "Monaco",
            "Consolas",
            '"Liberation Mono"',
            '"Courier New"',
            "monospace"
        ]
    },
    fontSize: {
        xs: [
            "0.75rem",
            {
                lineHeight: "1rem"
            }
        ],
        sm: [
            "0.875rem",
            {
                lineHeight: "1.25rem"
            }
        ],
        base: [
            "1rem",
            {
                lineHeight: "1.5rem"
            }
        ],
        lg: [
            "1.125rem",
            {
                lineHeight: "1.75rem"
            }
        ],
        xl: [
            "1.25rem",
            {
                lineHeight: "1.75rem"
            }
        ],
        "2xl": [
            "1.5rem",
            {
                lineHeight: "2rem"
            }
        ],
        "3xl": [
            "1.875rem",
            {
                lineHeight: "2.25rem"
            }
        ],
        "4xl": [
            "2.25rem",
            {
                lineHeight: "2.5rem"
            }
        ],
        "5xl": [
            "3rem",
            {
                lineHeight: "1"
            }
        ],
        "6xl": [
            "3.75rem",
            {
                lineHeight: "1"
            }
        ],
        "7xl": [
            "4.5rem",
            {
                lineHeight: "1"
            }
        ],
        "8xl": [
            "6rem",
            {
                lineHeight: "1"
            }
        ],
        "9xl": [
            "8rem",
            {
                lineHeight: "1"
            }
        ]
    },
    fontWeight: {
        thin: "100",
        extralight: "200",
        light: "300",
        normal: "400",
        medium: "500",
        semibold: "600",
        bold: "700",
        extrabold: "800",
        black: "900"
    },
    gap: (param)=>{
        let { theme: e } = param;
        return e("spacing");
    },
    gradientColorStops: (param)=>{
        let { theme: e } = param;
        return e("colors");
    },
    gradientColorStopPositions: {
        "0%": "0%",
        "5%": "5%",
        "10%": "10%",
        "15%": "15%",
        "20%": "20%",
        "25%": "25%",
        "30%": "30%",
        "35%": "35%",
        "40%": "40%",
        "45%": "45%",
        "50%": "50%",
        "55%": "55%",
        "60%": "60%",
        "65%": "65%",
        "70%": "70%",
        "75%": "75%",
        "80%": "80%",
        "85%": "85%",
        "90%": "90%",
        "95%": "95%",
        "100%": "100%",
        ...l
    },
    grayscale: {
        0: "0",
        DEFAULT: "100%",
        ...l
    },
    gridAutoColumns: {
        auto: "auto",
        min: "min-content",
        max: "max-content",
        fr: "minmax(0, 1fr)"
    },
    gridAutoRows: {
        auto: "auto",
        min: "min-content",
        max: "max-content",
        fr: "minmax(0, 1fr)"
    },
    gridColumn: {
        auto: "auto",
        "span-1": "span 1 / span 1",
        "span-2": "span 2 / span 2",
        "span-3": "span 3 / span 3",
        "span-4": "span 4 / span 4",
        "span-5": "span 5 / span 5",
        "span-6": "span 6 / span 6",
        "span-7": "span 7 / span 7",
        "span-8": "span 8 / span 8",
        "span-9": "span 9 / span 9",
        "span-10": "span 10 / span 10",
        "span-11": "span 11 / span 11",
        "span-12": "span 12 / span 12",
        "span-full": "1 / -1"
    },
    gridColumnEnd: {
        auto: "auto",
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        7: "7",
        8: "8",
        9: "9",
        10: "10",
        11: "11",
        12: "12",
        13: "13",
        ...g
    },
    gridColumnStart: {
        auto: "auto",
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        7: "7",
        8: "8",
        9: "9",
        10: "10",
        11: "11",
        12: "12",
        13: "13",
        ...g
    },
    gridRow: {
        auto: "auto",
        "span-1": "span 1 / span 1",
        "span-2": "span 2 / span 2",
        "span-3": "span 3 / span 3",
        "span-4": "span 4 / span 4",
        "span-5": "span 5 / span 5",
        "span-6": "span 6 / span 6",
        "span-7": "span 7 / span 7",
        "span-8": "span 8 / span 8",
        "span-9": "span 9 / span 9",
        "span-10": "span 10 / span 10",
        "span-11": "span 11 / span 11",
        "span-12": "span 12 / span 12",
        "span-full": "1 / -1"
    },
    gridRowEnd: {
        auto: "auto",
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        7: "7",
        8: "8",
        9: "9",
        10: "10",
        11: "11",
        12: "12",
        13: "13",
        ...g
    },
    gridRowStart: {
        auto: "auto",
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        7: "7",
        8: "8",
        9: "9",
        10: "10",
        11: "11",
        12: "12",
        13: "13",
        ...g
    },
    gridTemplateColumns: {
        none: "none",
        subgrid: "subgrid",
        1: "repeat(1, minmax(0, 1fr))",
        2: "repeat(2, minmax(0, 1fr))",
        3: "repeat(3, minmax(0, 1fr))",
        4: "repeat(4, minmax(0, 1fr))",
        5: "repeat(5, minmax(0, 1fr))",
        6: "repeat(6, minmax(0, 1fr))",
        7: "repeat(7, minmax(0, 1fr))",
        8: "repeat(8, minmax(0, 1fr))",
        9: "repeat(9, minmax(0, 1fr))",
        10: "repeat(10, minmax(0, 1fr))",
        11: "repeat(11, minmax(0, 1fr))",
        12: "repeat(12, minmax(0, 1fr))",
        ...L
    },
    gridTemplateRows: {
        none: "none",
        subgrid: "subgrid",
        1: "repeat(1, minmax(0, 1fr))",
        2: "repeat(2, minmax(0, 1fr))",
        3: "repeat(3, minmax(0, 1fr))",
        4: "repeat(4, minmax(0, 1fr))",
        5: "repeat(5, minmax(0, 1fr))",
        6: "repeat(6, minmax(0, 1fr))",
        7: "repeat(7, minmax(0, 1fr))",
        8: "repeat(8, minmax(0, 1fr))",
        9: "repeat(9, minmax(0, 1fr))",
        10: "repeat(10, minmax(0, 1fr))",
        11: "repeat(11, minmax(0, 1fr))",
        12: "repeat(12, minmax(0, 1fr))",
        ...L
    },
    height: (param)=>{
        let { theme: e } = param;
        return {
            auto: "auto",
            "1/2": "50%",
            "1/3": "33.333333%",
            "2/3": "66.666667%",
            "1/4": "25%",
            "2/4": "50%",
            "3/4": "75%",
            "1/5": "20%",
            "2/5": "40%",
            "3/5": "60%",
            "4/5": "80%",
            "1/6": "16.666667%",
            "2/6": "33.333333%",
            "3/6": "50%",
            "4/6": "66.666667%",
            "5/6": "83.333333%",
            full: "100%",
            screen: "100vh",
            svh: "100svh",
            lvh: "100lvh",
            dvh: "100dvh",
            min: "min-content",
            max: "max-content",
            fit: "fit-content",
            ...e("spacing")
        };
    },
    hueRotate: {
        0: "0deg",
        15: "15deg",
        30: "30deg",
        60: "60deg",
        90: "90deg",
        180: "180deg",
        ...w
    },
    inset: (param)=>{
        let { theme: e } = param;
        return {
            auto: "auto",
            "1/2": "50%",
            "1/3": "33.333333%",
            "2/3": "66.666667%",
            "1/4": "25%",
            "2/4": "50%",
            "3/4": "75%",
            full: "100%",
            ...e("spacing")
        };
    },
    invert: {
        0: "0",
        DEFAULT: "100%",
        ...l
    },
    keyframes: {
        spin: {
            to: {
                transform: "rotate(360deg)"
            }
        },
        ping: {
            "75%, 100%": {
                transform: "scale(2)",
                opacity: "0"
            }
        },
        pulse: {
            "50%": {
                opacity: ".5"
            }
        },
        bounce: {
            "0%, 100%": {
                transform: "translateY(-25%)",
                animationTimingFunction: "cubic-bezier(0.8,0,1,1)"
            },
            "50%": {
                transform: "none",
                animationTimingFunction: "cubic-bezier(0,0,0.2,1)"
            }
        }
    },
    letterSpacing: {
        tighter: "-0.05em",
        tight: "-0.025em",
        normal: "0em",
        wide: "0.025em",
        wider: "0.05em",
        widest: "0.1em"
    },
    lineHeight: {
        none: "1",
        tight: "1.25",
        snug: "1.375",
        normal: "1.5",
        relaxed: "1.625",
        loose: "2",
        3: ".75rem",
        4: "1rem",
        5: "1.25rem",
        6: "1.5rem",
        7: "1.75rem",
        8: "2rem",
        9: "2.25rem",
        10: "2.5rem"
    },
    listStyleType: {
        none: "none",
        disc: "disc",
        decimal: "decimal"
    },
    listStyleImage: {
        none: "none"
    },
    margin: (param)=>{
        let { theme: e } = param;
        return {
            auto: "auto",
            ...e("spacing")
        };
    },
    lineClamp: {
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        ...g
    },
    maxHeight: (param)=>{
        let { theme: e } = param;
        return {
            none: "none",
            full: "100%",
            screen: "100vh",
            svh: "100svh",
            lvh: "100lvh",
            dvh: "100dvh",
            min: "min-content",
            max: "max-content",
            fit: "fit-content",
            ...e("spacing")
        };
    },
    maxWidth: (param)=>{
        let { theme: e } = param;
        return {
            none: "none",
            xs: "20rem",
            sm: "24rem",
            md: "28rem",
            lg: "32rem",
            xl: "36rem",
            "2xl": "42rem",
            "3xl": "48rem",
            "4xl": "56rem",
            "5xl": "64rem",
            "6xl": "72rem",
            "7xl": "80rem",
            full: "100%",
            min: "min-content",
            max: "max-content",
            fit: "fit-content",
            prose: "65ch",
            ...e("spacing")
        };
    },
    minHeight: (param)=>{
        let { theme: e } = param;
        return {
            full: "100%",
            screen: "100vh",
            svh: "100svh",
            lvh: "100lvh",
            dvh: "100dvh",
            min: "min-content",
            max: "max-content",
            fit: "fit-content",
            ...e("spacing")
        };
    },
    minWidth: (param)=>{
        let { theme: e } = param;
        return {
            full: "100%",
            min: "min-content",
            max: "max-content",
            fit: "fit-content",
            ...e("spacing")
        };
    },
    objectPosition: {
        bottom: "bottom",
        center: "center",
        left: "left",
        "left-bottom": "left bottom",
        "left-top": "left top",
        right: "right",
        "right-bottom": "right bottom",
        "right-top": "right top",
        top: "top"
    },
    opacity: {
        0: "0",
        5: "0.05",
        10: "0.1",
        15: "0.15",
        20: "0.2",
        25: "0.25",
        30: "0.3",
        35: "0.35",
        40: "0.4",
        45: "0.45",
        50: "0.5",
        55: "0.55",
        60: "0.6",
        65: "0.65",
        70: "0.7",
        75: "0.75",
        80: "0.8",
        85: "0.85",
        90: "0.9",
        95: "0.95",
        100: "1",
        ...l
    },
    order: {
        first: "-9999",
        last: "9999",
        none: "0",
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        7: "7",
        8: "8",
        9: "9",
        10: "10",
        11: "11",
        12: "12",
        ...g
    },
    outlineColor: (param)=>{
        let { theme: e } = param;
        return e("colors");
    },
    outlineOffset: {
        0: "0px",
        1: "1px",
        2: "2px",
        4: "4px",
        8: "8px",
        ...f
    },
    outlineWidth: {
        0: "0px",
        1: "1px",
        2: "2px",
        4: "4px",
        8: "8px",
        ...f
    },
    padding: (param)=>{
        let { theme: e } = param;
        return e("spacing");
    },
    placeholderColor: (param)=>{
        let { theme: e } = param;
        return e("colors");
    },
    placeholderOpacity: (param)=>{
        let { theme: e } = param;
        return e("opacity");
    },
    ringColor: (param)=>{
        let { theme: e } = param;
        return {
            DEFAULT: "currentcolor",
            ...e("colors")
        };
    },
    ringOffsetColor: (param)=>{
        let { theme: e } = param;
        return e("colors");
    },
    ringOffsetWidth: {
        0: "0px",
        1: "1px",
        2: "2px",
        4: "4px",
        8: "8px",
        ...f
    },
    ringOpacity: (param)=>{
        let { theme: e } = param;
        return {
            DEFAULT: "0.5",
            ...e("opacity")
        };
    },
    ringWidth: {
        DEFAULT: "3px",
        0: "0px",
        1: "1px",
        2: "2px",
        4: "4px",
        8: "8px",
        ...f
    },
    rotate: {
        0: "0deg",
        1: "1deg",
        2: "2deg",
        3: "3deg",
        6: "6deg",
        12: "12deg",
        45: "45deg",
        90: "90deg",
        180: "180deg",
        ...w
    },
    saturate: {
        0: "0",
        50: ".5",
        100: "1",
        150: "1.5",
        200: "2",
        ...l
    },
    scale: {
        0: "0",
        50: ".5",
        75: ".75",
        90: ".9",
        95: ".95",
        100: "1",
        105: "1.05",
        110: "1.1",
        125: "1.25",
        150: "1.5",
        ...l
    },
    screens: {
        sm: "40rem",
        md: "48rem",
        lg: "64rem",
        xl: "80rem",
        "2xl": "96rem"
    },
    scrollMargin: (param)=>{
        let { theme: e } = param;
        return e("spacing");
    },
    scrollPadding: (param)=>{
        let { theme: e } = param;
        return e("spacing");
    },
    sepia: {
        0: "0",
        DEFAULT: "100%",
        ...l
    },
    skew: {
        0: "0deg",
        1: "1deg",
        2: "2deg",
        3: "3deg",
        6: "6deg",
        12: "12deg",
        ...w
    },
    space: (param)=>{
        let { theme: e } = param;
        return e("spacing");
    },
    spacing: {
        px: "1px",
        0: "0px",
        .5: "0.125rem",
        1: "0.25rem",
        1.5: "0.375rem",
        2: "0.5rem",
        2.5: "0.625rem",
        3: "0.75rem",
        3.5: "0.875rem",
        4: "1rem",
        5: "1.25rem",
        6: "1.5rem",
        7: "1.75rem",
        8: "2rem",
        9: "2.25rem",
        10: "2.5rem",
        11: "2.75rem",
        12: "3rem",
        14: "3.5rem",
        16: "4rem",
        20: "5rem",
        24: "6rem",
        28: "7rem",
        32: "8rem",
        36: "9rem",
        40: "10rem",
        44: "11rem",
        48: "12rem",
        52: "13rem",
        56: "14rem",
        60: "15rem",
        64: "16rem",
        72: "18rem",
        80: "20rem",
        96: "24rem"
    },
    stroke: (param)=>{
        let { theme: e } = param;
        return {
            none: "none",
            ...e("colors")
        };
    },
    strokeWidth: {
        0: "0",
        1: "1",
        2: "2",
        ...g
    },
    supports: {},
    data: {},
    textColor: (param)=>{
        let { theme: e } = param;
        return e("colors");
    },
    textDecorationColor: (param)=>{
        let { theme: e } = param;
        return e("colors");
    },
    textDecorationThickness: {
        auto: "auto",
        "from-font": "from-font",
        0: "0px",
        1: "1px",
        2: "2px",
        4: "4px",
        8: "8px",
        ...f
    },
    textIndent: (param)=>{
        let { theme: e } = param;
        return e("spacing");
    },
    textOpacity: (param)=>{
        let { theme: e } = param;
        return e("opacity");
    },
    textUnderlineOffset: {
        auto: "auto",
        0: "0px",
        1: "1px",
        2: "2px",
        4: "4px",
        8: "8px",
        ...f
    },
    transformOrigin: {
        center: "center",
        top: "top",
        "top-right": "top right",
        right: "right",
        "bottom-right": "bottom right",
        bottom: "bottom",
        "bottom-left": "bottom left",
        left: "left",
        "top-left": "top left"
    },
    transitionDelay: {
        0: "0s",
        75: "75ms",
        100: "100ms",
        150: "150ms",
        200: "200ms",
        300: "300ms",
        500: "500ms",
        700: "700ms",
        1e3: "1000ms",
        ...O
    },
    transitionDuration: {
        DEFAULT: "150ms",
        0: "0s",
        75: "75ms",
        100: "100ms",
        150: "150ms",
        200: "200ms",
        300: "300ms",
        500: "500ms",
        700: "700ms",
        1e3: "1000ms",
        ...O
    },
    transitionProperty: {
        none: "none",
        all: "all",
        DEFAULT: "color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter",
        colors: "color, background-color, border-color, outline-color, text-decoration-color, fill, stroke",
        opacity: "opacity",
        shadow: "box-shadow",
        transform: "transform"
    },
    transitionTimingFunction: {
        DEFAULT: "cubic-bezier(0.4, 0, 0.2, 1)",
        linear: "linear",
        in: "cubic-bezier(0.4, 0, 1, 1)",
        out: "cubic-bezier(0, 0, 0.2, 1)",
        "in-out": "cubic-bezier(0.4, 0, 0.2, 1)"
    },
    translate: (param)=>{
        let { theme: e } = param;
        return {
            "1/2": "50%",
            "1/3": "33.333333%",
            "2/3": "66.666667%",
            "1/4": "25%",
            "2/4": "50%",
            "3/4": "75%",
            full: "100%",
            ...e("spacing")
        };
    },
    size: (param)=>{
        let { theme: e } = param;
        return {
            auto: "auto",
            "1/2": "50%",
            "1/3": "33.333333%",
            "2/3": "66.666667%",
            "1/4": "25%",
            "2/4": "50%",
            "3/4": "75%",
            "1/5": "20%",
            "2/5": "40%",
            "3/5": "60%",
            "4/5": "80%",
            "1/6": "16.666667%",
            "2/6": "33.333333%",
            "3/6": "50%",
            "4/6": "66.666667%",
            "5/6": "83.333333%",
            "1/12": "8.333333%",
            "2/12": "16.666667%",
            "3/12": "25%",
            "4/12": "33.333333%",
            "5/12": "41.666667%",
            "6/12": "50%",
            "7/12": "58.333333%",
            "8/12": "66.666667%",
            "9/12": "75%",
            "10/12": "83.333333%",
            "11/12": "91.666667%",
            full: "100%",
            min: "min-content",
            max: "max-content",
            fit: "fit-content",
            ...e("spacing")
        };
    },
    width: (param)=>{
        let { theme: e } = param;
        return {
            auto: "auto",
            "1/2": "50%",
            "1/3": "33.333333%",
            "2/3": "66.666667%",
            "1/4": "25%",
            "2/4": "50%",
            "3/4": "75%",
            "1/5": "20%",
            "2/5": "40%",
            "3/5": "60%",
            "4/5": "80%",
            "1/6": "16.666667%",
            "2/6": "33.333333%",
            "3/6": "50%",
            "4/6": "66.666667%",
            "5/6": "83.333333%",
            "1/12": "8.333333%",
            "2/12": "16.666667%",
            "3/12": "25%",
            "4/12": "33.333333%",
            "5/12": "41.666667%",
            "6/12": "50%",
            "7/12": "58.333333%",
            "8/12": "66.666667%",
            "9/12": "75%",
            "10/12": "83.333333%",
            "11/12": "91.666667%",
            full: "100%",
            screen: "100vw",
            svw: "100svw",
            lvw: "100lvw",
            dvw: "100dvw",
            min: "min-content",
            max: "max-content",
            fit: "fit-content",
            ...e("spacing")
        };
    },
    willChange: {
        auto: "auto",
        scroll: "scroll-position",
        contents: "contents",
        transform: "transform"
    },
    zIndex: {
        auto: "auto",
        0: "0",
        10: "10",
        20: "20",
        30: "30",
        40: "40",
        50: "50",
        ...g
    }
};
;
}),
"[project]/Documents/vsc/HTV/frontend/node_modules/tailwindcss/dist/chunk-MC3TVECV.mjs [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "a",
    ()=>dt,
    "b",
    ()=>Ae,
    "c",
    ()=>vn,
    "d",
    ()=>Ol,
    "e",
    ()=>_l,
    "f",
    ()=>wn
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/Documents/vsc/HTV/frontend/node_modules/@swc/helpers/esm/_class_private_method_get.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/Documents/vsc/HTV/frontend/node_modules/@swc/helpers/esm/_class_private_method_init.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/Documents/vsc/HTV/frontend/node_modules/@swc/helpers/esm/_define_property.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/Documents/vsc/HTV/frontend/node_modules/@swc/helpers/esm/_tagged_template_literal.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/Documents/vsc/HTV/frontend/node_modules/tailwindcss/dist/chunk-G32FJCSR.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$HTB5LLOP$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/Documents/vsc/HTV/frontend/node_modules/tailwindcss/dist/chunk-HTB5LLOP.mjs [app-client] (ecmascript)");
;
;
;
;
function _templateObject() {
    const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_tagged_template_literal$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])([
        "_"
    ], [
        "\\_"
    ]);
    _templateObject = function() {
        return data;
    };
    return data;
}
var _r, _e, _t, _class;
;
;
var Kt = "4.1.14";
var Ne = 92, Ie = 47, Le = 42, Ot = 34, _t1 = 39, oi = 58, ze = 59, ne = 10, Me = 13, Se = 32, Fe = 9, Dt = 123, lt = 125, ft = 40, jt = 41, ai = 91, li = 93, Ut = 45, st = 64, si = 33;
function me(r, t) {
    let i = (t === null || t === void 0 ? void 0 : t.from) ? {
        file: t.from,
        code: r
    } : null;
    r[0] === "\uFEFF" && (r = " " + r.slice(1));
    let e = [], o = [], s = [], l = null, d = null, u = "", f = "", g = 0, m;
    for(let p = 0; p < r.length; p++){
        let w = r.charCodeAt(p);
        if (!(w === Me && (m = r.charCodeAt(p + 1), m === ne))) if (w === Ne) u === "" && (g = p), u += r.slice(p, p + 2), p += 1;
        else if (w === Ie && r.charCodeAt(p + 1) === Le) {
            let v = p;
            for(let x = p + 2; x < r.length; x++)if (m = r.charCodeAt(x), m === Ne) x += 1;
            else if (m === Le && r.charCodeAt(x + 1) === Ie) {
                p = x + 1;
                break;
            }
            let y1 = r.slice(v, p + 1);
            if (y1.charCodeAt(2) === si) {
                let x = We(y1.slice(2, -2));
                o.push(x), i && (x.src = [
                    i,
                    v,
                    p + 1
                ], x.dst = [
                    i,
                    v,
                    p + 1
                ]);
            }
        } else if (w === _t1 || w === Ot) {
            let v = It(r, p, w);
            u += r.slice(p, v + 1), p = v;
        } else {
            if ((w === Se || w === ne || w === Fe) && (m = r.charCodeAt(p + 1)) && (m === Se || m === ne || m === Fe || m === Me && (m = r.charCodeAt(p + 2)) && m == ne)) continue;
            if (w === ne) {
                if (u.length === 0) continue;
                m = u.charCodeAt(u.length - 1), m !== Se && m !== ne && m !== Fe && (u += " ");
            } else if (w === Ut && r.charCodeAt(p + 1) === Ut && u.length === 0) {
                let v = "", y1 = p, x = -1;
                for(let C = p + 2; C < r.length; C++)if (m = r.charCodeAt(C), m === Ne) C += 1;
                else if (m === _t1 || m === Ot) C = It(r, C, m);
                else if (m === Ie && r.charCodeAt(C + 1) === Le) {
                    for(let b = C + 2; b < r.length; b++)if (m = r.charCodeAt(b), m === Ne) b += 1;
                    else if (m === Le && r.charCodeAt(b + 1) === Ie) {
                        C = b + 1;
                        break;
                    }
                } else if (x === -1 && m === oi) x = u.length + C - y1;
                else if (m === ze && v.length === 0) {
                    u += r.slice(y1, C), p = C;
                    break;
                } else if (m === ft) v += ")";
                else if (m === ai) v += "]";
                else if (m === Dt) v += "}";
                else if ((m === lt || r.length - 1 === C) && v.length === 0) {
                    p = C - 1, u += r.slice(y1, C);
                    break;
                } else (m === jt || m === li || m === lt) && v.length > 0 && r[C] === v[v.length - 1] && (v = v.slice(0, -1));
                let S = ut(u, x);
                if (!S) throw new Error("Invalid custom property, expected a value");
                i && (S.src = [
                    i,
                    y1,
                    p
                ], S.dst = [
                    i,
                    y1,
                    p
                ]), l ? l.nodes.push(S) : e.push(S), u = "";
            } else if (w === ze && u.charCodeAt(0) === st) d = Te(u), i && (d.src = [
                i,
                g,
                p
            ], d.dst = [
                i,
                g,
                p
            ]), l ? l.nodes.push(d) : e.push(d), u = "", d = null;
            else if (w === ze && f[f.length - 1] !== ")") {
                let v = ut(u);
                if (!v) {
                    if (u.length === 0) continue;
                    throw new Error("Invalid declaration: `".concat(u.trim(), "`"));
                }
                i && (v.src = [
                    i,
                    g,
                    p
                ], v.dst = [
                    i,
                    g,
                    p
                ]), l ? l.nodes.push(v) : e.push(v), u = "";
            } else if (w === Dt && f[f.length - 1] !== ")") f += "}", d = Y(u.trim()), i && (d.src = [
                i,
                g,
                p
            ], d.dst = [
                i,
                g,
                p
            ]), l && l.nodes.push(d), s.push(l), l = d, u = "", d = null;
            else if (w === lt && f[f.length - 1] !== ")") {
                if (f === "") throw new Error("Missing opening {");
                if (f = f.slice(0, -1), u.length > 0) if (u.charCodeAt(0) === st) d = Te(u), i && (d.src = [
                    i,
                    g,
                    p
                ], d.dst = [
                    i,
                    g,
                    p
                ]), l ? l.nodes.push(d) : e.push(d), u = "", d = null;
                else {
                    let y1 = u.indexOf(":");
                    if (l) {
                        let x = ut(u, y1);
                        if (!x) throw new Error("Invalid declaration: `".concat(u.trim(), "`"));
                        i && (x.src = [
                            i,
                            g,
                            p
                        ], x.dst = [
                            i,
                            g,
                            p
                        ]), l.nodes.push(x);
                    }
                }
                var _s_pop;
                let v = (_s_pop = s.pop()) !== null && _s_pop !== void 0 ? _s_pop : null;
                v === null && l && e.push(l), l = v, u = "", d = null;
            } else if (w === ft) f += ")", u += "(";
            else if (w === jt) {
                if (f[f.length - 1] !== ")") throw new Error("Missing opening (");
                f = f.slice(0, -1), u += ")";
            } else {
                if (u.length === 0 && (w === Se || w === ne || w === Fe)) continue;
                u === "" && (g = p), u += String.fromCharCode(w);
            }
        }
    }
    if (u.charCodeAt(0) === st) {
        let p = Te(u);
        i && (p.src = [
            i,
            g,
            r.length
        ], p.dst = [
            i,
            g,
            r.length
        ]), e.push(p);
    }
    if (f.length > 0 && l) {
        if (l.kind === "rule") throw new Error("Missing closing } at ".concat(l.selector));
        if (l.kind === "at-rule") throw new Error("Missing closing } at ".concat(l.name, " ").concat(l.params));
    }
    return o.length > 0 ? o.concat(e) : e;
}
function Te(r) {
    let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    let i = r, e = "";
    for(let o = 5; o < r.length; o++){
        let s = r.charCodeAt(o);
        if (s === Se || s === ft) {
            i = r.slice(0, o), e = r.slice(o);
            break;
        }
    }
    return z(i.trim(), e.trim(), t);
}
function ut(r) {
    let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : r.indexOf(":");
    if (t === -1) return null;
    let i = r.indexOf("!important", t + 1);
    return n(r.slice(0, t).trim(), r.slice(t + 1, i === -1 ? r.length : i).trim(), i !== -1);
}
function It(r, t, i) {
    let e;
    for(let o = t + 1; o < r.length; o++)if (e = r.charCodeAt(o), e === Ne) o += 1;
    else {
        if (e === i) return o;
        if (e === ze && (r.charCodeAt(o + 1) === ne || r.charCodeAt(o + 1) === Me && r.charCodeAt(o + 2) === ne)) throw new Error("Unterminated string: ".concat(r.slice(t, o + 1) + String.fromCharCode(i)));
        if (e === ne || e === Me && r.charCodeAt(o + 1) === ne) throw new Error("Unterminated string: ".concat(r.slice(t, o) + String.fromCharCode(i)));
    }
    return t;
}
function fe(r) {
    if (arguments.length === 0) throw new TypeError("`CSS.escape` requires an argument.");
    let t = String(r), i = t.length, e = -1, o, s = "", l = t.charCodeAt(0);
    if (i === 1 && l === 45) return "\\" + t;
    for(; ++e < i;){
        if (o = t.charCodeAt(e), o === 0) {
            s += "\uFFFD";
            continue;
        }
        if (o >= 1 && o <= 31 || o === 127 || e === 0 && o >= 48 && o <= 57 || e === 1 && o >= 48 && o <= 57 && l === 45) {
            s += "\\" + o.toString(16) + " ";
            continue;
        }
        if (o >= 128 || o === 45 || o === 95 || o >= 48 && o <= 57 || o >= 65 && o <= 90 || o >= 97 && o <= 122) {
            s += t.charAt(e);
            continue;
        }
        s += "\\" + t.charAt(e);
    }
    return s;
}
function ge(r) {
    return r.replace(/\\([\dA-Fa-f]{1,6}[\t\n\f\r ]?|[\S\s])/g, (t)=>t.length > 2 ? String.fromCodePoint(Number.parseInt(t.slice(1).trim(), 16)) : t[1]);
}
var Ft = new Map([
    [
        "--font",
        [
            "--font-weight",
            "--font-size"
        ]
    ],
    [
        "--inset",
        [
            "--inset-shadow",
            "--inset-ring"
        ]
    ],
    [
        "--text",
        [
            "--text-color",
            "--text-decoration-color",
            "--text-decoration-thickness",
            "--text-indent",
            "--text-shadow",
            "--text-underline-offset"
        ]
    ],
    [
        "--grid-column",
        [
            "--grid-column-start",
            "--grid-column-end"
        ]
    ],
    [
        "--grid-row",
        [
            "--grid-row-start",
            "--grid-row-end"
        ]
    ]
]);
function Lt(r, t) {
    var _Ft_get;
    return ((_Ft_get = Ft.get(t)) !== null && _Ft_get !== void 0 ? _Ft_get : []).some((i)=>r === i || r.startsWith("".concat(i, "-")));
}
var Be = (_r = /*#__PURE__*/ new WeakSet(), _e = /*#__PURE__*/ new WeakSet(), _t = /*#__PURE__*/ new WeakSet(), _class = class {
    get size() {
        return this.values.size;
    }
    add(t, i) {
        let e = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0, o = arguments.length > 3 ? arguments[3] : void 0;
        if (t.endsWith("-*")) {
            if (i !== "initial") throw new Error("Invalid theme value `".concat(i, "` for namespace `").concat(t, "`"));
            t === "--*" ? this.values.clear() : this.clearNamespace(t.slice(0, -2), 0);
        }
        if (e & 4) {
            let s = this.values.get(t);
            if (s && !(s.options & 4)) return;
        }
        i === "initial" ? this.values.delete(t) : this.values.set(t, {
            value: i,
            options: e,
            src: o
        });
    }
    keysInNamespaces(t) {
        let i = [];
        for (let e of t){
            let o = "".concat(e, "-");
            for (let s of this.values.keys())s.startsWith(o) && s.indexOf("--", 2) === -1 && (Lt(s, e) || i.push(s.slice(o.length)));
        }
        return i;
    }
    get(t) {
        for (let i of t){
            let e = this.values.get(i);
            if (e) return e.value;
        }
        return null;
    }
    hasDefault(t) {
        return (this.getOptions(t) & 4) === 4;
    }
    getOptions(t) {
        var _this_values_get;
        var _this_values_get_options;
        return t = ge((0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _r, r).call(this, t)), (_this_values_get_options = (_this_values_get = this.values.get(t)) === null || _this_values_get === void 0 ? void 0 : _this_values_get.options) !== null && _this_values_get_options !== void 0 ? _this_values_get_options : 0;
    }
    entries() {
        return this.prefix ? Array.from(this.values, (t)=>(t[0] = this.prefixKey(t[0]), t)) : this.values.entries();
    }
    prefixKey(t) {
        return this.prefix ? "--".concat(this.prefix, "-").concat(t.slice(2)) : t;
    }
    clearNamespace(t, i) {
        var _Ft_get;
        let e = (_Ft_get = Ft.get(t)) !== null && _Ft_get !== void 0 ? _Ft_get : [];
        e: for (let o of this.values.keys())if (o.startsWith(t)) {
            if (i !== 0 && (this.getOptions(o) & i) !== i) continue;
            for (let s of e)if (o.startsWith(s)) continue e;
            this.values.delete(o);
        }
    }
    markUsedVariable(t) {
        let i = ge((0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _r, r).call(this, t)), e = this.values.get(i);
        if (!e) return !1;
        let o = e.options & 16;
        return e.options |= 16, !o;
    }
    resolve(t1, i) {
        let e1 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
        let o = (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _e, e).call(this, t1, i);
        if (!o) return null;
        let s = this.values.get(o);
        return (e1 | s.options) & 1 ? s.value : (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _t, t).call(this, o);
    }
    resolveValue(t, i) {
        let e1 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _e, e).call(this, t, i);
        return e1 ? this.values.get(e1).value : null;
    }
    resolveWith(t1, i) {
        let e1 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
        let o = (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _e, e).call(this, t1, i);
        if (!o) return null;
        let s = {};
        for (let d of e1){
            let u = "".concat(o).concat(d), f = this.values.get(u);
            f && (f.options & 1 ? s[d] = f.value : s[d] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _t, t).call(this, u));
        }
        let l = this.values.get(o);
        return l.options & 1 ? [
            l.value,
            s
        ] : [
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_get$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _t, t).call(this, o),
            s
        ];
    }
    namespace(t) {
        let i = new Map, e = "".concat(t, "-");
        for (let [o, s] of this.values)o === t ? i.set(null, s.value) : o.startsWith("".concat(e, "-")) ? i.set(o.slice(t.length), s.value) : o.startsWith(e) && i.set(o.slice(e.length), s.value);
        return i;
    }
    addKeyframes(t) {
        this.keyframes.add(t);
    }
    getKeyframes() {
        return Array.from(this.keyframes);
    }
    constructor(t = new Map, i = new Set([])){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _r);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _e);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_class_private_method_init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, _t);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "prefix", null);
        this.values = t;
        this.keyframes = i;
    }
}, _class);
var W = class extends Map {
    get(i) {
        let e = super.get(i);
        return e === void 0 && (e = this.factory(i, this), this.set(i, e)), e;
    }
    constructor(i){
        super();
        this.factory = i;
    }
};
function pt(r) {
    return {
        kind: "word",
        value: r
    };
}
function ui(r, t) {
    return {
        kind: "function",
        value: r,
        nodes: t
    };
}
function fi(r) {
    return {
        kind: "separator",
        value: r
    };
}
function ee(r, t) {
    let i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
    for(let e = 0; e < r.length; e++){
        var _t;
        let o = r[e], s = !1, l = 0, d = (_t = t(o, {
            parent: i,
            replaceWith (u) {
                s || (s = !0, Array.isArray(u) ? u.length === 0 ? (r.splice(e, 1), l = 0) : u.length === 1 ? (r[e] = u[0], l = 1) : (r.splice(e, 1, ...u), l = u.length) : r[e] = u);
            }
        })) !== null && _t !== void 0 ? _t : 0;
        if (s) {
            d === 0 ? e-- : e += l - 1;
            continue;
        }
        if (d === 2) return 2;
        if (d !== 1 && o.kind === "function" && ee(o.nodes, t, o) === 2) return 2;
    }
}
function Z(r) {
    let t = "";
    for (let i of r)switch(i.kind){
        case "word":
        case "separator":
            {
                t += i.value;
                break;
            }
        case "function":
            t += i.value + "(" + Z(i.nodes) + ")";
    }
    return t;
}
var zt = 92, ci = 41, Mt = 58, Wt = 44, pi = 34, Bt = 61, qt = 62, Gt = 60, Jt = 10, di = 40, mi = 39, Ht = 47, Yt = 32, Zt = 9;
function J(r) {
    r = r.replaceAll("\r\n", "\n");
    let t = [], i = [], e = null, o = "", s;
    for(let l = 0; l < r.length; l++){
        let d = r.charCodeAt(l);
        switch(d){
            case zt:
                {
                    o += r[l] + r[l + 1], l++;
                    break;
                }
            case Mt:
            case Wt:
            case Bt:
            case qt:
            case Gt:
            case Jt:
            case Ht:
            case Yt:
            case Zt:
                {
                    if (o.length > 0) {
                        let m = pt(o);
                        e ? e.nodes.push(m) : t.push(m), o = "";
                    }
                    let u = l, f = l + 1;
                    for(; f < r.length && (s = r.charCodeAt(f), !(s !== Mt && s !== Wt && s !== Bt && s !== qt && s !== Gt && s !== Jt && s !== Ht && s !== Yt && s !== Zt)); f++);
                    l = f - 1;
                    let g = fi(r.slice(u, f));
                    e ? e.nodes.push(g) : t.push(g);
                    break;
                }
            case mi:
            case pi:
                {
                    let u = l;
                    for(let f = l + 1; f < r.length; f++)if (s = r.charCodeAt(f), s === zt) f += 1;
                    else if (s === d) {
                        l = f;
                        break;
                    }
                    o += r.slice(u, l + 1);
                    break;
                }
            case di:
                {
                    let u = ui(o, []);
                    o = "", e ? e.nodes.push(u) : t.push(u), i.push(u), e = u;
                    break;
                }
            case ci:
                {
                    let u = i.pop();
                    if (o.length > 0) {
                        let f = pt(o);
                        u === null || u === void 0 ? void 0 : u.nodes.push(f), o = "";
                    }
                    i.length > 0 ? e = i[i.length - 1] : e = null;
                    break;
                }
            default:
                o += String.fromCharCode(d);
        }
    }
    return o.length > 0 && t.push(pt(o)), t;
}
function qe(r) {
    let t = [];
    return ee(J(r), (i)=>{
        if (!(i.kind !== "function" || i.value !== "var")) return ee(i.nodes, (e)=>{
            e.kind !== "word" || e.value[0] !== "-" || e.value[1] !== "-" || t.push(e.value);
        }), 1;
    }), t;
}
var hi = 64;
function B(r) {
    let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    return {
        kind: "rule",
        selector: r,
        nodes: t
    };
}
function z(r) {
    let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "", i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
    return {
        kind: "at-rule",
        name: r,
        params: t,
        nodes: i
    };
}
function Y(r) {
    let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
    return r.charCodeAt(0) === hi ? Te(r, t) : B(r, t);
}
function n(r, t) {
    let i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1;
    return {
        kind: "declaration",
        property: r,
        value: t,
        important: i
    };
}
function We(r) {
    return {
        kind: "comment",
        value: r
    };
}
function ae(r, t) {
    return {
        kind: "context",
        context: r,
        nodes: t
    };
}
function F(r) {
    return {
        kind: "at-root",
        nodes: r
    };
}
function j(r, t) {
    let i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [], e = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    for(let o = 0; o < r.length; o++){
        var _i_;
        let s = r[o], l = (_i_ = i[i.length - 1]) !== null && _i_ !== void 0 ? _i_ : null;
        if (s.kind === "context") {
            if (j(s.nodes, t, i, {
                ...e,
                ...s.context
            }) === 2) return 2;
            continue;
        }
        i.push(s);
        var _t;
        let d = !1, u = 0, f = (_t = t(s, {
            parent: l,
            context: e,
            path: i,
            replaceWith (g) {
                d || (d = !0, Array.isArray(g) ? g.length === 0 ? (r.splice(o, 1), u = 0) : g.length === 1 ? (r[o] = g[0], u = 1) : (r.splice(o, 1, ...g), u = g.length) : (r[o] = g, u = 1));
            }
        })) !== null && _t !== void 0 ? _t : 0;
        if (i.pop(), d) {
            f === 0 ? o-- : o += u - 1;
            continue;
        }
        if (f === 2) return 2;
        if (f !== 1 && "nodes" in s) {
            i.push(s);
            let g = j(s.nodes, t, i, e);
            if (i.pop(), g === 2) return 2;
        }
    }
}
function Ge(r, t) {
    let i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [], e = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    for(let o = 0; o < r.length; o++){
        var _i_;
        let s = r[o], l = (_i_ = i[i.length - 1]) !== null && _i_ !== void 0 ? _i_ : null;
        if (s.kind === "rule" || s.kind === "at-rule") i.push(s), Ge(s.nodes, t, i, e), i.pop();
        else if (s.kind === "context") {
            Ge(s.nodes, t, i, {
                ...e,
                ...s.context
            });
            continue;
        }
        i.push(s), t(s, {
            parent: l,
            context: e,
            path: i,
            replaceWith (d) {
                Array.isArray(d) ? d.length === 0 ? r.splice(o, 1) : d.length === 1 ? r[o] = d[0] : r.splice(o, 1, ...d) : r[o] = d, o += d.length - 1;
            }
        }), i.pop();
    }
}
function ve(r, t) {
    let i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 3;
    let e = [], o = new Set, s = new W(()=>new Set), l = new W(()=>new Set), d = new Set, u = new Set, f = [], g = [], m = new W(()=>new Set);
    function p(v, y1) {
        let x = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, S = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0;
        if (v.kind === "declaration") {
            if (v.property === "--tw-sort" || v.value === void 0 || v.value === null) return;
            if (x.theme && v.property[0] === "-" && v.property[1] === "-") {
                if (v.value === "initial") {
                    v.value = void 0;
                    return;
                }
                x.keyframes || s.get(y1).add(v);
            }
            if (v.value.includes("var(")) if (x.theme && v.property[0] === "-" && v.property[1] === "-") for (let C of qe(v.value))m.get(C).add(v.property);
            else t.trackUsedVariables(v.value);
            if (v.property === "animation") for (let C of Qt(v.value))u.add(C);
            i & 2 && v.value.includes("color-mix(") && l.get(y1).add(v), y1.push(v);
        } else if (v.kind === "rule") {
            let C = [];
            for (let R of v.nodes)p(R, C, x, S + 1);
            let b = {}, O = new Set;
            for (let R of C){
                var _b, _;
                if (R.kind !== "declaration") continue;
                let _2 = "".concat(R.property, ":").concat(R.value, ":").concat(R.important);
                var _1;
                (_1 = (_b = b)[_ = _2]) !== null && _1 !== void 0 ? _1 : _b[_] = [], b[_2].push(R);
            }
            for(let R in b)for(let _ = 0; _ < b[R].length - 1; ++_)O.add(b[R][_]);
            if (O.size > 0 && (C = C.filter((R)=>!O.has(R))), C.length === 0) return;
            v.selector === "&" ? y1.push(...C) : y1.push({
                ...v,
                nodes: C
            });
        } else if (v.kind === "at-rule" && v.name === "@property" && S === 0) {
            if (o.has(v.params)) return;
            if (i & 1) {
                let b = v.params, O = null, R = !1;
                for (let D of v.nodes)D.kind === "declaration" && (D.property === "initial-value" ? O = D.value : D.property === "inherits" && (R = D.value === "true"));
                let _ = n(b, O !== null && O !== void 0 ? O : "initial");
                _.src = v.src, R ? f.push(_) : g.push(_);
            }
            o.add(v.params);
            let C = {
                ...v,
                nodes: []
            };
            for (let b of v.nodes)p(b, C.nodes, x, S + 1);
            y1.push(C);
        } else if (v.kind === "at-rule") {
            v.name === "@keyframes" && (x = {
                ...x,
                keyframes: !0
            });
            let C = {
                ...v,
                nodes: []
            };
            for (let b of v.nodes)p(b, C.nodes, x, S + 1);
            v.name === "@keyframes" && x.theme && d.add(C), (C.nodes.length > 0 || C.name === "@layer" || C.name === "@charset" || C.name === "@custom-media" || C.name === "@namespace" || C.name === "@import") && y1.push(C);
        } else if (v.kind === "at-root") for (let C of v.nodes){
            let b = [];
            p(C, b, x, 0);
            for (let O of b)e.push(O);
        }
        else if (v.kind === "context") {
            if (v.context.reference) return;
            for (let C of v.nodes)p(C, y1, {
                ...x,
                ...v.context
            }, S);
        } else v.kind === "comment" && y1.push(v);
    }
    let w = [];
    for (let v of r)p(v, w, {}, 0);
    e: for (let [v, y1] of s)for (let x of y1){
        if (Xt(x.property, t.theme, m)) {
            if (x.property.startsWith(t.theme.prefixKey("--animate-"))) for (let b of Qt(x.value))u.add(b);
            continue;
        }
        let C = v.indexOf(x);
        if (v.splice(C, 1), v.length === 0) {
            let b = vi(w, (O)=>O.kind === "rule" && O.nodes === v);
            if (!b || b.length === 0) continue e;
            b.unshift({
                kind: "at-root",
                nodes: w
            });
            do {
                let O = b.pop();
                if (!O) break;
                let R = b[b.length - 1];
                if (!R || R.kind !== "at-root" && R.kind !== "at-rule") break;
                let _ = R.nodes.indexOf(O);
                if (_ === -1) break;
                R.nodes.splice(_, 1);
            }while (!0)
            continue e;
        }
    }
    for (let v of d)if (!u.has(v.params)) {
        let y1 = e.indexOf(v);
        e.splice(y1, 1);
    }
    if (w = w.concat(e), i & 2) for (let [v, y1] of l)for (let x of y1){
        let S = v.indexOf(x);
        if (S === -1 || x.value == null) continue;
        let C = J(x.value), b = !1;
        if (ee(C, (_, param)=>{
            let { replaceWith: D } = param;
            if (_.kind !== "function" || _.value !== "color-mix") return;
            let G = !1, K = !1;
            if (ee(_.nodes, (U, param)=>{
                let { replaceWith: q } = param;
                if (U.kind == "word" && U.value.toLowerCase() === "currentcolor") {
                    K = !0, b = !0;
                    return;
                }
                let M = U, re = null, a = new Set;
                do {
                    if (M.kind !== "function" || M.value !== "var") return;
                    let c = M.nodes[0];
                    if (!c || c.kind !== "word") return;
                    let h = c.value;
                    if (a.has(h)) {
                        G = !0;
                        return;
                    }
                    if (a.add(h), b = !0, re = t.theme.resolveValue(null, [
                        c.value
                    ]), !re) {
                        G = !0;
                        return;
                    }
                    if (re.toLowerCase() === "currentcolor") {
                        K = !0;
                        return;
                    }
                    re.startsWith("var(") ? M = J(re)[0] : M = null;
                }while (M)
                q({
                    kind: "word",
                    value: re
                });
            }), G || K) {
                let U = _.nodes.findIndex((M)=>M.kind === "separator" && M.value.trim().includes(","));
                if (U === -1) return;
                let q = _.nodes.length > U ? _.nodes[U + 1] : null;
                if (!q) return;
                D(q);
            } else if (b) {
                let U = _.nodes[2];
                U.kind === "word" && (U.value === "oklab" || U.value === "oklch" || U.value === "lab" || U.value === "lch") && (U.value = "srgb");
            }
        }), !b) continue;
        let O = {
            ...x,
            value: Z(C)
        }, R = Y("@supports (color: color-mix(in lab, red, red))", [
            x
        ]);
        R.src = x.src, v.splice(S, 1, O, R);
    }
    if (i & 1) {
        let v = [];
        if (f.length > 0) {
            let y1 = Y(":root, :host", f);
            y1.src = f[0].src, v.push(y1);
        }
        if (g.length > 0) {
            let y1 = Y("*, ::before, ::after, ::backdrop", g);
            y1.src = g[0].src, v.push(y1);
        }
        if (v.length > 0) {
            let y1 = w.findIndex((C)=>!(C.kind === "comment" || C.kind === "at-rule" && (C.name === "@charset" || C.name === "@import"))), x = z("@layer", "properties", []);
            x.src = v[0].src, w.splice(y1 < 0 ? w.length : y1, 0, x);
            let S = Y("@layer properties", [
                z("@supports", "((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b))))", v)
            ]);
            S.src = v[0].src, S.nodes[0].src = v[0].src, w.push(S);
        }
    }
    return w;
}
function ie(r, t) {
    let i = 0, e = {
        file: null,
        code: ""
    };
    function o(l) {
        let d = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
        let u = "", f = "  ".repeat(d);
        if (l.kind === "declaration") {
            if (u += "".concat(f).concat(l.property, ": ").concat(l.value).concat(l.important ? " !important" : "", ";\n"), t) {
                var _l_value;
                i += f.length;
                let g = i;
                var _l_value_length;
                i += l.property.length, i += 2, i += (_l_value_length = (_l_value = l.value) === null || _l_value === void 0 ? void 0 : _l_value.length) !== null && _l_value_length !== void 0 ? _l_value_length : 0, l.important && (i += 11);
                let m = i;
                i += 2, l.dst = [
                    e,
                    g,
                    m
                ];
            }
        } else if (l.kind === "rule") {
            if (u += "".concat(f).concat(l.selector, " {\n"), t) {
                i += f.length;
                let g = i;
                i += l.selector.length, i += 1;
                let m = i;
                l.dst = [
                    e,
                    g,
                    m
                ], i += 2;
            }
            for (let g of l.nodes)u += o(g, d + 1);
            u += "".concat(f, "}\n"), t && (i += f.length, i += 2);
        } else if (l.kind === "at-rule") {
            if (l.nodes.length === 0) {
                let g = "".concat(f).concat(l.name, " ").concat(l.params, ";\n");
                if (t) {
                    i += f.length;
                    let m = i;
                    i += l.name.length, i += 1, i += l.params.length;
                    let p = i;
                    i += 2, l.dst = [
                        e,
                        m,
                        p
                    ];
                }
                return g;
            }
            if (u += "".concat(f).concat(l.name).concat(l.params ? " ".concat(l.params, " ") : " ", "{\n"), t) {
                i += f.length;
                let g = i;
                i += l.name.length, l.params && (i += 1, i += l.params.length), i += 1;
                let m = i;
                l.dst = [
                    e,
                    g,
                    m
                ], i += 2;
            }
            for (let g of l.nodes)u += o(g, d + 1);
            u += "".concat(f, "}\n"), t && (i += f.length, i += 2);
        } else if (l.kind === "comment") {
            if (u += "".concat(f, "/*").concat(l.value, "*/\n"), t) {
                i += f.length;
                let g = i;
                i += 2 + l.value.length + 2;
                let m = i;
                l.dst = [
                    e,
                    g,
                    m
                ], i += 1;
            }
        } else if (l.kind === "context" || l.kind === "at-root") return "";
        return u;
    }
    let s = "";
    for (let l of r)s += o(l, 0);
    return e.code = s, s;
}
function vi(r, t) {
    let i = [];
    return j(r, (e, param)=>{
        let { path: o } = param;
        if (t(e)) return i = [
            ...o
        ], 2;
    }), i;
}
function Xt(r, t, i) {
    let e = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : new Set;
    if (e.has(r) || (e.add(r), t.getOptions(r) & 24)) return !0;
    {
        var _i_get;
        let s = (_i_get = i.get(r)) !== null && _i_get !== void 0 ? _i_get : [];
        for (let l of s)if (Xt(l, t, i, e)) return !0;
    }
    return !1;
}
function Qt(r) {
    return r.split(/[\s,]+/);
}
function ce(r) {
    if (r.indexOf("(") === -1) return ke(r);
    let t = J(r);
    return mt(t), r = Z(t), r = (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["a"])(r), r;
}
function ke(r) {
    let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
    let i = "";
    for(let e = 0; e < r.length; e++){
        let o = r[e];
        o === "\\" && r[e + 1] === "_" ? (i += "_", e += 1) : o === "_" && !t ? i += " " : i += o;
    }
    return i;
}
function mt(r) {
    for (let t of r)switch(t.kind){
        case "function":
            {
                if (t.value === "url" || t.value.endsWith("_url")) {
                    t.value = ke(t.value);
                    break;
                }
                if (t.value === "var" || t.value.endsWith("_var") || t.value === "theme" || t.value.endsWith("_theme")) {
                    t.value = ke(t.value);
                    for(let i = 0; i < t.nodes.length; i++){
                        if (i == 0 && t.nodes[i].kind === "word") {
                            t.nodes[i].value = ke(t.nodes[i].value, !0);
                            continue;
                        }
                        mt([
                            t.nodes[i]
                        ]);
                    }
                    break;
                }
                t.value = ke(t.value), mt(t.nodes);
                break;
            }
        case "separator":
        case "word":
            {
                t.value = ke(t.value);
                break;
            }
        default:
            wi(t);
    }
}
function wi(r) {
    throw new Error("Unexpected value: ".concat(r));
}
var gt = new Uint8Array(256);
function se(r) {
    let t = 0, i = r.length;
    for(let e = 0; e < i; e++){
        let o = r.charCodeAt(e);
        switch(o){
            case 92:
                e += 1;
                break;
            case 39:
            case 34:
                for(; ++e < i;){
                    let s = r.charCodeAt(e);
                    if (s === 92) {
                        e += 1;
                        continue;
                    }
                    if (s === o) break;
                }
                break;
            case 40:
                gt[t] = 41, t++;
                break;
            case 91:
                gt[t] = 93, t++;
                break;
            case 123:
                break;
            case 93:
            case 125:
            case 41:
                if (t === 0) return !1;
                t > 0 && o === gt[t - 1] && t--;
                break;
            case 59:
                if (t === 0) return !1;
                break;
        }
    }
    return !0;
}
var yi = 58, er = 45, tr = 97, rr = 122;
function* ir(r, t) {
    let i = (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["b"])(r, ":");
    if (t.theme.prefix) {
        if (i.length === 1 || i[0] !== t.theme.prefix) return null;
        i.shift();
    }
    let e = i.pop(), o = [];
    for(let m = i.length - 1; m >= 0; --m){
        let p = t.parseVariant(i[m]);
        if (p === null) return;
        o.push(p);
    }
    let s = !1;
    e[e.length - 1] === "!" ? (s = !0, e = e.slice(0, -1)) : e[0] === "!" && (s = !0, e = e.slice(1)), t.utilities.has(e, "static") && !e.includes("[") && (yield {
        kind: "static",
        root: e,
        variants: o,
        important: s,
        raw: r
    });
    let [l, d = null, u] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["b"])(e, "/");
    if (u) return;
    let f = d === null ? null : ht(d);
    if (d !== null && f === null) return;
    if (l[0] === "[") {
        if (l[l.length - 1] !== "]") return;
        let m = l.charCodeAt(1);
        if (m !== er && !(m >= tr && m <= rr)) return;
        l = l.slice(1, -1);
        let p = l.indexOf(":");
        if (p === -1 || p === 0 || p === l.length - 1) return;
        let w = l.slice(0, p), v = ce(l.slice(p + 1));
        if (!se(v)) return;
        yield {
            kind: "arbitrary",
            property: w,
            value: v,
            modifier: f,
            variants: o,
            important: s,
            raw: r
        };
        return;
    }
    let g;
    if (l[l.length - 1] === "]") {
        let m = l.indexOf("-[");
        if (m === -1) return;
        let p = l.slice(0, m);
        if (!t.utilities.has(p, "functional")) return;
        let w = l.slice(m + 1);
        g = [
            [
                p,
                w
            ]
        ];
    } else if (l[l.length - 1] === ")") {
        let m = l.indexOf("-(");
        if (m === -1) return;
        let p = l.slice(0, m);
        if (!t.utilities.has(p, "functional")) return;
        let w = l.slice(m + 2, -1), v = (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["b"])(w, ":"), y1 = null;
        if (v.length === 2 && (y1 = v[0], w = v[1]), w[0] !== "-" || w[1] !== "-" || !se(w)) return;
        g = [
            [
                p,
                y1 === null ? "[var(".concat(w, ")]") : "[".concat(y1, ":var(").concat(w, ")]")
            ]
        ];
    } else g = or(l, (m)=>t.utilities.has(m, "functional"));
    for (let [m, p] of g){
        let w = {
            kind: "functional",
            root: m,
            modifier: f,
            value: null,
            variants: o,
            important: s,
            raw: r
        };
        if (p === null) {
            yield w;
            continue;
        }
        {
            let v = p.indexOf("[");
            if (v !== -1) {
                if (p[p.length - 1] !== "]") return;
                let x = ce(p.slice(v + 1, -1));
                if (!se(x)) continue;
                let S = "";
                for(let C = 0; C < x.length; C++){
                    let b = x.charCodeAt(C);
                    if (b === yi) {
                        S = x.slice(0, C), x = x.slice(C + 1);
                        break;
                    }
                    if (!(b === er || b >= tr && b <= rr)) break;
                }
                if (x.length === 0 || x.trim().length === 0) continue;
                w.value = {
                    kind: "arbitrary",
                    dataType: S || null,
                    value: x
                };
            } else {
                var _w_modifier;
                let x = d === null || ((_w_modifier = w.modifier) === null || _w_modifier === void 0 ? void 0 : _w_modifier.kind) === "arbitrary" ? null : "".concat(p, "/").concat(d);
                w.value = {
                    kind: "named",
                    value: p,
                    fraction: x
                };
            }
        }
        yield w;
    }
}
function ht(r) {
    if (r[0] === "[" && r[r.length - 1] === "]") {
        let t = ce(r.slice(1, -1));
        return !se(t) || t.length === 0 || t.trim().length === 0 ? null : {
            kind: "arbitrary",
            value: t
        };
    }
    return r[0] === "(" && r[r.length - 1] === ")" ? (r = r.slice(1, -1), r[0] !== "-" || r[1] !== "-" || !se(r) ? null : (r = "var(".concat(r, ")"), {
        kind: "arbitrary",
        value: ce(r)
    })) : {
        kind: "named",
        value: r
    };
}
function nr(r, t) {
    if (r[0] === "[" && r[r.length - 1] === "]") {
        if (r[1] === "@" && r.includes("&")) return null;
        let i = ce(r.slice(1, -1));
        if (!se(i) || i.length === 0 || i.trim().length === 0) return null;
        let e = i[0] === ">" || i[0] === "+" || i[0] === "~";
        return !e && i[0] !== "@" && !i.includes("&") && (i = "&:is(".concat(i, ")")), {
            kind: "arbitrary",
            selector: i,
            relative: e
        };
    }
    {
        let [i, e = null, o] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["b"])(r, "/");
        if (o) return null;
        let s = or(i, (l)=>t.variants.has(l));
        for (let [l, d] of s)switch(t.variants.kind(l)){
            case "static":
                return d !== null || e !== null ? null : {
                    kind: "static",
                    root: l
                };
            case "functional":
                {
                    let u = e === null ? null : ht(e);
                    if (e !== null && u === null) return null;
                    if (d === null) return {
                        kind: "functional",
                        root: l,
                        modifier: u,
                        value: null
                    };
                    if (d[d.length - 1] === "]") {
                        if (d[0] !== "[") continue;
                        let f = ce(d.slice(1, -1));
                        return !se(f) || f.length === 0 || f.trim().length === 0 ? null : {
                            kind: "functional",
                            root: l,
                            modifier: u,
                            value: {
                                kind: "arbitrary",
                                value: f
                            }
                        };
                    }
                    if (d[d.length - 1] === ")") {
                        if (d[0] !== "(") continue;
                        let f = ce(d.slice(1, -1));
                        return !se(f) || f.length === 0 || f.trim().length === 0 || f[0] !== "-" || f[1] !== "-" ? null : {
                            kind: "functional",
                            root: l,
                            modifier: u,
                            value: {
                                kind: "arbitrary",
                                value: "var(".concat(f, ")")
                            }
                        };
                    }
                    return {
                        kind: "functional",
                        root: l,
                        modifier: u,
                        value: {
                            kind: "named",
                            value: d
                        }
                    };
                }
            case "compound":
                {
                    if (d === null) return null;
                    let u = t.parseVariant(d);
                    if (u === null || !t.variants.compoundsWith(l, u)) return null;
                    let f = e === null ? null : ht(e);
                    return e !== null && f === null ? null : {
                        kind: "compound",
                        root: l,
                        modifier: f,
                        variant: u
                    };
                }
        }
    }
    return null;
}
function* or(r, t) {
    t(r) && (yield [
        r,
        null
    ]);
    let i = r.lastIndexOf("-");
    for(; i > 0;){
        let e = r.slice(0, i);
        if (t(e)) {
            let o = [
                e,
                r.slice(i + 1)
            ];
            if (o[1] === "" || o[0] === "@" && t("@") && r[i] === "-") break;
            yield o;
        }
        i = r.lastIndexOf("-", i - 1);
    }
    r[0] === "@" && t("@") && (yield [
        "@",
        r.slice(1)
    ]);
}
function ar(r, t) {
    let i = [];
    for (let o of t.variants)i.unshift(He(o));
    r.theme.prefix && i.unshift(r.theme.prefix);
    let e = "";
    if (t.kind === "static" && (e += t.root), t.kind === "functional" && (e += t.root, t.value)) if (t.value.kind === "arbitrary") {
        if (t.value !== null) {
            let o = wt(t.value.value), s = o ? t.value.value.slice(4, -1) : t.value.value, [l, d] = o ? [
                "(",
                ")"
            ] : [
                "[",
                "]"
            ];
            t.value.dataType ? e += "-".concat(l).concat(t.value.dataType, ":").concat(be(s)).concat(d) : e += "-".concat(l).concat(be(s)).concat(d);
        }
    } else t.value.kind === "named" && (e += "-".concat(t.value.value));
    return t.kind === "arbitrary" && (e += "[".concat(t.property, ":").concat(be(t.value), "]")), (t.kind === "arbitrary" || t.kind === "functional") && (e += lr(t.modifier)), t.important && (e += "!"), i.push(e), i.join(":");
}
function lr(r) {
    if (r === null) return "";
    let t = wt(r.value), i = t ? r.value.slice(4, -1) : r.value, [e, o] = t ? [
        "(",
        ")"
    ] : [
        "[",
        "]"
    ];
    return r.kind === "arbitrary" ? "/".concat(e).concat(be(i)).concat(o) : r.kind === "named" ? "/".concat(r.value) : "";
}
function He(r) {
    if (r.kind === "static") return r.root;
    if (r.kind === "arbitrary") return "[".concat(be(xi(r.selector)), "]");
    let t = "";
    if (r.kind === "functional") {
        t += r.root;
        let i = r.root !== "@";
        if (r.value) if (r.value.kind === "arbitrary") {
            let e = wt(r.value.value), o = e ? r.value.value.slice(4, -1) : r.value.value, [s, l] = e ? [
                "(",
                ")"
            ] : [
                "[",
                "]"
            ];
            t += "".concat(i ? "-" : "").concat(s).concat(be(o)).concat(l);
        } else r.value.kind === "named" && (t += "".concat(i ? "-" : "").concat(r.value.value));
    }
    return r.kind === "compound" && (t += r.root, t += "-", t += He(r.variant)), (r.kind === "functional" || r.kind === "compound") && (t += lr(r.modifier)), t;
}
var ki = new W((r)=>{
    let t = J(r), i = new Set;
    return ee(t, (e, param)=>{
        let { parent: o } = param;
        var _o_nodes;
        let s = o === null ? t : (_o_nodes = o.nodes) !== null && _o_nodes !== void 0 ? _o_nodes : [];
        if (e.kind === "word" && (e.value === "+" || e.value === "-" || e.value === "*" || e.value === "/")) {
            var _s_indexOf;
            let l = (_s_indexOf = s.indexOf(e)) !== null && _s_indexOf !== void 0 ? _s_indexOf : -1;
            if (l === -1) return;
            let d = s[l - 1];
            if ((d === null || d === void 0 ? void 0 : d.kind) !== "separator" || d.value !== " ") return;
            let u = s[l + 1];
            if ((u === null || u === void 0 ? void 0 : u.kind) !== "separator" || u.value !== " ") return;
            i.add(d), i.add(u);
        } else e.kind === "separator" && e.value.trim() === "/" ? e.value = "/" : e.kind === "separator" && e.value.length > 0 && e.value.trim() === "" ? (s[0] === e || s[s.length - 1] === e) && i.add(e) : e.kind === "separator" && e.value.trim() === "," && (e.value = ",");
    }), i.size > 0 && ee(t, (e, param)=>{
        let { replaceWith: o } = param;
        i.has(e) && (i.delete(e), o([]));
    }), vt(t), Z(t);
});
function be(r) {
    return ki.get(r);
}
var bi = new W((r)=>{
    let t = J(r);
    return t.length === 3 && t[0].kind === "word" && t[0].value === "&" && t[1].kind === "separator" && t[1].value === ":" && t[2].kind === "function" && t[2].value === "is" ? Z(t[2].nodes) : r;
});
function xi(r) {
    return bi.get(r);
}
function vt(r) {
    for (let t of r)switch(t.kind){
        case "function":
            {
                if (t.value === "url" || t.value.endsWith("_url")) {
                    t.value = Ee(t.value);
                    break;
                }
                if (t.value === "var" || t.value.endsWith("_var") || t.value === "theme" || t.value.endsWith("_theme")) {
                    t.value = Ee(t.value);
                    for(let i = 0; i < t.nodes.length; i++)vt([
                        t.nodes[i]
                    ]);
                    break;
                }
                t.value = Ee(t.value), vt(t.nodes);
                break;
            }
        case "separator":
            t.value = Ee(t.value);
            break;
        case "word":
            {
                (t.value[0] !== "-" || t.value[1] !== "-") && (t.value = Ee(t.value));
                break;
            }
        default:
            Ci(t);
    }
}
var Ai = new W((r)=>{
    let t = J(r);
    return t.length === 1 && t[0].kind === "function" && t[0].value === "var";
});
function wt(r) {
    return Ai.get(r);
}
function Ci(r) {
    throw new Error("Unexpected value: ".concat(r));
}
function Ee(r) {
    return r.replaceAll("_", String.raw(_templateObject())).replaceAll(" ", "_");
}
function we(r, t, i) {
    if (r === t) return 0;
    let e = r.indexOf("("), o = t.indexOf("("), s = e === -1 ? r.replace(/[\d.]+/g, "") : r.slice(0, e), l = o === -1 ? t.replace(/[\d.]+/g, "") : t.slice(0, o), d = (s === l ? 0 : s < l ? -1 : 1) || (i === "asc" ? parseInt(r) - parseInt(t) : parseInt(t) - parseInt(r));
    return Number.isNaN(d) ? r < t ? -1 : 1 : d;
}
var Vi = new Set([
    "inset",
    "inherit",
    "initial",
    "revert",
    "unset"
]), sr = /^-?(\d+|\.\d+)(.*?)$/g;
function Re(r, t) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["b"])(r, ",").map((e)=>{
        e = e.trim();
        let o = (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["b"])(e, " ").filter((f)=>f.trim() !== ""), s = null, l = null, d = null;
        for (let f of o)Vi.has(f) || (sr.test(f) ? (l === null ? l = f : d === null && (d = f), sr.lastIndex = 0) : s === null && (s = f));
        if (l === null || d === null) return e;
        let u = t(s !== null && s !== void 0 ? s : "currentcolor");
        return s !== null ? e.replace(s, u) : "".concat(e, " ").concat(u);
    }).join(", ");
}
var Ni = /^-?[a-z][a-zA-Z0-9/%._-]*$/, Si = /^-?[a-z][a-zA-Z0-9/%._-]*-\*$/, Ze = [
    "0",
    "0.5",
    "1",
    "1.5",
    "2",
    "2.5",
    "3",
    "3.5",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    "10",
    "11",
    "12",
    "14",
    "16",
    "20",
    "24",
    "28",
    "32",
    "36",
    "40",
    "44",
    "48",
    "52",
    "56",
    "60",
    "64",
    "72",
    "80",
    "96"
], yt = class {
    static(t, i) {
        this.utilities.get(t).push({
            kind: "static",
            compileFn: i
        });
    }
    functional(t, i, e) {
        this.utilities.get(t).push({
            kind: "functional",
            compileFn: i,
            options: e
        });
    }
    has(t, i) {
        return this.utilities.has(t) && this.utilities.get(t).some((e)=>e.kind === i);
    }
    get(t) {
        return this.utilities.has(t) ? this.utilities.get(t) : [];
    }
    getCompletions(t) {
        var _this_completions_get;
        var _this_completions_get1;
        return (_this_completions_get1 = (_this_completions_get = this.completions.get(t)) === null || _this_completions_get === void 0 ? void 0 : _this_completions_get()) !== null && _this_completions_get1 !== void 0 ? _this_completions_get1 : [];
    }
    suggest(t, i) {
        let e = this.completions.get(t);
        e ? this.completions.set(t, ()=>[
                ...e === null || e === void 0 ? void 0 : e(),
                ...i === null || i === void 0 ? void 0 : i()
            ]) : this.completions.set(t, i);
    }
    keys(t) {
        let i = [];
        for (let [e, o] of this.utilities.entries())for (let s of o)if (s.kind === t) {
            i.push(e);
            break;
        }
        return i;
    }
    constructor(){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "utilities", new W(()=>[]));
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "completions", new Map);
    }
};
function V(r, t, i) {
    return z("@property", r, [
        n("syntax", i ? '"'.concat(i, '"') : '"*"'),
        n("inherits", "false"),
        ...t ? [
            n("initial-value", t)
        ] : []
    ]);
}
function Q(r, t) {
    if (t === null) return r;
    let i = Number(t);
    return Number.isNaN(i) || (t = "".concat(i * 100, "%")), t === "100%" ? r : "color-mix(in oklab, ".concat(r, " ").concat(t, ", transparent)");
}
function fr(r, t) {
    let i = Number(t);
    return Number.isNaN(i) || (t = "".concat(i * 100, "%")), "oklab(from ".concat(r, " l a b / ").concat(t, ")");
}
function X(r, t, i) {
    if (!t) return r;
    if (t.kind === "arbitrary") return Q(r, t.value);
    let e = i.resolve(t.value, [
        "--opacity"
    ]);
    return e ? Q(r, e) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["g"])(t.value) ? Q(r, "".concat(t.value, "%")) : null;
}
function te(r, t, i) {
    let e = null;
    switch(r.value.value){
        case "inherit":
            {
                e = "inherit";
                break;
            }
        case "transparent":
            {
                e = "transparent";
                break;
            }
        case "current":
            {
                e = "currentcolor";
                break;
            }
        default:
            {
                e = t.resolve(r.value.value, i);
                break;
            }
    }
    return e ? X(e, r.modifier, t) : null;
}
var cr = /(\d+)_(\d+)/g;
function pr(r) {
    let t = new yt;
    function i(a, c) {
        function* h(k) {
            for (let $ of r.keysInNamespaces(k))yield $.replace(cr, (P, N, T)=>"".concat(N, ".").concat(T));
        }
        let A = [
            "1/2",
            "1/3",
            "2/3",
            "1/4",
            "2/4",
            "3/4",
            "1/5",
            "2/5",
            "3/5",
            "4/5",
            "1/6",
            "2/6",
            "3/6",
            "4/6",
            "5/6",
            "1/12",
            "2/12",
            "3/12",
            "4/12",
            "5/12",
            "6/12",
            "7/12",
            "8/12",
            "9/12",
            "10/12",
            "11/12"
        ];
        t.suggest(a, ()=>{
            let k = [];
            for (let $ of c()){
                if (typeof $ == "string") {
                    k.push({
                        values: [
                            $
                        ],
                        modifiers: []
                    });
                    continue;
                }
                var _$_values, _$_valueThemeKeys, _$_modifiers, _$_modifierThemeKeys;
                let P = [
                    ...(_$_values = $.values) !== null && _$_values !== void 0 ? _$_values : [],
                    ...h((_$_valueThemeKeys = $.valueThemeKeys) !== null && _$_valueThemeKeys !== void 0 ? _$_valueThemeKeys : [])
                ], N = [
                    ...(_$_modifiers = $.modifiers) !== null && _$_modifiers !== void 0 ? _$_modifiers : [],
                    ...h((_$_modifierThemeKeys = $.modifierThemeKeys) !== null && _$_modifierThemeKeys !== void 0 ? _$_modifierThemeKeys : [])
                ];
                $.supportsFractions && P.push(...A), $.hasDefaultValue && P.unshift(null), k.push({
                    supportsNegative: $.supportsNegative,
                    values: P,
                    modifiers: N
                });
            }
            return k;
        });
    }
    function e(a, c) {
        t.static(a, ()=>c.map((h)=>typeof h == "function" ? h() : n(h[0], h[1])));
    }
    function o(a, c) {
        function h(param) {
            let { negative: A } = param;
            return (k)=>{
                let $ = null, P = null;
                if (k.value) if (k.value.kind === "arbitrary") {
                    if (k.modifier) return;
                    $ = k.value.value, P = k.value.dataType;
                } else {
                    var _k_value_fraction, _c_themeKeys;
                    if ($ = r.resolve((_k_value_fraction = k.value.fraction) !== null && _k_value_fraction !== void 0 ? _k_value_fraction : k.value.value, (_c_themeKeys = c.themeKeys) !== null && _c_themeKeys !== void 0 ? _c_themeKeys : []), $ === null && c.supportsFractions && k.value.fraction) {
                        let [N, T] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["b"])(k.value.fraction, "/");
                        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(N) || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(T)) return;
                        $ = "calc(".concat(k.value.fraction, " * 100%)");
                    }
                    if ($ === null && A && c.handleNegativeBareValue) {
                        if ($ = c.handleNegativeBareValue(k.value), !($ === null || $ === void 0 ? void 0 : $.includes("/")) && k.modifier) return;
                        if ($ !== null) return c.handle($, null);
                    }
                    if ($ === null && c.handleBareValue && ($ = c.handleBareValue(k.value), !($ === null || $ === void 0 ? void 0 : $.includes("/")) && k.modifier)) return;
                    if ($ === null && !A && c.staticValues && !k.modifier) {
                        let N = c.staticValues[k.value.value];
                        if (N) return N;
                    }
                }
                else {
                    if (k.modifier) return;
                    var _c_themeKeys1;
                    $ = c.defaultValue !== void 0 ? c.defaultValue : r.resolve(null, (_c_themeKeys1 = c.themeKeys) !== null && _c_themeKeys1 !== void 0 ? _c_themeKeys1 : []);
                }
                if ($ !== null) return c.handle(A ? "calc(".concat($, " * -1)") : $, P);
            };
        }
        if (c.supportsNegative && t.functional("-".concat(a), h({
            negative: !0
        })), t.functional(a, h({
            negative: !1
        })), i(a, ()=>{
            var _c_themeKeys;
            return [
                {
                    supportsNegative: c.supportsNegative,
                    valueThemeKeys: (_c_themeKeys = c.themeKeys) !== null && _c_themeKeys !== void 0 ? _c_themeKeys : [],
                    hasDefaultValue: c.defaultValue !== void 0 && c.defaultValue !== null,
                    supportsFractions: c.supportsFractions
                }
            ];
        }), c.staticValues && Object.keys(c.staticValues).length > 0) {
            let A = Object.keys(c.staticValues);
            i(a, ()=>[
                    {
                        values: A
                    }
                ]);
        }
    }
    function s(a, c) {
        t.functional(a, (h)=>{
            if (!h.value) return;
            let A = null;
            if (h.value.kind === "arbitrary" ? (A = h.value.value, A = X(A, h.modifier, r)) : A = te(h, r, c.themeKeys), A !== null) return c.handle(A);
        }), i(a, ()=>[
                {
                    values: [
                        "current",
                        "inherit",
                        "transparent"
                    ],
                    valueThemeKeys: c.themeKeys,
                    modifiers: Array.from({
                        length: 21
                    }, (h, A)=>"".concat(A * 5))
                }
            ]);
    }
    function l(a, c, h) {
        let { supportsNegative: A = !1, supportsFractions: k = !1, staticValues: $ } = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
        A && t.static("-".concat(a, "-px"), ()=>h("-1px")), t.static("".concat(a, "-px"), ()=>h("1px")), o(a, {
            themeKeys: c,
            supportsFractions: k,
            supportsNegative: A,
            defaultValue: null,
            handleBareValue: (param)=>{
                let { value: P } = param;
                let N = r.resolve(null, [
                    "--spacing"
                ]);
                return !N || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["f"])(P) ? null : "calc(".concat(N, " * ").concat(P, ")");
            },
            handleNegativeBareValue: (param)=>{
                let { value: P } = param;
                let N = r.resolve(null, [
                    "--spacing"
                ]);
                return !N || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["f"])(P) ? null : "calc(".concat(N, " * -").concat(P, ")");
            },
            handle: h,
            staticValues: $
        }), i(a, ()=>[
                {
                    values: r.get([
                        "--spacing"
                    ]) ? Ze : [],
                    supportsNegative: A,
                    supportsFractions: k,
                    valueThemeKeys: c
                }
            ]);
    }
    e("sr-only", [
        [
            "position",
            "absolute"
        ],
        [
            "width",
            "1px"
        ],
        [
            "height",
            "1px"
        ],
        [
            "padding",
            "0"
        ],
        [
            "margin",
            "-1px"
        ],
        [
            "overflow",
            "hidden"
        ],
        [
            "clip-path",
            "inset(50%)"
        ],
        [
            "white-space",
            "nowrap"
        ],
        [
            "border-width",
            "0"
        ]
    ]), e("not-sr-only", [
        [
            "position",
            "static"
        ],
        [
            "width",
            "auto"
        ],
        [
            "height",
            "auto"
        ],
        [
            "padding",
            "0"
        ],
        [
            "margin",
            "0"
        ],
        [
            "overflow",
            "visible"
        ],
        [
            "clip-path",
            "none"
        ],
        [
            "white-space",
            "normal"
        ]
    ]), e("pointer-events-none", [
        [
            "pointer-events",
            "none"
        ]
    ]), e("pointer-events-auto", [
        [
            "pointer-events",
            "auto"
        ]
    ]), e("visible", [
        [
            "visibility",
            "visible"
        ]
    ]), e("invisible", [
        [
            "visibility",
            "hidden"
        ]
    ]), e("collapse", [
        [
            "visibility",
            "collapse"
        ]
    ]), e("static", [
        [
            "position",
            "static"
        ]
    ]), e("fixed", [
        [
            "position",
            "fixed"
        ]
    ]), e("absolute", [
        [
            "position",
            "absolute"
        ]
    ]), e("relative", [
        [
            "position",
            "relative"
        ]
    ]), e("sticky", [
        [
            "position",
            "sticky"
        ]
    ]);
    for (let [a, c] of [
        [
            "inset",
            "inset"
        ],
        [
            "inset-x",
            "inset-inline"
        ],
        [
            "inset-y",
            "inset-block"
        ],
        [
            "start",
            "inset-inline-start"
        ],
        [
            "end",
            "inset-inline-end"
        ],
        [
            "top",
            "top"
        ],
        [
            "right",
            "right"
        ],
        [
            "bottom",
            "bottom"
        ],
        [
            "left",
            "left"
        ]
    ])e("".concat(a, "-auto"), [
        [
            c,
            "auto"
        ]
    ]), e("".concat(a, "-full"), [
        [
            c,
            "100%"
        ]
    ]), e("-".concat(a, "-full"), [
        [
            c,
            "-100%"
        ]
    ]), l(a, [
        "--inset",
        "--spacing"
    ], (h)=>[
            n(c, h)
        ], {
        supportsNegative: !0,
        supportsFractions: !0
    });
    e("isolate", [
        [
            "isolation",
            "isolate"
        ]
    ]), e("isolation-auto", [
        [
            "isolation",
            "auto"
        ]
    ]), o("z", {
        supportsNegative: !0,
        handleBareValue: (param)=>{
            let { value: a } = param;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(a) ? a : null;
        },
        themeKeys: [
            "--z-index"
        ],
        handle: (a)=>[
                n("z-index", a)
            ],
        staticValues: {
            auto: [
                n("z-index", "auto")
            ]
        }
    }), i("z", ()=>[
            {
                supportsNegative: !0,
                values: [
                    "0",
                    "10",
                    "20",
                    "30",
                    "40",
                    "50"
                ],
                valueThemeKeys: [
                    "--z-index"
                ]
            }
        ]), o("order", {
        supportsNegative: !0,
        handleBareValue: (param)=>{
            let { value: a } = param;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(a) ? a : null;
        },
        themeKeys: [
            "--order"
        ],
        handle: (a)=>[
                n("order", a)
            ],
        staticValues: {
            first: [
                n("order", "-9999")
            ],
            last: [
                n("order", "9999")
            ]
        }
    }), i("order", ()=>[
            {
                supportsNegative: !0,
                values: Array.from({
                    length: 12
                }, (a, c)=>"".concat(c + 1)),
                valueThemeKeys: [
                    "--order"
                ]
            }
        ]), o("col", {
        supportsNegative: !0,
        handleBareValue: (param)=>{
            let { value: a } = param;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(a) ? a : null;
        },
        themeKeys: [
            "--grid-column"
        ],
        handle: (a)=>[
                n("grid-column", a)
            ],
        staticValues: {
            auto: [
                n("grid-column", "auto")
            ]
        }
    }), o("col-span", {
        handleBareValue: (param)=>{
            let { value: a } = param;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(a) ? a : null;
        },
        handle: (a)=>[
                n("grid-column", "span ".concat(a, " / span ").concat(a))
            ],
        staticValues: {
            full: [
                n("grid-column", "1 / -1")
            ]
        }
    }), o("col-start", {
        supportsNegative: !0,
        handleBareValue: (param)=>{
            let { value: a } = param;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(a) ? a : null;
        },
        themeKeys: [
            "--grid-column-start"
        ],
        handle: (a)=>[
                n("grid-column-start", a)
            ],
        staticValues: {
            auto: [
                n("grid-column-start", "auto")
            ]
        }
    }), o("col-end", {
        supportsNegative: !0,
        handleBareValue: (param)=>{
            let { value: a } = param;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(a) ? a : null;
        },
        themeKeys: [
            "--grid-column-end"
        ],
        handle: (a)=>[
                n("grid-column-end", a)
            ],
        staticValues: {
            auto: [
                n("grid-column-end", "auto")
            ]
        }
    }), i("col-span", ()=>[
            {
                values: Array.from({
                    length: 12
                }, (a, c)=>"".concat(c + 1)),
                valueThemeKeys: []
            }
        ]), i("col-start", ()=>[
            {
                supportsNegative: !0,
                values: Array.from({
                    length: 13
                }, (a, c)=>"".concat(c + 1)),
                valueThemeKeys: [
                    "--grid-column-start"
                ]
            }
        ]), i("col-end", ()=>[
            {
                supportsNegative: !0,
                values: Array.from({
                    length: 13
                }, (a, c)=>"".concat(c + 1)),
                valueThemeKeys: [
                    "--grid-column-end"
                ]
            }
        ]), o("row", {
        supportsNegative: !0,
        handleBareValue: (param)=>{
            let { value: a } = param;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(a) ? a : null;
        },
        themeKeys: [
            "--grid-row"
        ],
        handle: (a)=>[
                n("grid-row", a)
            ],
        staticValues: {
            auto: [
                n("grid-row", "auto")
            ]
        }
    }), o("row-span", {
        themeKeys: [],
        handleBareValue: (param)=>{
            let { value: a } = param;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(a) ? a : null;
        },
        handle: (a)=>[
                n("grid-row", "span ".concat(a, " / span ").concat(a))
            ],
        staticValues: {
            full: [
                n("grid-row", "1 / -1")
            ]
        }
    }), o("row-start", {
        supportsNegative: !0,
        handleBareValue: (param)=>{
            let { value: a } = param;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(a) ? a : null;
        },
        themeKeys: [
            "--grid-row-start"
        ],
        handle: (a)=>[
                n("grid-row-start", a)
            ],
        staticValues: {
            auto: [
                n("grid-row-start", "auto")
            ]
        }
    }), o("row-end", {
        supportsNegative: !0,
        handleBareValue: (param)=>{
            let { value: a } = param;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(a) ? a : null;
        },
        themeKeys: [
            "--grid-row-end"
        ],
        handle: (a)=>[
                n("grid-row-end", a)
            ],
        staticValues: {
            auto: [
                n("grid-row-end", "auto")
            ]
        }
    }), i("row-span", ()=>[
            {
                values: Array.from({
                    length: 12
                }, (a, c)=>"".concat(c + 1)),
                valueThemeKeys: []
            }
        ]), i("row-start", ()=>[
            {
                supportsNegative: !0,
                values: Array.from({
                    length: 13
                }, (a, c)=>"".concat(c + 1)),
                valueThemeKeys: [
                    "--grid-row-start"
                ]
            }
        ]), i("row-end", ()=>[
            {
                supportsNegative: !0,
                values: Array.from({
                    length: 13
                }, (a, c)=>"".concat(c + 1)),
                valueThemeKeys: [
                    "--grid-row-end"
                ]
            }
        ]), e("float-start", [
        [
            "float",
            "inline-start"
        ]
    ]), e("float-end", [
        [
            "float",
            "inline-end"
        ]
    ]), e("float-right", [
        [
            "float",
            "right"
        ]
    ]), e("float-left", [
        [
            "float",
            "left"
        ]
    ]), e("float-none", [
        [
            "float",
            "none"
        ]
    ]), e("clear-start", [
        [
            "clear",
            "inline-start"
        ]
    ]), e("clear-end", [
        [
            "clear",
            "inline-end"
        ]
    ]), e("clear-right", [
        [
            "clear",
            "right"
        ]
    ]), e("clear-left", [
        [
            "clear",
            "left"
        ]
    ]), e("clear-both", [
        [
            "clear",
            "both"
        ]
    ]), e("clear-none", [
        [
            "clear",
            "none"
        ]
    ]);
    for (let [a, c] of [
        [
            "m",
            "margin"
        ],
        [
            "mx",
            "margin-inline"
        ],
        [
            "my",
            "margin-block"
        ],
        [
            "ms",
            "margin-inline-start"
        ],
        [
            "me",
            "margin-inline-end"
        ],
        [
            "mt",
            "margin-top"
        ],
        [
            "mr",
            "margin-right"
        ],
        [
            "mb",
            "margin-bottom"
        ],
        [
            "ml",
            "margin-left"
        ]
    ])e("".concat(a, "-auto"), [
        [
            c,
            "auto"
        ]
    ]), l(a, [
        "--margin",
        "--spacing"
    ], (h)=>[
            n(c, h)
        ], {
        supportsNegative: !0
    });
    e("box-border", [
        [
            "box-sizing",
            "border-box"
        ]
    ]), e("box-content", [
        [
            "box-sizing",
            "content-box"
        ]
    ]), o("line-clamp", {
        themeKeys: [
            "--line-clamp"
        ],
        handleBareValue: (param)=>{
            let { value: a } = param;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(a) ? a : null;
        },
        handle: (a)=>[
                n("overflow", "hidden"),
                n("display", "-webkit-box"),
                n("-webkit-box-orient", "vertical"),
                n("-webkit-line-clamp", a)
            ],
        staticValues: {
            none: [
                n("overflow", "visible"),
                n("display", "block"),
                n("-webkit-box-orient", "horizontal"),
                n("-webkit-line-clamp", "unset")
            ]
        }
    }), i("line-clamp", ()=>[
            {
                values: [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "6"
                ],
                valueThemeKeys: [
                    "--line-clamp"
                ]
            }
        ]), e("block", [
        [
            "display",
            "block"
        ]
    ]), e("inline-block", [
        [
            "display",
            "inline-block"
        ]
    ]), e("inline", [
        [
            "display",
            "inline"
        ]
    ]), e("hidden", [
        [
            "display",
            "none"
        ]
    ]), e("inline-flex", [
        [
            "display",
            "inline-flex"
        ]
    ]), e("table", [
        [
            "display",
            "table"
        ]
    ]), e("inline-table", [
        [
            "display",
            "inline-table"
        ]
    ]), e("table-caption", [
        [
            "display",
            "table-caption"
        ]
    ]), e("table-cell", [
        [
            "display",
            "table-cell"
        ]
    ]), e("table-column", [
        [
            "display",
            "table-column"
        ]
    ]), e("table-column-group", [
        [
            "display",
            "table-column-group"
        ]
    ]), e("table-footer-group", [
        [
            "display",
            "table-footer-group"
        ]
    ]), e("table-header-group", [
        [
            "display",
            "table-header-group"
        ]
    ]), e("table-row-group", [
        [
            "display",
            "table-row-group"
        ]
    ]), e("table-row", [
        [
            "display",
            "table-row"
        ]
    ]), e("flow-root", [
        [
            "display",
            "flow-root"
        ]
    ]), e("flex", [
        [
            "display",
            "flex"
        ]
    ]), e("grid", [
        [
            "display",
            "grid"
        ]
    ]), e("inline-grid", [
        [
            "display",
            "inline-grid"
        ]
    ]), e("contents", [
        [
            "display",
            "contents"
        ]
    ]), e("list-item", [
        [
            "display",
            "list-item"
        ]
    ]), e("field-sizing-content", [
        [
            "field-sizing",
            "content"
        ]
    ]), e("field-sizing-fixed", [
        [
            "field-sizing",
            "fixed"
        ]
    ]), o("aspect", {
        themeKeys: [
            "--aspect"
        ],
        handleBareValue: (param)=>{
            let { fraction: a } = param;
            if (a === null) return null;
            let [c, h] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["b"])(a, "/");
            return !(0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(c) || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(h) ? null : a;
        },
        handle: (a)=>[
                n("aspect-ratio", a)
            ],
        staticValues: {
            auto: [
                n("aspect-ratio", "auto")
            ],
            square: [
                n("aspect-ratio", "1 / 1")
            ]
        }
    });
    for (let [a, c] of [
        [
            "full",
            "100%"
        ],
        [
            "svw",
            "100svw"
        ],
        [
            "lvw",
            "100lvw"
        ],
        [
            "dvw",
            "100dvw"
        ],
        [
            "svh",
            "100svh"
        ],
        [
            "lvh",
            "100lvh"
        ],
        [
            "dvh",
            "100dvh"
        ],
        [
            "min",
            "min-content"
        ],
        [
            "max",
            "max-content"
        ],
        [
            "fit",
            "fit-content"
        ]
    ])e("size-".concat(a), [
        [
            "--tw-sort",
            "size"
        ],
        [
            "width",
            c
        ],
        [
            "height",
            c
        ]
    ]), e("w-".concat(a), [
        [
            "width",
            c
        ]
    ]), e("h-".concat(a), [
        [
            "height",
            c
        ]
    ]), e("min-w-".concat(a), [
        [
            "min-width",
            c
        ]
    ]), e("min-h-".concat(a), [
        [
            "min-height",
            c
        ]
    ]), e("max-w-".concat(a), [
        [
            "max-width",
            c
        ]
    ]), e("max-h-".concat(a), [
        [
            "max-height",
            c
        ]
    ]);
    e("size-auto", [
        [
            "--tw-sort",
            "size"
        ],
        [
            "width",
            "auto"
        ],
        [
            "height",
            "auto"
        ]
    ]), e("w-auto", [
        [
            "width",
            "auto"
        ]
    ]), e("h-auto", [
        [
            "height",
            "auto"
        ]
    ]), e("min-w-auto", [
        [
            "min-width",
            "auto"
        ]
    ]), e("min-h-auto", [
        [
            "min-height",
            "auto"
        ]
    ]), e("h-lh", [
        [
            "height",
            "1lh"
        ]
    ]), e("min-h-lh", [
        [
            "min-height",
            "1lh"
        ]
    ]), e("max-h-lh", [
        [
            "max-height",
            "1lh"
        ]
    ]), e("w-screen", [
        [
            "width",
            "100vw"
        ]
    ]), e("min-w-screen", [
        [
            "min-width",
            "100vw"
        ]
    ]), e("max-w-screen", [
        [
            "max-width",
            "100vw"
        ]
    ]), e("h-screen", [
        [
            "height",
            "100vh"
        ]
    ]), e("min-h-screen", [
        [
            "min-height",
            "100vh"
        ]
    ]), e("max-h-screen", [
        [
            "max-height",
            "100vh"
        ]
    ]), e("max-w-none", [
        [
            "max-width",
            "none"
        ]
    ]), e("max-h-none", [
        [
            "max-height",
            "none"
        ]
    ]), l("size", [
        "--size",
        "--spacing"
    ], (a)=>[
            n("--tw-sort", "size"),
            n("width", a),
            n("height", a)
        ], {
        supportsFractions: !0
    });
    for (let [a, c, h] of [
        [
            "w",
            [
                "--width",
                "--spacing",
                "--container"
            ],
            "width"
        ],
        [
            "min-w",
            [
                "--min-width",
                "--spacing",
                "--container"
            ],
            "min-width"
        ],
        [
            "max-w",
            [
                "--max-width",
                "--spacing",
                "--container"
            ],
            "max-width"
        ],
        [
            "h",
            [
                "--height",
                "--spacing"
            ],
            "height"
        ],
        [
            "min-h",
            [
                "--min-height",
                "--height",
                "--spacing"
            ],
            "min-height"
        ],
        [
            "max-h",
            [
                "--max-height",
                "--height",
                "--spacing"
            ],
            "max-height"
        ]
    ])l(a, c, (A)=>[
            n(h, A)
        ], {
        supportsFractions: !0
    });
    t.static("container", ()=>{
        let a = [
            ...r.namespace("--breakpoint").values()
        ];
        a.sort((h, A)=>we(h, A, "asc"));
        let c = [
            n("--tw-sort", "--tw-container-component"),
            n("width", "100%")
        ];
        for (let h of a)c.push(z("@media", "(width >= ".concat(h, ")"), [
            n("max-width", h)
        ]));
        return c;
    }), e("flex-auto", [
        [
            "flex",
            "auto"
        ]
    ]), e("flex-initial", [
        [
            "flex",
            "0 auto"
        ]
    ]), e("flex-none", [
        [
            "flex",
            "none"
        ]
    ]), t.functional("flex", (a)=>{
        if (a.value) {
            if (a.value.kind === "arbitrary") return a.modifier ? void 0 : [
                n("flex", a.value.value)
            ];
            if (a.value.fraction) {
                let [c, h] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["b"])(a.value.fraction, "/");
                return !(0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(c) || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(h) ? void 0 : [
                    n("flex", "calc(".concat(a.value.fraction, " * 100%)"))
                ];
            }
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(a.value.value)) return a.modifier ? void 0 : [
                n("flex", a.value.value)
            ];
        }
    }), i("flex", ()=>[
            {
                supportsFractions: !0
            },
            {
                values: Array.from({
                    length: 12
                }, (a, c)=>"".concat(c + 1))
            }
        ]), o("shrink", {
        defaultValue: "1",
        handleBareValue: (param)=>{
            let { value: a } = param;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(a) ? a : null;
        },
        handle: (a)=>[
                n("flex-shrink", a)
            ]
    }), o("grow", {
        defaultValue: "1",
        handleBareValue: (param)=>{
            let { value: a } = param;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(a) ? a : null;
        },
        handle: (a)=>[
                n("flex-grow", a)
            ]
    }), i("shrink", ()=>[
            {
                values: [
                    "0"
                ],
                valueThemeKeys: [],
                hasDefaultValue: !0
            }
        ]), i("grow", ()=>[
            {
                values: [
                    "0"
                ],
                valueThemeKeys: [],
                hasDefaultValue: !0
            }
        ]), e("basis-auto", [
        [
            "flex-basis",
            "auto"
        ]
    ]), e("basis-full", [
        [
            "flex-basis",
            "100%"
        ]
    ]), l("basis", [
        "--flex-basis",
        "--spacing",
        "--container"
    ], (a)=>[
            n("flex-basis", a)
        ], {
        supportsFractions: !0
    }), e("table-auto", [
        [
            "table-layout",
            "auto"
        ]
    ]), e("table-fixed", [
        [
            "table-layout",
            "fixed"
        ]
    ]), e("caption-top", [
        [
            "caption-side",
            "top"
        ]
    ]), e("caption-bottom", [
        [
            "caption-side",
            "bottom"
        ]
    ]), e("border-collapse", [
        [
            "border-collapse",
            "collapse"
        ]
    ]), e("border-separate", [
        [
            "border-collapse",
            "separate"
        ]
    ]);
    let d = ()=>F([
            V("--tw-border-spacing-x", "0", "<length>"),
            V("--tw-border-spacing-y", "0", "<length>")
        ]);
    l("border-spacing", [
        "--border-spacing",
        "--spacing"
    ], (a)=>[
            d(),
            n("--tw-border-spacing-x", a),
            n("--tw-border-spacing-y", a),
            n("border-spacing", "var(--tw-border-spacing-x) var(--tw-border-spacing-y)")
        ]), l("border-spacing-x", [
        "--border-spacing",
        "--spacing"
    ], (a)=>[
            d(),
            n("--tw-border-spacing-x", a),
            n("border-spacing", "var(--tw-border-spacing-x) var(--tw-border-spacing-y)")
        ]), l("border-spacing-y", [
        "--border-spacing",
        "--spacing"
    ], (a)=>[
            d(),
            n("--tw-border-spacing-y", a),
            n("border-spacing", "var(--tw-border-spacing-x) var(--tw-border-spacing-y)")
        ]), o("origin", {
        themeKeys: [
            "--transform-origin"
        ],
        handle: (a)=>[
                n("transform-origin", a)
            ],
        staticValues: {
            center: [
                n("transform-origin", "center")
            ],
            top: [
                n("transform-origin", "top")
            ],
            "top-right": [
                n("transform-origin", "100% 0")
            ],
            right: [
                n("transform-origin", "100%")
            ],
            "bottom-right": [
                n("transform-origin", "100% 100%")
            ],
            bottom: [
                n("transform-origin", "bottom")
            ],
            "bottom-left": [
                n("transform-origin", "0 100%")
            ],
            left: [
                n("transform-origin", "0")
            ],
            "top-left": [
                n("transform-origin", "0 0")
            ]
        }
    }), o("perspective-origin", {
        themeKeys: [
            "--perspective-origin"
        ],
        handle: (a)=>[
                n("perspective-origin", a)
            ],
        staticValues: {
            center: [
                n("perspective-origin", "center")
            ],
            top: [
                n("perspective-origin", "top")
            ],
            "top-right": [
                n("perspective-origin", "100% 0")
            ],
            right: [
                n("perspective-origin", "100%")
            ],
            "bottom-right": [
                n("perspective-origin", "100% 100%")
            ],
            bottom: [
                n("perspective-origin", "bottom")
            ],
            "bottom-left": [
                n("perspective-origin", "0 100%")
            ],
            left: [
                n("perspective-origin", "0")
            ],
            "top-left": [
                n("perspective-origin", "0 0")
            ]
        }
    }), o("perspective", {
        themeKeys: [
            "--perspective"
        ],
        handle: (a)=>[
                n("perspective", a)
            ],
        staticValues: {
            none: [
                n("perspective", "none")
            ]
        }
    });
    let u = ()=>F([
            V("--tw-translate-x", "0"),
            V("--tw-translate-y", "0"),
            V("--tw-translate-z", "0")
        ]);
    e("translate-none", [
        [
            "translate",
            "none"
        ]
    ]), e("-translate-full", [
        u,
        [
            "--tw-translate-x",
            "-100%"
        ],
        [
            "--tw-translate-y",
            "-100%"
        ],
        [
            "translate",
            "var(--tw-translate-x) var(--tw-translate-y)"
        ]
    ]), e("translate-full", [
        u,
        [
            "--tw-translate-x",
            "100%"
        ],
        [
            "--tw-translate-y",
            "100%"
        ],
        [
            "translate",
            "var(--tw-translate-x) var(--tw-translate-y)"
        ]
    ]), l("translate", [
        "--translate",
        "--spacing"
    ], (a)=>[
            u(),
            n("--tw-translate-x", a),
            n("--tw-translate-y", a),
            n("translate", "var(--tw-translate-x) var(--tw-translate-y)")
        ], {
        supportsNegative: !0,
        supportsFractions: !0
    });
    for (let a of [
        "x",
        "y"
    ])e("-translate-".concat(a, "-full"), [
        u,
        [
            "--tw-translate-".concat(a),
            "-100%"
        ],
        [
            "translate",
            "var(--tw-translate-x) var(--tw-translate-y)"
        ]
    ]), e("translate-".concat(a, "-full"), [
        u,
        [
            "--tw-translate-".concat(a),
            "100%"
        ],
        [
            "translate",
            "var(--tw-translate-x) var(--tw-translate-y)"
        ]
    ]), l("translate-".concat(a), [
        "--translate",
        "--spacing"
    ], (c)=>[
            u(),
            n("--tw-translate-".concat(a), c),
            n("translate", "var(--tw-translate-x) var(--tw-translate-y)")
        ], {
        supportsNegative: !0,
        supportsFractions: !0
    });
    l("translate-z", [
        "--translate",
        "--spacing"
    ], (a)=>[
            u(),
            n("--tw-translate-z", a),
            n("translate", "var(--tw-translate-x) var(--tw-translate-y) var(--tw-translate-z)")
        ], {
        supportsNegative: !0
    }), e("translate-3d", [
        u,
        [
            "translate",
            "var(--tw-translate-x) var(--tw-translate-y) var(--tw-translate-z)"
        ]
    ]);
    let f = ()=>F([
            V("--tw-scale-x", "1"),
            V("--tw-scale-y", "1"),
            V("--tw-scale-z", "1")
        ]);
    e("scale-none", [
        [
            "scale",
            "none"
        ]
    ]);
    function g(param) {
        let { negative: a } = param;
        return (c)=>{
            if (!c.value || c.modifier) return;
            let h;
            return c.value.kind === "arbitrary" ? (h = c.value.value, h = a ? "calc(".concat(h, " * -1)") : h, [
                n("scale", h)
            ]) : (h = r.resolve(c.value.value, [
                "--scale"
            ]), !h && (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(c.value.value) && (h = "".concat(c.value.value, "%")), h ? (h = a ? "calc(".concat(h, " * -1)") : h, [
                f(),
                n("--tw-scale-x", h),
                n("--tw-scale-y", h),
                n("--tw-scale-z", h),
                n("scale", "var(--tw-scale-x) var(--tw-scale-y)")
            ]) : void 0);
        };
    }
    t.functional("-scale", g({
        negative: !0
    })), t.functional("scale", g({
        negative: !1
    })), i("scale", ()=>[
            {
                supportsNegative: !0,
                values: [
                    "0",
                    "50",
                    "75",
                    "90",
                    "95",
                    "100",
                    "105",
                    "110",
                    "125",
                    "150",
                    "200"
                ],
                valueThemeKeys: [
                    "--scale"
                ]
            }
        ]);
    for (let a of [
        "x",
        "y",
        "z"
    ])o("scale-".concat(a), {
        supportsNegative: !0,
        themeKeys: [
            "--scale"
        ],
        handleBareValue: (param)=>{
            let { value: c } = param;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(c) ? "".concat(c, "%") : null;
        },
        handle: (c)=>[
                f(),
                n("--tw-scale-".concat(a), c),
                n("scale", "var(--tw-scale-x) var(--tw-scale-y)".concat(a === "z" ? " var(--tw-scale-z)" : ""))
            ]
    }), i("scale-".concat(a), ()=>[
            {
                supportsNegative: !0,
                values: [
                    "0",
                    "50",
                    "75",
                    "90",
                    "95",
                    "100",
                    "105",
                    "110",
                    "125",
                    "150",
                    "200"
                ],
                valueThemeKeys: [
                    "--scale"
                ]
            }
        ]);
    e("scale-3d", [
        f,
        [
            "scale",
            "var(--tw-scale-x) var(--tw-scale-y) var(--tw-scale-z)"
        ]
    ]), e("rotate-none", [
        [
            "rotate",
            "none"
        ]
    ]);
    function m(param) {
        let { negative: a } = param;
        return (c)=>{
            if (!c.value || c.modifier) return;
            let h;
            if (c.value.kind === "arbitrary") {
                h = c.value.value;
                var _c_value_dataType;
                let A = (_c_value_dataType = c.value.dataType) !== null && _c_value_dataType !== void 0 ? _c_value_dataType : (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(h, [
                    "angle",
                    "vector"
                ]);
                if (A === "vector") return [
                    n("rotate", "".concat(h, " var(--tw-rotate)"))
                ];
                if (A !== "angle") return [
                    n("rotate", a ? "calc(".concat(h, " * -1)") : h)
                ];
            } else if (h = r.resolve(c.value.value, [
                "--rotate"
            ]), !h && (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(c.value.value) && (h = "".concat(c.value.value, "deg")), !h) return;
            return [
                n("rotate", a ? "calc(".concat(h, " * -1)") : h)
            ];
        };
    }
    t.functional("-rotate", m({
        negative: !0
    })), t.functional("rotate", m({
        negative: !1
    })), i("rotate", ()=>[
            {
                supportsNegative: !0,
                values: [
                    "0",
                    "1",
                    "2",
                    "3",
                    "6",
                    "12",
                    "45",
                    "90",
                    "180"
                ],
                valueThemeKeys: [
                    "--rotate"
                ]
            }
        ]);
    {
        let a = [
            "var(--tw-rotate-x,)",
            "var(--tw-rotate-y,)",
            "var(--tw-rotate-z,)",
            "var(--tw-skew-x,)",
            "var(--tw-skew-y,)"
        ].join(" "), c = ()=>F([
                V("--tw-rotate-x"),
                V("--tw-rotate-y"),
                V("--tw-rotate-z"),
                V("--tw-skew-x"),
                V("--tw-skew-y")
            ]);
        for (let h of [
            "x",
            "y",
            "z"
        ])o("rotate-".concat(h), {
            supportsNegative: !0,
            themeKeys: [
                "--rotate"
            ],
            handleBareValue: (param)=>{
                let { value: A } = param;
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(A) ? "".concat(A, "deg") : null;
            },
            handle: (A)=>[
                    c(),
                    n("--tw-rotate-".concat(h), "rotate".concat(h.toUpperCase(), "(").concat(A, ")")),
                    n("transform", a)
                ]
        }), i("rotate-".concat(h), ()=>[
                {
                    supportsNegative: !0,
                    values: [
                        "0",
                        "1",
                        "2",
                        "3",
                        "6",
                        "12",
                        "45",
                        "90",
                        "180"
                    ],
                    valueThemeKeys: [
                        "--rotate"
                    ]
                }
            ]);
        o("skew", {
            supportsNegative: !0,
            themeKeys: [
                "--skew"
            ],
            handleBareValue: (param)=>{
                let { value: h } = param;
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(h) ? "".concat(h, "deg") : null;
            },
            handle: (h)=>[
                    c(),
                    n("--tw-skew-x", "skewX(".concat(h, ")")),
                    n("--tw-skew-y", "skewY(".concat(h, ")")),
                    n("transform", a)
                ]
        }), o("skew-x", {
            supportsNegative: !0,
            themeKeys: [
                "--skew"
            ],
            handleBareValue: (param)=>{
                let { value: h } = param;
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(h) ? "".concat(h, "deg") : null;
            },
            handle: (h)=>[
                    c(),
                    n("--tw-skew-x", "skewX(".concat(h, ")")),
                    n("transform", a)
                ]
        }), o("skew-y", {
            supportsNegative: !0,
            themeKeys: [
                "--skew"
            ],
            handleBareValue: (param)=>{
                let { value: h } = param;
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(h) ? "".concat(h, "deg") : null;
            },
            handle: (h)=>[
                    c(),
                    n("--tw-skew-y", "skewY(".concat(h, ")")),
                    n("transform", a)
                ]
        }), i("skew", ()=>[
                {
                    supportsNegative: !0,
                    values: [
                        "0",
                        "1",
                        "2",
                        "3",
                        "6",
                        "12"
                    ],
                    valueThemeKeys: [
                        "--skew"
                    ]
                }
            ]), i("skew-x", ()=>[
                {
                    supportsNegative: !0,
                    values: [
                        "0",
                        "1",
                        "2",
                        "3",
                        "6",
                        "12"
                    ],
                    valueThemeKeys: [
                        "--skew"
                    ]
                }
            ]), i("skew-y", ()=>[
                {
                    supportsNegative: !0,
                    values: [
                        "0",
                        "1",
                        "2",
                        "3",
                        "6",
                        "12"
                    ],
                    valueThemeKeys: [
                        "--skew"
                    ]
                }
            ]), t.functional("transform", (h)=>{
            if (h.modifier) return;
            let A = null;
            if (h.value ? h.value.kind === "arbitrary" && (A = h.value.value) : A = a, A !== null) return [
                c(),
                n("transform", A)
            ];
        }), i("transform", ()=>[
                {
                    hasDefaultValue: !0
                }
            ]), e("transform-cpu", [
            [
                "transform",
                a
            ]
        ]), e("transform-gpu", [
            [
                "transform",
                "translateZ(0) ".concat(a)
            ]
        ]), e("transform-none", [
            [
                "transform",
                "none"
            ]
        ]);
    }
    e("transform-flat", [
        [
            "transform-style",
            "flat"
        ]
    ]), e("transform-3d", [
        [
            "transform-style",
            "preserve-3d"
        ]
    ]), e("transform-content", [
        [
            "transform-box",
            "content-box"
        ]
    ]), e("transform-border", [
        [
            "transform-box",
            "border-box"
        ]
    ]), e("transform-fill", [
        [
            "transform-box",
            "fill-box"
        ]
    ]), e("transform-stroke", [
        [
            "transform-box",
            "stroke-box"
        ]
    ]), e("transform-view", [
        [
            "transform-box",
            "view-box"
        ]
    ]), e("backface-visible", [
        [
            "backface-visibility",
            "visible"
        ]
    ]), e("backface-hidden", [
        [
            "backface-visibility",
            "hidden"
        ]
    ]);
    for (let a of [
        "auto",
        "default",
        "pointer",
        "wait",
        "text",
        "move",
        "help",
        "not-allowed",
        "none",
        "context-menu",
        "progress",
        "cell",
        "crosshair",
        "vertical-text",
        "alias",
        "copy",
        "no-drop",
        "grab",
        "grabbing",
        "all-scroll",
        "col-resize",
        "row-resize",
        "n-resize",
        "e-resize",
        "s-resize",
        "w-resize",
        "ne-resize",
        "nw-resize",
        "se-resize",
        "sw-resize",
        "ew-resize",
        "ns-resize",
        "nesw-resize",
        "nwse-resize",
        "zoom-in",
        "zoom-out"
    ])e("cursor-".concat(a), [
        [
            "cursor",
            a
        ]
    ]);
    o("cursor", {
        themeKeys: [
            "--cursor"
        ],
        handle: (a)=>[
                n("cursor", a)
            ]
    });
    for (let a of [
        "auto",
        "none",
        "manipulation"
    ])e("touch-".concat(a), [
        [
            "touch-action",
            a
        ]
    ]);
    let p = ()=>F([
            V("--tw-pan-x"),
            V("--tw-pan-y"),
            V("--tw-pinch-zoom")
        ]);
    for (let a of [
        "x",
        "left",
        "right"
    ])e("touch-pan-".concat(a), [
        p,
        [
            "--tw-pan-x",
            "pan-".concat(a)
        ],
        [
            "touch-action",
            "var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,)"
        ]
    ]);
    for (let a of [
        "y",
        "up",
        "down"
    ])e("touch-pan-".concat(a), [
        p,
        [
            "--tw-pan-y",
            "pan-".concat(a)
        ],
        [
            "touch-action",
            "var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,)"
        ]
    ]);
    e("touch-pinch-zoom", [
        p,
        [
            "--tw-pinch-zoom",
            "pinch-zoom"
        ],
        [
            "touch-action",
            "var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,)"
        ]
    ]);
    for (let a of [
        "none",
        "text",
        "all",
        "auto"
    ])e("select-".concat(a), [
        [
            "-webkit-user-select",
            a
        ],
        [
            "user-select",
            a
        ]
    ]);
    e("resize-none", [
        [
            "resize",
            "none"
        ]
    ]), e("resize-x", [
        [
            "resize",
            "horizontal"
        ]
    ]), e("resize-y", [
        [
            "resize",
            "vertical"
        ]
    ]), e("resize", [
        [
            "resize",
            "both"
        ]
    ]), e("snap-none", [
        [
            "scroll-snap-type",
            "none"
        ]
    ]);
    let w = ()=>F([
            V("--tw-scroll-snap-strictness", "proximity", "*")
        ]);
    for (let a of [
        "x",
        "y",
        "both"
    ])e("snap-".concat(a), [
        w,
        [
            "scroll-snap-type",
            "".concat(a, " var(--tw-scroll-snap-strictness)")
        ]
    ]);
    e("snap-mandatory", [
        w,
        [
            "--tw-scroll-snap-strictness",
            "mandatory"
        ]
    ]), e("snap-proximity", [
        w,
        [
            "--tw-scroll-snap-strictness",
            "proximity"
        ]
    ]), e("snap-align-none", [
        [
            "scroll-snap-align",
            "none"
        ]
    ]), e("snap-start", [
        [
            "scroll-snap-align",
            "start"
        ]
    ]), e("snap-end", [
        [
            "scroll-snap-align",
            "end"
        ]
    ]), e("snap-center", [
        [
            "scroll-snap-align",
            "center"
        ]
    ]), e("snap-normal", [
        [
            "scroll-snap-stop",
            "normal"
        ]
    ]), e("snap-always", [
        [
            "scroll-snap-stop",
            "always"
        ]
    ]);
    for (let [a, c] of [
        [
            "scroll-m",
            "scroll-margin"
        ],
        [
            "scroll-mx",
            "scroll-margin-inline"
        ],
        [
            "scroll-my",
            "scroll-margin-block"
        ],
        [
            "scroll-ms",
            "scroll-margin-inline-start"
        ],
        [
            "scroll-me",
            "scroll-margin-inline-end"
        ],
        [
            "scroll-mt",
            "scroll-margin-top"
        ],
        [
            "scroll-mr",
            "scroll-margin-right"
        ],
        [
            "scroll-mb",
            "scroll-margin-bottom"
        ],
        [
            "scroll-ml",
            "scroll-margin-left"
        ]
    ])l(a, [
        "--scroll-margin",
        "--spacing"
    ], (h)=>[
            n(c, h)
        ], {
        supportsNegative: !0
    });
    for (let [a, c] of [
        [
            "scroll-p",
            "scroll-padding"
        ],
        [
            "scroll-px",
            "scroll-padding-inline"
        ],
        [
            "scroll-py",
            "scroll-padding-block"
        ],
        [
            "scroll-ps",
            "scroll-padding-inline-start"
        ],
        [
            "scroll-pe",
            "scroll-padding-inline-end"
        ],
        [
            "scroll-pt",
            "scroll-padding-top"
        ],
        [
            "scroll-pr",
            "scroll-padding-right"
        ],
        [
            "scroll-pb",
            "scroll-padding-bottom"
        ],
        [
            "scroll-pl",
            "scroll-padding-left"
        ]
    ])l(a, [
        "--scroll-padding",
        "--spacing"
    ], (h)=>[
            n(c, h)
        ]);
    e("list-inside", [
        [
            "list-style-position",
            "inside"
        ]
    ]), e("list-outside", [
        [
            "list-style-position",
            "outside"
        ]
    ]), o("list", {
        themeKeys: [
            "--list-style-type"
        ],
        handle: (a)=>[
                n("list-style-type", a)
            ],
        staticValues: {
            none: [
                n("list-style-type", "none")
            ],
            disc: [
                n("list-style-type", "disc")
            ],
            decimal: [
                n("list-style-type", "decimal")
            ]
        }
    }), o("list-image", {
        themeKeys: [
            "--list-style-image"
        ],
        handle: (a)=>[
                n("list-style-image", a)
            ],
        staticValues: {
            none: [
                n("list-style-image", "none")
            ]
        }
    }), e("appearance-none", [
        [
            "appearance",
            "none"
        ]
    ]), e("appearance-auto", [
        [
            "appearance",
            "auto"
        ]
    ]), e("scheme-normal", [
        [
            "color-scheme",
            "normal"
        ]
    ]), e("scheme-dark", [
        [
            "color-scheme",
            "dark"
        ]
    ]), e("scheme-light", [
        [
            "color-scheme",
            "light"
        ]
    ]), e("scheme-light-dark", [
        [
            "color-scheme",
            "light dark"
        ]
    ]), e("scheme-only-dark", [
        [
            "color-scheme",
            "only dark"
        ]
    ]), e("scheme-only-light", [
        [
            "color-scheme",
            "only light"
        ]
    ]), o("columns", {
        themeKeys: [
            "--columns",
            "--container"
        ],
        handleBareValue: (param)=>{
            let { value: a } = param;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(a) ? a : null;
        },
        handle: (a)=>[
                n("columns", a)
            ],
        staticValues: {
            auto: [
                n("columns", "auto")
            ]
        }
    }), i("columns", ()=>[
            {
                values: Array.from({
                    length: 12
                }, (a, c)=>"".concat(c + 1)),
                valueThemeKeys: [
                    "--columns",
                    "--container"
                ]
            }
        ]);
    for (let a of [
        "auto",
        "avoid",
        "all",
        "avoid-page",
        "page",
        "left",
        "right",
        "column"
    ])e("break-before-".concat(a), [
        [
            "break-before",
            a
        ]
    ]);
    for (let a of [
        "auto",
        "avoid",
        "avoid-page",
        "avoid-column"
    ])e("break-inside-".concat(a), [
        [
            "break-inside",
            a
        ]
    ]);
    for (let a of [
        "auto",
        "avoid",
        "all",
        "avoid-page",
        "page",
        "left",
        "right",
        "column"
    ])e("break-after-".concat(a), [
        [
            "break-after",
            a
        ]
    ]);
    e("grid-flow-row", [
        [
            "grid-auto-flow",
            "row"
        ]
    ]), e("grid-flow-col", [
        [
            "grid-auto-flow",
            "column"
        ]
    ]), e("grid-flow-dense", [
        [
            "grid-auto-flow",
            "dense"
        ]
    ]), e("grid-flow-row-dense", [
        [
            "grid-auto-flow",
            "row dense"
        ]
    ]), e("grid-flow-col-dense", [
        [
            "grid-auto-flow",
            "column dense"
        ]
    ]), o("auto-cols", {
        themeKeys: [
            "--grid-auto-columns"
        ],
        handle: (a)=>[
                n("grid-auto-columns", a)
            ],
        staticValues: {
            auto: [
                n("grid-auto-columns", "auto")
            ],
            min: [
                n("grid-auto-columns", "min-content")
            ],
            max: [
                n("grid-auto-columns", "max-content")
            ],
            fr: [
                n("grid-auto-columns", "minmax(0, 1fr)")
            ]
        }
    }), o("auto-rows", {
        themeKeys: [
            "--grid-auto-rows"
        ],
        handle: (a)=>[
                n("grid-auto-rows", a)
            ],
        staticValues: {
            auto: [
                n("grid-auto-rows", "auto")
            ],
            min: [
                n("grid-auto-rows", "min-content")
            ],
            max: [
                n("grid-auto-rows", "max-content")
            ],
            fr: [
                n("grid-auto-rows", "minmax(0, 1fr)")
            ]
        }
    }), o("grid-cols", {
        themeKeys: [
            "--grid-template-columns"
        ],
        handleBareValue: (param)=>{
            let { value: a } = param;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["e"])(a) ? "repeat(".concat(a, ", minmax(0, 1fr))") : null;
        },
        handle: (a)=>[
                n("grid-template-columns", a)
            ],
        staticValues: {
            none: [
                n("grid-template-columns", "none")
            ],
            subgrid: [
                n("grid-template-columns", "subgrid")
            ]
        }
    }), o("grid-rows", {
        themeKeys: [
            "--grid-template-rows"
        ],
        handleBareValue: (param)=>{
            let { value: a } = param;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["e"])(a) ? "repeat(".concat(a, ", minmax(0, 1fr))") : null;
        },
        handle: (a)=>[
                n("grid-template-rows", a)
            ],
        staticValues: {
            none: [
                n("grid-template-rows", "none")
            ],
            subgrid: [
                n("grid-template-rows", "subgrid")
            ]
        }
    }), i("grid-cols", ()=>[
            {
                values: Array.from({
                    length: 12
                }, (a, c)=>"".concat(c + 1)),
                valueThemeKeys: [
                    "--grid-template-columns"
                ]
            }
        ]), i("grid-rows", ()=>[
            {
                values: Array.from({
                    length: 12
                }, (a, c)=>"".concat(c + 1)),
                valueThemeKeys: [
                    "--grid-template-rows"
                ]
            }
        ]), e("flex-row", [
        [
            "flex-direction",
            "row"
        ]
    ]), e("flex-row-reverse", [
        [
            "flex-direction",
            "row-reverse"
        ]
    ]), e("flex-col", [
        [
            "flex-direction",
            "column"
        ]
    ]), e("flex-col-reverse", [
        [
            "flex-direction",
            "column-reverse"
        ]
    ]), e("flex-wrap", [
        [
            "flex-wrap",
            "wrap"
        ]
    ]), e("flex-nowrap", [
        [
            "flex-wrap",
            "nowrap"
        ]
    ]), e("flex-wrap-reverse", [
        [
            "flex-wrap",
            "wrap-reverse"
        ]
    ]), e("place-content-center", [
        [
            "place-content",
            "center"
        ]
    ]), e("place-content-start", [
        [
            "place-content",
            "start"
        ]
    ]), e("place-content-end", [
        [
            "place-content",
            "end"
        ]
    ]), e("place-content-center-safe", [
        [
            "place-content",
            "safe center"
        ]
    ]), e("place-content-end-safe", [
        [
            "place-content",
            "safe end"
        ]
    ]), e("place-content-between", [
        [
            "place-content",
            "space-between"
        ]
    ]), e("place-content-around", [
        [
            "place-content",
            "space-around"
        ]
    ]), e("place-content-evenly", [
        [
            "place-content",
            "space-evenly"
        ]
    ]), e("place-content-baseline", [
        [
            "place-content",
            "baseline"
        ]
    ]), e("place-content-stretch", [
        [
            "place-content",
            "stretch"
        ]
    ]), e("place-items-center", [
        [
            "place-items",
            "center"
        ]
    ]), e("place-items-start", [
        [
            "place-items",
            "start"
        ]
    ]), e("place-items-end", [
        [
            "place-items",
            "end"
        ]
    ]), e("place-items-center-safe", [
        [
            "place-items",
            "safe center"
        ]
    ]), e("place-items-end-safe", [
        [
            "place-items",
            "safe end"
        ]
    ]), e("place-items-baseline", [
        [
            "place-items",
            "baseline"
        ]
    ]), e("place-items-stretch", [
        [
            "place-items",
            "stretch"
        ]
    ]), e("content-normal", [
        [
            "align-content",
            "normal"
        ]
    ]), e("content-center", [
        [
            "align-content",
            "center"
        ]
    ]), e("content-start", [
        [
            "align-content",
            "flex-start"
        ]
    ]), e("content-end", [
        [
            "align-content",
            "flex-end"
        ]
    ]), e("content-center-safe", [
        [
            "align-content",
            "safe center"
        ]
    ]), e("content-end-safe", [
        [
            "align-content",
            "safe flex-end"
        ]
    ]), e("content-between", [
        [
            "align-content",
            "space-between"
        ]
    ]), e("content-around", [
        [
            "align-content",
            "space-around"
        ]
    ]), e("content-evenly", [
        [
            "align-content",
            "space-evenly"
        ]
    ]), e("content-baseline", [
        [
            "align-content",
            "baseline"
        ]
    ]), e("content-stretch", [
        [
            "align-content",
            "stretch"
        ]
    ]), e("items-center", [
        [
            "align-items",
            "center"
        ]
    ]), e("items-start", [
        [
            "align-items",
            "flex-start"
        ]
    ]), e("items-end", [
        [
            "align-items",
            "flex-end"
        ]
    ]), e("items-center-safe", [
        [
            "align-items",
            "safe center"
        ]
    ]), e("items-end-safe", [
        [
            "align-items",
            "safe flex-end"
        ]
    ]), e("items-baseline", [
        [
            "align-items",
            "baseline"
        ]
    ]), e("items-baseline-last", [
        [
            "align-items",
            "last baseline"
        ]
    ]), e("items-stretch", [
        [
            "align-items",
            "stretch"
        ]
    ]), e("justify-normal", [
        [
            "justify-content",
            "normal"
        ]
    ]), e("justify-center", [
        [
            "justify-content",
            "center"
        ]
    ]), e("justify-start", [
        [
            "justify-content",
            "flex-start"
        ]
    ]), e("justify-end", [
        [
            "justify-content",
            "flex-end"
        ]
    ]), e("justify-center-safe", [
        [
            "justify-content",
            "safe center"
        ]
    ]), e("justify-end-safe", [
        [
            "justify-content",
            "safe flex-end"
        ]
    ]), e("justify-between", [
        [
            "justify-content",
            "space-between"
        ]
    ]), e("justify-around", [
        [
            "justify-content",
            "space-around"
        ]
    ]), e("justify-evenly", [
        [
            "justify-content",
            "space-evenly"
        ]
    ]), e("justify-baseline", [
        [
            "justify-content",
            "baseline"
        ]
    ]), e("justify-stretch", [
        [
            "justify-content",
            "stretch"
        ]
    ]), e("justify-items-normal", [
        [
            "justify-items",
            "normal"
        ]
    ]), e("justify-items-center", [
        [
            "justify-items",
            "center"
        ]
    ]), e("justify-items-start", [
        [
            "justify-items",
            "start"
        ]
    ]), e("justify-items-end", [
        [
            "justify-items",
            "end"
        ]
    ]), e("justify-items-center-safe", [
        [
            "justify-items",
            "safe center"
        ]
    ]), e("justify-items-end-safe", [
        [
            "justify-items",
            "safe end"
        ]
    ]), e("justify-items-stretch", [
        [
            "justify-items",
            "stretch"
        ]
    ]), l("gap", [
        "--gap",
        "--spacing"
    ], (a)=>[
            n("gap", a)
        ]), l("gap-x", [
        "--gap",
        "--spacing"
    ], (a)=>[
            n("column-gap", a)
        ]), l("gap-y", [
        "--gap",
        "--spacing"
    ], (a)=>[
            n("row-gap", a)
        ]), l("space-x", [
        "--space",
        "--spacing"
    ], (a)=>[
            F([
                V("--tw-space-x-reverse", "0")
            ]),
            B(":where(& > :not(:last-child))", [
                n("--tw-sort", "row-gap"),
                n("--tw-space-x-reverse", "0"),
                n("margin-inline-start", "calc(".concat(a, " * var(--tw-space-x-reverse))")),
                n("margin-inline-end", "calc(".concat(a, " * calc(1 - var(--tw-space-x-reverse)))"))
            ])
        ], {
        supportsNegative: !0
    }), l("space-y", [
        "--space",
        "--spacing"
    ], (a)=>[
            F([
                V("--tw-space-y-reverse", "0")
            ]),
            B(":where(& > :not(:last-child))", [
                n("--tw-sort", "column-gap"),
                n("--tw-space-y-reverse", "0"),
                n("margin-block-start", "calc(".concat(a, " * var(--tw-space-y-reverse))")),
                n("margin-block-end", "calc(".concat(a, " * calc(1 - var(--tw-space-y-reverse)))"))
            ])
        ], {
        supportsNegative: !0
    }), e("space-x-reverse", [
        ()=>F([
                V("--tw-space-x-reverse", "0")
            ]),
        ()=>B(":where(& > :not(:last-child))", [
                n("--tw-sort", "row-gap"),
                n("--tw-space-x-reverse", "1")
            ])
    ]), e("space-y-reverse", [
        ()=>F([
                V("--tw-space-y-reverse", "0")
            ]),
        ()=>B(":where(& > :not(:last-child))", [
                n("--tw-sort", "column-gap"),
                n("--tw-space-y-reverse", "1")
            ])
    ]), e("accent-auto", [
        [
            "accent-color",
            "auto"
        ]
    ]), s("accent", {
        themeKeys: [
            "--accent-color",
            "--color"
        ],
        handle: (a)=>[
                n("accent-color", a)
            ]
    }), s("caret", {
        themeKeys: [
            "--caret-color",
            "--color"
        ],
        handle: (a)=>[
                n("caret-color", a)
            ]
    }), s("divide", {
        themeKeys: [
            "--divide-color",
            "--border-color",
            "--color"
        ],
        handle: (a)=>[
                B(":where(& > :not(:last-child))", [
                    n("--tw-sort", "divide-color"),
                    n("border-color", a)
                ])
            ]
    }), e("place-self-auto", [
        [
            "place-self",
            "auto"
        ]
    ]), e("place-self-start", [
        [
            "place-self",
            "start"
        ]
    ]), e("place-self-end", [
        [
            "place-self",
            "end"
        ]
    ]), e("place-self-center", [
        [
            "place-self",
            "center"
        ]
    ]), e("place-self-end-safe", [
        [
            "place-self",
            "safe end"
        ]
    ]), e("place-self-center-safe", [
        [
            "place-self",
            "safe center"
        ]
    ]), e("place-self-stretch", [
        [
            "place-self",
            "stretch"
        ]
    ]), e("self-auto", [
        [
            "align-self",
            "auto"
        ]
    ]), e("self-start", [
        [
            "align-self",
            "flex-start"
        ]
    ]), e("self-end", [
        [
            "align-self",
            "flex-end"
        ]
    ]), e("self-center", [
        [
            "align-self",
            "center"
        ]
    ]), e("self-end-safe", [
        [
            "align-self",
            "safe flex-end"
        ]
    ]), e("self-center-safe", [
        [
            "align-self",
            "safe center"
        ]
    ]), e("self-stretch", [
        [
            "align-self",
            "stretch"
        ]
    ]), e("self-baseline", [
        [
            "align-self",
            "baseline"
        ]
    ]), e("self-baseline-last", [
        [
            "align-self",
            "last baseline"
        ]
    ]), e("justify-self-auto", [
        [
            "justify-self",
            "auto"
        ]
    ]), e("justify-self-start", [
        [
            "justify-self",
            "flex-start"
        ]
    ]), e("justify-self-end", [
        [
            "justify-self",
            "flex-end"
        ]
    ]), e("justify-self-center", [
        [
            "justify-self",
            "center"
        ]
    ]), e("justify-self-end-safe", [
        [
            "justify-self",
            "safe flex-end"
        ]
    ]), e("justify-self-center-safe", [
        [
            "justify-self",
            "safe center"
        ]
    ]), e("justify-self-stretch", [
        [
            "justify-self",
            "stretch"
        ]
    ]);
    for (let a of [
        "auto",
        "hidden",
        "clip",
        "visible",
        "scroll"
    ])e("overflow-".concat(a), [
        [
            "overflow",
            a
        ]
    ]), e("overflow-x-".concat(a), [
        [
            "overflow-x",
            a
        ]
    ]), e("overflow-y-".concat(a), [
        [
            "overflow-y",
            a
        ]
    ]);
    for (let a of [
        "auto",
        "contain",
        "none"
    ])e("overscroll-".concat(a), [
        [
            "overscroll-behavior",
            a
        ]
    ]), e("overscroll-x-".concat(a), [
        [
            "overscroll-behavior-x",
            a
        ]
    ]), e("overscroll-y-".concat(a), [
        [
            "overscroll-behavior-y",
            a
        ]
    ]);
    e("scroll-auto", [
        [
            "scroll-behavior",
            "auto"
        ]
    ]), e("scroll-smooth", [
        [
            "scroll-behavior",
            "smooth"
        ]
    ]), e("truncate", [
        [
            "overflow",
            "hidden"
        ],
        [
            "text-overflow",
            "ellipsis"
        ],
        [
            "white-space",
            "nowrap"
        ]
    ]), e("text-ellipsis", [
        [
            "text-overflow",
            "ellipsis"
        ]
    ]), e("text-clip", [
        [
            "text-overflow",
            "clip"
        ]
    ]), e("hyphens-none", [
        [
            "-webkit-hyphens",
            "none"
        ],
        [
            "hyphens",
            "none"
        ]
    ]), e("hyphens-manual", [
        [
            "-webkit-hyphens",
            "manual"
        ],
        [
            "hyphens",
            "manual"
        ]
    ]), e("hyphens-auto", [
        [
            "-webkit-hyphens",
            "auto"
        ],
        [
            "hyphens",
            "auto"
        ]
    ]), e("whitespace-normal", [
        [
            "white-space",
            "normal"
        ]
    ]), e("whitespace-nowrap", [
        [
            "white-space",
            "nowrap"
        ]
    ]), e("whitespace-pre", [
        [
            "white-space",
            "pre"
        ]
    ]), e("whitespace-pre-line", [
        [
            "white-space",
            "pre-line"
        ]
    ]), e("whitespace-pre-wrap", [
        [
            "white-space",
            "pre-wrap"
        ]
    ]), e("whitespace-break-spaces", [
        [
            "white-space",
            "break-spaces"
        ]
    ]), e("text-wrap", [
        [
            "text-wrap",
            "wrap"
        ]
    ]), e("text-nowrap", [
        [
            "text-wrap",
            "nowrap"
        ]
    ]), e("text-balance", [
        [
            "text-wrap",
            "balance"
        ]
    ]), e("text-pretty", [
        [
            "text-wrap",
            "pretty"
        ]
    ]), e("break-normal", [
        [
            "overflow-wrap",
            "normal"
        ],
        [
            "word-break",
            "normal"
        ]
    ]), e("break-words", [
        [
            "overflow-wrap",
            "break-word"
        ]
    ]), e("break-all", [
        [
            "word-break",
            "break-all"
        ]
    ]), e("break-keep", [
        [
            "word-break",
            "keep-all"
        ]
    ]), e("wrap-anywhere", [
        [
            "overflow-wrap",
            "anywhere"
        ]
    ]), e("wrap-break-word", [
        [
            "overflow-wrap",
            "break-word"
        ]
    ]), e("wrap-normal", [
        [
            "overflow-wrap",
            "normal"
        ]
    ]);
    for (let [a, c] of [
        [
            "rounded",
            [
                "border-radius"
            ]
        ],
        [
            "rounded-s",
            [
                "border-start-start-radius",
                "border-end-start-radius"
            ]
        ],
        [
            "rounded-e",
            [
                "border-start-end-radius",
                "border-end-end-radius"
            ]
        ],
        [
            "rounded-t",
            [
                "border-top-left-radius",
                "border-top-right-radius"
            ]
        ],
        [
            "rounded-r",
            [
                "border-top-right-radius",
                "border-bottom-right-radius"
            ]
        ],
        [
            "rounded-b",
            [
                "border-bottom-right-radius",
                "border-bottom-left-radius"
            ]
        ],
        [
            "rounded-l",
            [
                "border-top-left-radius",
                "border-bottom-left-radius"
            ]
        ],
        [
            "rounded-ss",
            [
                "border-start-start-radius"
            ]
        ],
        [
            "rounded-se",
            [
                "border-start-end-radius"
            ]
        ],
        [
            "rounded-ee",
            [
                "border-end-end-radius"
            ]
        ],
        [
            "rounded-es",
            [
                "border-end-start-radius"
            ]
        ],
        [
            "rounded-tl",
            [
                "border-top-left-radius"
            ]
        ],
        [
            "rounded-tr",
            [
                "border-top-right-radius"
            ]
        ],
        [
            "rounded-br",
            [
                "border-bottom-right-radius"
            ]
        ],
        [
            "rounded-bl",
            [
                "border-bottom-left-radius"
            ]
        ]
    ])o(a, {
        themeKeys: [
            "--radius"
        ],
        handle: (h)=>c.map((A)=>n(A, h)),
        staticValues: {
            none: c.map((h)=>n(h, "0")),
            full: c.map((h)=>n(h, "calc(infinity * 1px)"))
        }
    });
    e("border-solid", [
        [
            "--tw-border-style",
            "solid"
        ],
        [
            "border-style",
            "solid"
        ]
    ]), e("border-dashed", [
        [
            "--tw-border-style",
            "dashed"
        ],
        [
            "border-style",
            "dashed"
        ]
    ]), e("border-dotted", [
        [
            "--tw-border-style",
            "dotted"
        ],
        [
            "border-style",
            "dotted"
        ]
    ]), e("border-double", [
        [
            "--tw-border-style",
            "double"
        ],
        [
            "border-style",
            "double"
        ]
    ]), e("border-hidden", [
        [
            "--tw-border-style",
            "hidden"
        ],
        [
            "border-style",
            "hidden"
        ]
    ]), e("border-none", [
        [
            "--tw-border-style",
            "none"
        ],
        [
            "border-style",
            "none"
        ]
    ]);
    {
        let c = function(h, A) {
            t.functional(h, (k)=>{
                if (!k.value) {
                    if (k.modifier) return;
                    var _r_get;
                    let $ = (_r_get = r.get([
                        "--default-border-width"
                    ])) !== null && _r_get !== void 0 ? _r_get : "1px", P = A.width($);
                    return P ? [
                        a(),
                        ...P
                    ] : void 0;
                }
                if (k.value.kind === "arbitrary") {
                    let $ = k.value.value;
                    var _k_value_dataType;
                    switch((_k_value_dataType = k.value.dataType) !== null && _k_value_dataType !== void 0 ? _k_value_dataType : (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])($, [
                        "color",
                        "line-width",
                        "length"
                    ])){
                        case "line-width":
                        case "length":
                            {
                                if (k.modifier) return;
                                let N = A.width($);
                                return N ? [
                                    a(),
                                    ...N
                                ] : void 0;
                            }
                        default:
                            return $ = X($, k.modifier, r), $ === null ? void 0 : A.color($);
                    }
                }
                {
                    let $ = te(k, r, [
                        "--border-color",
                        "--color"
                    ]);
                    if ($) return A.color($);
                }
                {
                    if (k.modifier) return;
                    let $ = r.resolve(k.value.value, [
                        "--border-width"
                    ]);
                    if ($) {
                        let P = A.width($);
                        return P ? [
                            a(),
                            ...P
                        ] : void 0;
                    }
                    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(k.value.value)) {
                        let P = A.width("".concat(k.value.value, "px"));
                        return P ? [
                            a(),
                            ...P
                        ] : void 0;
                    }
                }
            }), i(h, ()=>[
                    {
                        values: [
                            "current",
                            "inherit",
                            "transparent"
                        ],
                        valueThemeKeys: [
                            "--border-color",
                            "--color"
                        ],
                        modifiers: Array.from({
                            length: 21
                        }, (k, $)=>"".concat($ * 5)),
                        hasDefaultValue: !0
                    },
                    {
                        values: [
                            "0",
                            "2",
                            "4",
                            "8"
                        ],
                        valueThemeKeys: [
                            "--border-width"
                        ]
                    }
                ]);
        };
        var G = c;
        let a = ()=>F([
                V("--tw-border-style", "solid")
            ]);
        var _r_get, _r_get1;
        c("border", {
            width: (h)=>[
                    n("border-style", "var(--tw-border-style)"),
                    n("border-width", h)
                ],
            color: (h)=>[
                    n("border-color", h)
                ]
        }), c("border-x", {
            width: (h)=>[
                    n("border-inline-style", "var(--tw-border-style)"),
                    n("border-inline-width", h)
                ],
            color: (h)=>[
                    n("border-inline-color", h)
                ]
        }), c("border-y", {
            width: (h)=>[
                    n("border-block-style", "var(--tw-border-style)"),
                    n("border-block-width", h)
                ],
            color: (h)=>[
                    n("border-block-color", h)
                ]
        }), c("border-s", {
            width: (h)=>[
                    n("border-inline-start-style", "var(--tw-border-style)"),
                    n("border-inline-start-width", h)
                ],
            color: (h)=>[
                    n("border-inline-start-color", h)
                ]
        }), c("border-e", {
            width: (h)=>[
                    n("border-inline-end-style", "var(--tw-border-style)"),
                    n("border-inline-end-width", h)
                ],
            color: (h)=>[
                    n("border-inline-end-color", h)
                ]
        }), c("border-t", {
            width: (h)=>[
                    n("border-top-style", "var(--tw-border-style)"),
                    n("border-top-width", h)
                ],
            color: (h)=>[
                    n("border-top-color", h)
                ]
        }), c("border-r", {
            width: (h)=>[
                    n("border-right-style", "var(--tw-border-style)"),
                    n("border-right-width", h)
                ],
            color: (h)=>[
                    n("border-right-color", h)
                ]
        }), c("border-b", {
            width: (h)=>[
                    n("border-bottom-style", "var(--tw-border-style)"),
                    n("border-bottom-width", h)
                ],
            color: (h)=>[
                    n("border-bottom-color", h)
                ]
        }), c("border-l", {
            width: (h)=>[
                    n("border-left-style", "var(--tw-border-style)"),
                    n("border-left-width", h)
                ],
            color: (h)=>[
                    n("border-left-color", h)
                ]
        }), o("divide-x", {
            defaultValue: (_r_get = r.get([
                "--default-border-width"
            ])) !== null && _r_get !== void 0 ? _r_get : "1px",
            themeKeys: [
                "--divide-width",
                "--border-width"
            ],
            handleBareValue: (param)=>{
                let { value: h } = param;
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(h) ? "".concat(h, "px") : null;
            },
            handle: (h)=>[
                    F([
                        V("--tw-divide-x-reverse", "0")
                    ]),
                    B(":where(& > :not(:last-child))", [
                        n("--tw-sort", "divide-x-width"),
                        a(),
                        n("--tw-divide-x-reverse", "0"),
                        n("border-inline-style", "var(--tw-border-style)"),
                        n("border-inline-start-width", "calc(".concat(h, " * var(--tw-divide-x-reverse))")),
                        n("border-inline-end-width", "calc(".concat(h, " * calc(1 - var(--tw-divide-x-reverse)))"))
                    ])
                ]
        }), o("divide-y", {
            defaultValue: (_r_get1 = r.get([
                "--default-border-width"
            ])) !== null && _r_get1 !== void 0 ? _r_get1 : "1px",
            themeKeys: [
                "--divide-width",
                "--border-width"
            ],
            handleBareValue: (param)=>{
                let { value: h } = param;
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(h) ? "".concat(h, "px") : null;
            },
            handle: (h)=>[
                    F([
                        V("--tw-divide-y-reverse", "0")
                    ]),
                    B(":where(& > :not(:last-child))", [
                        n("--tw-sort", "divide-y-width"),
                        a(),
                        n("--tw-divide-y-reverse", "0"),
                        n("border-bottom-style", "var(--tw-border-style)"),
                        n("border-top-style", "var(--tw-border-style)"),
                        n("border-top-width", "calc(".concat(h, " * var(--tw-divide-y-reverse))")),
                        n("border-bottom-width", "calc(".concat(h, " * calc(1 - var(--tw-divide-y-reverse)))"))
                    ])
                ]
        }), i("divide-x", ()=>[
                {
                    values: [
                        "0",
                        "2",
                        "4",
                        "8"
                    ],
                    valueThemeKeys: [
                        "--divide-width",
                        "--border-width"
                    ],
                    hasDefaultValue: !0
                }
            ]), i("divide-y", ()=>[
                {
                    values: [
                        "0",
                        "2",
                        "4",
                        "8"
                    ],
                    valueThemeKeys: [
                        "--divide-width",
                        "--border-width"
                    ],
                    hasDefaultValue: !0
                }
            ]), e("divide-x-reverse", [
            ()=>F([
                    V("--tw-divide-x-reverse", "0")
                ]),
            ()=>B(":where(& > :not(:last-child))", [
                    n("--tw-divide-x-reverse", "1")
                ])
        ]), e("divide-y-reverse", [
            ()=>F([
                    V("--tw-divide-y-reverse", "0")
                ]),
            ()=>B(":where(& > :not(:last-child))", [
                    n("--tw-divide-y-reverse", "1")
                ])
        ]);
        for (let h of [
            "solid",
            "dashed",
            "dotted",
            "double",
            "none"
        ])e("divide-".concat(h), [
            ()=>B(":where(& > :not(:last-child))", [
                    n("--tw-sort", "divide-style"),
                    n("--tw-border-style", h),
                    n("border-style", h)
                ])
        ]);
    }
    e("bg-auto", [
        [
            "background-size",
            "auto"
        ]
    ]), e("bg-cover", [
        [
            "background-size",
            "cover"
        ]
    ]), e("bg-contain", [
        [
            "background-size",
            "contain"
        ]
    ]), o("bg-size", {
        handle (a) {
            if (a) return [
                n("background-size", a)
            ];
        }
    }), e("bg-fixed", [
        [
            "background-attachment",
            "fixed"
        ]
    ]), e("bg-local", [
        [
            "background-attachment",
            "local"
        ]
    ]), e("bg-scroll", [
        [
            "background-attachment",
            "scroll"
        ]
    ]), e("bg-top", [
        [
            "background-position",
            "top"
        ]
    ]), e("bg-top-left", [
        [
            "background-position",
            "left top"
        ]
    ]), e("bg-top-right", [
        [
            "background-position",
            "right top"
        ]
    ]), e("bg-bottom", [
        [
            "background-position",
            "bottom"
        ]
    ]), e("bg-bottom-left", [
        [
            "background-position",
            "left bottom"
        ]
    ]), e("bg-bottom-right", [
        [
            "background-position",
            "right bottom"
        ]
    ]), e("bg-left", [
        [
            "background-position",
            "left"
        ]
    ]), e("bg-right", [
        [
            "background-position",
            "right"
        ]
    ]), e("bg-center", [
        [
            "background-position",
            "center"
        ]
    ]), o("bg-position", {
        handle (a) {
            if (a) return [
                n("background-position", a)
            ];
        }
    }), e("bg-repeat", [
        [
            "background-repeat",
            "repeat"
        ]
    ]), e("bg-no-repeat", [
        [
            "background-repeat",
            "no-repeat"
        ]
    ]), e("bg-repeat-x", [
        [
            "background-repeat",
            "repeat-x"
        ]
    ]), e("bg-repeat-y", [
        [
            "background-repeat",
            "repeat-y"
        ]
    ]), e("bg-repeat-round", [
        [
            "background-repeat",
            "round"
        ]
    ]), e("bg-repeat-space", [
        [
            "background-repeat",
            "space"
        ]
    ]), e("bg-none", [
        [
            "background-image",
            "none"
        ]
    ]);
    {
        let h = function($) {
            let P = "in oklab";
            if (($ === null || $ === void 0 ? void 0 : $.kind) === "named") switch($.value){
                case "longer":
                case "shorter":
                case "increasing":
                case "decreasing":
                    P = "in oklch ".concat($.value, " hue");
                    break;
                default:
                    P = "in ".concat($.value);
            }
            else ($ === null || $ === void 0 ? void 0 : $.kind) === "arbitrary" && (P = $.value);
            return P;
        }, A = function(param) {
            let { negative: $ } = param;
            return (P)=>{
                if (!P.value) return;
                if (P.value.kind === "arbitrary") {
                    if (P.modifier) return;
                    let I = P.value.value;
                    var _P_value_dataType;
                    switch((_P_value_dataType = P.value.dataType) !== null && _P_value_dataType !== void 0 ? _P_value_dataType : (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(I, [
                        "angle"
                    ])){
                        case "angle":
                            return I = $ ? "calc(".concat(I, " * -1)") : "".concat(I), [
                                n("--tw-gradient-position", I),
                                n("background-image", "linear-gradient(var(--tw-gradient-stops,".concat(I, "))"))
                            ];
                        default:
                            return $ ? void 0 : [
                                n("--tw-gradient-position", I),
                                n("background-image", "linear-gradient(var(--tw-gradient-stops,".concat(I, "))"))
                            ];
                    }
                }
                let N = P.value.value;
                if (!$ && c.has(N)) N = c.get(N);
                else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(N)) N = $ ? "calc(".concat(N, "deg * -1)") : "".concat(N, "deg");
                else return;
                let T = h(P.modifier);
                return [
                    n("--tw-gradient-position", "".concat(N)),
                    Y("@supports (background-image: linear-gradient(in lab, red, red))", [
                        n("--tw-gradient-position", "".concat(N, " ").concat(T))
                    ]),
                    n("background-image", "linear-gradient(var(--tw-gradient-stops))")
                ];
            };
        }, k = function(param) {
            let { negative: $ } = param;
            return (P)=>{
                var _P_value;
                if (((_P_value = P.value) === null || _P_value === void 0 ? void 0 : _P_value.kind) === "arbitrary") {
                    if (P.modifier) return;
                    let I = P.value.value;
                    return [
                        n("--tw-gradient-position", I),
                        n("background-image", "conic-gradient(var(--tw-gradient-stops,".concat(I, "))"))
                    ];
                }
                let N = h(P.modifier);
                if (!P.value) return [
                    n("--tw-gradient-position", N),
                    n("background-image", "conic-gradient(var(--tw-gradient-stops))")
                ];
                let T = P.value.value;
                if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(T)) return T = $ ? "calc(".concat(T, "deg * -1)") : "".concat(T, "deg"), [
                    n("--tw-gradient-position", "from ".concat(T, " ").concat(N)),
                    n("background-image", "conic-gradient(var(--tw-gradient-stops))")
                ];
            };
        };
        var K = h, U = A, q = k;
        let a = [
            "oklab",
            "oklch",
            "srgb",
            "hsl",
            "longer",
            "shorter",
            "increasing",
            "decreasing"
        ], c = new Map([
            [
                "to-t",
                "to top"
            ],
            [
                "to-tr",
                "to top right"
            ],
            [
                "to-r",
                "to right"
            ],
            [
                "to-br",
                "to bottom right"
            ],
            [
                "to-b",
                "to bottom"
            ],
            [
                "to-bl",
                "to bottom left"
            ],
            [
                "to-l",
                "to left"
            ],
            [
                "to-tl",
                "to top left"
            ]
        ]);
        t.functional("-bg-linear", A({
            negative: !0
        })), t.functional("bg-linear", A({
            negative: !1
        })), i("bg-linear", ()=>[
                {
                    values: [
                        ...c.keys()
                    ],
                    modifiers: a
                },
                {
                    values: [
                        "0",
                        "30",
                        "60",
                        "90",
                        "120",
                        "150",
                        "180",
                        "210",
                        "240",
                        "270",
                        "300",
                        "330"
                    ],
                    supportsNegative: !0,
                    modifiers: a
                }
            ]), t.functional("-bg-conic", k({
            negative: !0
        })), t.functional("bg-conic", k({
            negative: !1
        })), i("bg-conic", ()=>[
                {
                    hasDefaultValue: !0,
                    modifiers: a
                },
                {
                    values: [
                        "0",
                        "30",
                        "60",
                        "90",
                        "120",
                        "150",
                        "180",
                        "210",
                        "240",
                        "270",
                        "300",
                        "330"
                    ],
                    supportsNegative: !0,
                    modifiers: a
                }
            ]), t.functional("bg-radial", ($)=>{
            if (!$.value) {
                let P = h($.modifier);
                return [
                    n("--tw-gradient-position", P),
                    n("background-image", "radial-gradient(var(--tw-gradient-stops))")
                ];
            }
            if ($.value.kind === "arbitrary") {
                if ($.modifier) return;
                let P = $.value.value;
                return [
                    n("--tw-gradient-position", P),
                    n("background-image", "radial-gradient(var(--tw-gradient-stops,".concat(P, "))"))
                ];
            }
        }), i("bg-radial", ()=>[
                {
                    hasDefaultValue: !0,
                    modifiers: a
                }
            ]);
    }
    t.functional("bg", (a)=>{
        if (a.value) {
            if (a.value.kind === "arbitrary") {
                let c = a.value.value;
                var _a_value_dataType;
                switch((_a_value_dataType = a.value.dataType) !== null && _a_value_dataType !== void 0 ? _a_value_dataType : (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(c, [
                    "image",
                    "color",
                    "percentage",
                    "position",
                    "bg-size",
                    "length",
                    "url"
                ])){
                    case "percentage":
                    case "position":
                        return a.modifier ? void 0 : [
                            n("background-position", c)
                        ];
                    case "bg-size":
                    case "length":
                    case "size":
                        return a.modifier ? void 0 : [
                            n("background-size", c)
                        ];
                    case "image":
                    case "url":
                        return a.modifier ? void 0 : [
                            n("background-image", c)
                        ];
                    default:
                        return c = X(c, a.modifier, r), c === null ? void 0 : [
                            n("background-color", c)
                        ];
                }
            }
            {
                let c = te(a, r, [
                    "--background-color",
                    "--color"
                ]);
                if (c) return [
                    n("background-color", c)
                ];
            }
            {
                if (a.modifier) return;
                let c = r.resolve(a.value.value, [
                    "--background-image"
                ]);
                if (c) return [
                    n("background-image", c)
                ];
            }
        }
    }), i("bg", ()=>[
            {
                values: [
                    "current",
                    "inherit",
                    "transparent"
                ],
                valueThemeKeys: [
                    "--background-color",
                    "--color"
                ],
                modifiers: Array.from({
                    length: 21
                }, (a, c)=>"".concat(c * 5))
            },
            {
                values: [],
                valueThemeKeys: [
                    "--background-image"
                ]
            }
        ]);
    let v = ()=>F([
            V("--tw-gradient-position"),
            V("--tw-gradient-from", "#0000", "<color>"),
            V("--tw-gradient-via", "#0000", "<color>"),
            V("--tw-gradient-to", "#0000", "<color>"),
            V("--tw-gradient-stops"),
            V("--tw-gradient-via-stops"),
            V("--tw-gradient-from-position", "0%", "<length-percentage>"),
            V("--tw-gradient-via-position", "50%", "<length-percentage>"),
            V("--tw-gradient-to-position", "100%", "<length-percentage>")
        ]);
    function y1(a, c) {
        t.functional(a, (h)=>{
            if (h.value) {
                if (h.value.kind === "arbitrary") {
                    let A = h.value.value;
                    var _h_value_dataType;
                    switch((_h_value_dataType = h.value.dataType) !== null && _h_value_dataType !== void 0 ? _h_value_dataType : (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(A, [
                        "color",
                        "length",
                        "percentage"
                    ])){
                        case "length":
                        case "percentage":
                            return h.modifier ? void 0 : c.position(A);
                        default:
                            return A = X(A, h.modifier, r), A === null ? void 0 : c.color(A);
                    }
                }
                {
                    let A = te(h, r, [
                        "--background-color",
                        "--color"
                    ]);
                    if (A) return c.color(A);
                }
                {
                    if (h.modifier) return;
                    let A = r.resolve(h.value.value, [
                        "--gradient-color-stop-positions"
                    ]);
                    if (A) return c.position(A);
                    if (h.value.value[h.value.value.length - 1] === "%" && (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(h.value.value.slice(0, -1))) return c.position(h.value.value);
                }
            }
        }), i(a, ()=>[
                {
                    values: [
                        "current",
                        "inherit",
                        "transparent"
                    ],
                    valueThemeKeys: [
                        "--background-color",
                        "--color"
                    ],
                    modifiers: Array.from({
                        length: 21
                    }, (h, A)=>"".concat(A * 5))
                },
                {
                    values: Array.from({
                        length: 21
                    }, (h, A)=>"".concat(A * 5, "%")),
                    valueThemeKeys: [
                        "--gradient-color-stop-positions"
                    ]
                }
            ]);
    }
    y1("from", {
        color: (a)=>[
                v(),
                n("--tw-sort", "--tw-gradient-from"),
                n("--tw-gradient-from", a),
                n("--tw-gradient-stops", "var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position))")
            ],
        position: (a)=>[
                v(),
                n("--tw-gradient-from-position", a)
            ]
    }), e("via-none", [
        [
            "--tw-gradient-via-stops",
            "initial"
        ]
    ]), y1("via", {
        color: (a)=>[
                v(),
                n("--tw-sort", "--tw-gradient-via"),
                n("--tw-gradient-via", a),
                n("--tw-gradient-via-stops", "var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position)"),
                n("--tw-gradient-stops", "var(--tw-gradient-via-stops)")
            ],
        position: (a)=>[
                v(),
                n("--tw-gradient-via-position", a)
            ]
    }), y1("to", {
        color: (a)=>[
                v(),
                n("--tw-sort", "--tw-gradient-to"),
                n("--tw-gradient-to", a),
                n("--tw-gradient-stops", "var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position))")
            ],
        position: (a)=>[
                v(),
                n("--tw-gradient-to-position", a)
            ]
    }), e("mask-none", [
        [
            "mask-image",
            "none"
        ]
    ]), t.functional("mask", (a)=>{
        if (!a.value || a.modifier || a.value.kind !== "arbitrary") return;
        let c = a.value.value;
        var _a_value_dataType;
        switch((_a_value_dataType = a.value.dataType) !== null && _a_value_dataType !== void 0 ? _a_value_dataType : (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(c, [
            "image",
            "percentage",
            "position",
            "bg-size",
            "length",
            "url"
        ])){
            case "percentage":
            case "position":
                return a.modifier ? void 0 : [
                    n("mask-position", c)
                ];
            case "bg-size":
            case "length":
            case "size":
                return [
                    n("mask-size", c)
                ];
            case "image":
            case "url":
            default:
                return [
                    n("mask-image", c)
                ];
        }
    }), e("mask-add", [
        [
            "mask-composite",
            "add"
        ]
    ]), e("mask-subtract", [
        [
            "mask-composite",
            "subtract"
        ]
    ]), e("mask-intersect", [
        [
            "mask-composite",
            "intersect"
        ]
    ]), e("mask-exclude", [
        [
            "mask-composite",
            "exclude"
        ]
    ]), e("mask-alpha", [
        [
            "mask-mode",
            "alpha"
        ]
    ]), e("mask-luminance", [
        [
            "mask-mode",
            "luminance"
        ]
    ]), e("mask-match", [
        [
            "mask-mode",
            "match-source"
        ]
    ]), e("mask-type-alpha", [
        [
            "mask-type",
            "alpha"
        ]
    ]), e("mask-type-luminance", [
        [
            "mask-type",
            "luminance"
        ]
    ]), e("mask-auto", [
        [
            "mask-size",
            "auto"
        ]
    ]), e("mask-cover", [
        [
            "mask-size",
            "cover"
        ]
    ]), e("mask-contain", [
        [
            "mask-size",
            "contain"
        ]
    ]), o("mask-size", {
        handle (a) {
            if (a) return [
                n("mask-size", a)
            ];
        }
    }), e("mask-top", [
        [
            "mask-position",
            "top"
        ]
    ]), e("mask-top-left", [
        [
            "mask-position",
            "left top"
        ]
    ]), e("mask-top-right", [
        [
            "mask-position",
            "right top"
        ]
    ]), e("mask-bottom", [
        [
            "mask-position",
            "bottom"
        ]
    ]), e("mask-bottom-left", [
        [
            "mask-position",
            "left bottom"
        ]
    ]), e("mask-bottom-right", [
        [
            "mask-position",
            "right bottom"
        ]
    ]), e("mask-left", [
        [
            "mask-position",
            "left"
        ]
    ]), e("mask-right", [
        [
            "mask-position",
            "right"
        ]
    ]), e("mask-center", [
        [
            "mask-position",
            "center"
        ]
    ]), o("mask-position", {
        handle (a) {
            if (a) return [
                n("mask-position", a)
            ];
        }
    }), e("mask-repeat", [
        [
            "mask-repeat",
            "repeat"
        ]
    ]), e("mask-no-repeat", [
        [
            "mask-repeat",
            "no-repeat"
        ]
    ]), e("mask-repeat-x", [
        [
            "mask-repeat",
            "repeat-x"
        ]
    ]), e("mask-repeat-y", [
        [
            "mask-repeat",
            "repeat-y"
        ]
    ]), e("mask-repeat-round", [
        [
            "mask-repeat",
            "round"
        ]
    ]), e("mask-repeat-space", [
        [
            "mask-repeat",
            "space"
        ]
    ]), e("mask-clip-border", [
        [
            "mask-clip",
            "border-box"
        ]
    ]), e("mask-clip-padding", [
        [
            "mask-clip",
            "padding-box"
        ]
    ]), e("mask-clip-content", [
        [
            "mask-clip",
            "content-box"
        ]
    ]), e("mask-clip-fill", [
        [
            "mask-clip",
            "fill-box"
        ]
    ]), e("mask-clip-stroke", [
        [
            "mask-clip",
            "stroke-box"
        ]
    ]), e("mask-clip-view", [
        [
            "mask-clip",
            "view-box"
        ]
    ]), e("mask-no-clip", [
        [
            "mask-clip",
            "no-clip"
        ]
    ]), e("mask-origin-border", [
        [
            "mask-origin",
            "border-box"
        ]
    ]), e("mask-origin-padding", [
        [
            "mask-origin",
            "padding-box"
        ]
    ]), e("mask-origin-content", [
        [
            "mask-origin",
            "content-box"
        ]
    ]), e("mask-origin-fill", [
        [
            "mask-origin",
            "fill-box"
        ]
    ]), e("mask-origin-stroke", [
        [
            "mask-origin",
            "stroke-box"
        ]
    ]), e("mask-origin-view", [
        [
            "mask-origin",
            "view-box"
        ]
    ]);
    let x = ()=>F([
            V("--tw-mask-linear", "linear-gradient(#fff, #fff)"),
            V("--tw-mask-radial", "linear-gradient(#fff, #fff)"),
            V("--tw-mask-conic", "linear-gradient(#fff, #fff)")
        ]);
    function S(a, c) {
        t.functional(a, (h)=>{
            if (h.value) {
                if (h.value.kind === "arbitrary") {
                    let A = h.value.value;
                    var _h_value_dataType;
                    switch((_h_value_dataType = h.value.dataType) !== null && _h_value_dataType !== void 0 ? _h_value_dataType : (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(A, [
                        "length",
                        "percentage",
                        "color"
                    ])){
                        case "color":
                            return A = X(A, h.modifier, r), A === null ? void 0 : c.color(A);
                        case "percentage":
                            return h.modifier || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(A.slice(0, -1)) ? void 0 : c.position(A);
                        default:
                            return h.modifier ? void 0 : c.position(A);
                    }
                }
                {
                    let A = te(h, r, [
                        "--background-color",
                        "--color"
                    ]);
                    if (A) return c.color(A);
                }
                {
                    if (h.modifier) return;
                    let A = (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(h.value.value, [
                        "number",
                        "percentage"
                    ]);
                    if (!A) return;
                    switch(A){
                        case "number":
                            {
                                let k = r.resolve(null, [
                                    "--spacing"
                                ]);
                                return !k || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["f"])(h.value.value) ? void 0 : c.position("calc(".concat(k, " * ").concat(h.value.value, ")"));
                            }
                        case "percentage":
                            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(h.value.value.slice(0, -1)) ? c.position(h.value.value) : void 0;
                        default:
                            return;
                    }
                }
            }
        }), i(a, ()=>[
                {
                    values: [
                        "current",
                        "inherit",
                        "transparent"
                    ],
                    valueThemeKeys: [
                        "--background-color",
                        "--color"
                    ],
                    modifiers: Array.from({
                        length: 21
                    }, (h, A)=>"".concat(A * 5))
                },
                {
                    values: Array.from({
                        length: 21
                    }, (h, A)=>"".concat(A * 5, "%")),
                    valueThemeKeys: [
                        "--gradient-color-stop-positions"
                    ]
                }
            ]), i(a, ()=>[
                {
                    values: Array.from({
                        length: 21
                    }, (h, A)=>"".concat(A * 5, "%"))
                },
                {
                    values: r.get([
                        "--spacing"
                    ]) ? Ze : []
                },
                {
                    values: [
                        "current",
                        "inherit",
                        "transparent"
                    ],
                    valueThemeKeys: [
                        "--background-color",
                        "--color"
                    ],
                    modifiers: Array.from({
                        length: 21
                    }, (h, A)=>"".concat(A * 5))
                }
            ]);
    }
    let C = ()=>F([
            V("--tw-mask-left", "linear-gradient(#fff, #fff)"),
            V("--tw-mask-right", "linear-gradient(#fff, #fff)"),
            V("--tw-mask-bottom", "linear-gradient(#fff, #fff)"),
            V("--tw-mask-top", "linear-gradient(#fff, #fff)")
        ]);
    function b(a, c, h) {
        S(a, {
            color (A) {
                let k = [
                    x(),
                    C(),
                    n("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
                    n("mask-composite", "intersect"),
                    n("--tw-mask-linear", "var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top)")
                ];
                for (let $ of [
                    "top",
                    "right",
                    "bottom",
                    "left"
                ])h[$] && (k.push(n("--tw-mask-".concat($), "linear-gradient(to ".concat($, ", var(--tw-mask-").concat($, "-from-color) var(--tw-mask-").concat($, "-from-position), var(--tw-mask-").concat($, "-to-color) var(--tw-mask-").concat($, "-to-position))"))), k.push(F([
                    V("--tw-mask-".concat($, "-from-position"), "0%"),
                    V("--tw-mask-".concat($, "-to-position"), "100%"),
                    V("--tw-mask-".concat($, "-from-color"), "black"),
                    V("--tw-mask-".concat($, "-to-color"), "transparent")
                ])), k.push(n("--tw-mask-".concat($, "-").concat(c, "-color"), A)));
                return k;
            },
            position (A) {
                let k = [
                    x(),
                    C(),
                    n("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
                    n("mask-composite", "intersect"),
                    n("--tw-mask-linear", "var(--tw-mask-left), var(--tw-mask-right), var(--tw-mask-bottom), var(--tw-mask-top)")
                ];
                for (let $ of [
                    "top",
                    "right",
                    "bottom",
                    "left"
                ])h[$] && (k.push(n("--tw-mask-".concat($), "linear-gradient(to ".concat($, ", var(--tw-mask-").concat($, "-from-color) var(--tw-mask-").concat($, "-from-position), var(--tw-mask-").concat($, "-to-color) var(--tw-mask-").concat($, "-to-position))"))), k.push(F([
                    V("--tw-mask-".concat($, "-from-position"), "0%"),
                    V("--tw-mask-".concat($, "-to-position"), "100%"),
                    V("--tw-mask-".concat($, "-from-color"), "black"),
                    V("--tw-mask-".concat($, "-to-color"), "transparent")
                ])), k.push(n("--tw-mask-".concat($, "-").concat(c, "-position"), A)));
                return k;
            }
        });
    }
    b("mask-x-from", "from", {
        top: !1,
        right: !0,
        bottom: !1,
        left: !0
    }), b("mask-x-to", "to", {
        top: !1,
        right: !0,
        bottom: !1,
        left: !0
    }), b("mask-y-from", "from", {
        top: !0,
        right: !1,
        bottom: !0,
        left: !1
    }), b("mask-y-to", "to", {
        top: !0,
        right: !1,
        bottom: !0,
        left: !1
    }), b("mask-t-from", "from", {
        top: !0,
        right: !1,
        bottom: !1,
        left: !1
    }), b("mask-t-to", "to", {
        top: !0,
        right: !1,
        bottom: !1,
        left: !1
    }), b("mask-r-from", "from", {
        top: !1,
        right: !0,
        bottom: !1,
        left: !1
    }), b("mask-r-to", "to", {
        top: !1,
        right: !0,
        bottom: !1,
        left: !1
    }), b("mask-b-from", "from", {
        top: !1,
        right: !1,
        bottom: !0,
        left: !1
    }), b("mask-b-to", "to", {
        top: !1,
        right: !1,
        bottom: !0,
        left: !1
    }), b("mask-l-from", "from", {
        top: !1,
        right: !1,
        bottom: !1,
        left: !0
    }), b("mask-l-to", "to", {
        top: !1,
        right: !1,
        bottom: !1,
        left: !0
    });
    let O = ()=>F([
            V("--tw-mask-linear-position", "0deg"),
            V("--tw-mask-linear-from-position", "0%"),
            V("--tw-mask-linear-to-position", "100%"),
            V("--tw-mask-linear-from-color", "black"),
            V("--tw-mask-linear-to-color", "transparent")
        ]);
    o("mask-linear", {
        defaultValue: null,
        supportsNegative: !0,
        supportsFractions: !1,
        handleBareValue (a) {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(a.value) ? "calc(1deg * ".concat(a.value, ")") : null;
        },
        handleNegativeBareValue (a) {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(a.value) ? "calc(1deg * -".concat(a.value, ")") : null;
        },
        handle: (a)=>[
                x(),
                O(),
                n("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
                n("mask-composite", "intersect"),
                n("--tw-mask-linear", "linear-gradient(var(--tw-mask-linear-stops, var(--tw-mask-linear-position)))"),
                n("--tw-mask-linear-position", a)
            ]
    }), i("mask-linear", ()=>[
            {
                supportsNegative: !0,
                values: [
                    "0",
                    "1",
                    "2",
                    "3",
                    "6",
                    "12",
                    "45",
                    "90",
                    "180"
                ]
            }
        ]), S("mask-linear-from", {
        color: (a)=>[
                x(),
                O(),
                n("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
                n("mask-composite", "intersect"),
                n("--tw-mask-linear-stops", "var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position)"),
                n("--tw-mask-linear", "linear-gradient(var(--tw-mask-linear-stops))"),
                n("--tw-mask-linear-from-color", a)
            ],
        position: (a)=>[
                x(),
                O(),
                n("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
                n("mask-composite", "intersect"),
                n("--tw-mask-linear-stops", "var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position)"),
                n("--tw-mask-linear", "linear-gradient(var(--tw-mask-linear-stops))"),
                n("--tw-mask-linear-from-position", a)
            ]
    }), S("mask-linear-to", {
        color: (a)=>[
                x(),
                O(),
                n("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
                n("mask-composite", "intersect"),
                n("--tw-mask-linear-stops", "var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position)"),
                n("--tw-mask-linear", "linear-gradient(var(--tw-mask-linear-stops))"),
                n("--tw-mask-linear-to-color", a)
            ],
        position: (a)=>[
                x(),
                O(),
                n("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
                n("mask-composite", "intersect"),
                n("--tw-mask-linear-stops", "var(--tw-mask-linear-position), var(--tw-mask-linear-from-color) var(--tw-mask-linear-from-position), var(--tw-mask-linear-to-color) var(--tw-mask-linear-to-position)"),
                n("--tw-mask-linear", "linear-gradient(var(--tw-mask-linear-stops))"),
                n("--tw-mask-linear-to-position", a)
            ]
    });
    let R = ()=>F([
            V("--tw-mask-radial-from-position", "0%"),
            V("--tw-mask-radial-to-position", "100%"),
            V("--tw-mask-radial-from-color", "black"),
            V("--tw-mask-radial-to-color", "transparent"),
            V("--tw-mask-radial-shape", "ellipse"),
            V("--tw-mask-radial-size", "farthest-corner"),
            V("--tw-mask-radial-position", "center")
        ]);
    e("mask-circle", [
        [
            "--tw-mask-radial-shape",
            "circle"
        ]
    ]), e("mask-ellipse", [
        [
            "--tw-mask-radial-shape",
            "ellipse"
        ]
    ]), e("mask-radial-closest-side", [
        [
            "--tw-mask-radial-size",
            "closest-side"
        ]
    ]), e("mask-radial-farthest-side", [
        [
            "--tw-mask-radial-size",
            "farthest-side"
        ]
    ]), e("mask-radial-closest-corner", [
        [
            "--tw-mask-radial-size",
            "closest-corner"
        ]
    ]), e("mask-radial-farthest-corner", [
        [
            "--tw-mask-radial-size",
            "farthest-corner"
        ]
    ]), e("mask-radial-at-top", [
        [
            "--tw-mask-radial-position",
            "top"
        ]
    ]), e("mask-radial-at-top-left", [
        [
            "--tw-mask-radial-position",
            "top left"
        ]
    ]), e("mask-radial-at-top-right", [
        [
            "--tw-mask-radial-position",
            "top right"
        ]
    ]), e("mask-radial-at-bottom", [
        [
            "--tw-mask-radial-position",
            "bottom"
        ]
    ]), e("mask-radial-at-bottom-left", [
        [
            "--tw-mask-radial-position",
            "bottom left"
        ]
    ]), e("mask-radial-at-bottom-right", [
        [
            "--tw-mask-radial-position",
            "bottom right"
        ]
    ]), e("mask-radial-at-left", [
        [
            "--tw-mask-radial-position",
            "left"
        ]
    ]), e("mask-radial-at-right", [
        [
            "--tw-mask-radial-position",
            "right"
        ]
    ]), e("mask-radial-at-center", [
        [
            "--tw-mask-radial-position",
            "center"
        ]
    ]), o("mask-radial-at", {
        defaultValue: null,
        supportsNegative: !1,
        supportsFractions: !1,
        handle: (a)=>[
                n("--tw-mask-radial-position", a)
            ]
    }), o("mask-radial", {
        defaultValue: null,
        supportsNegative: !1,
        supportsFractions: !1,
        handle: (a)=>[
                x(),
                R(),
                n("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
                n("mask-composite", "intersect"),
                n("--tw-mask-radial", "radial-gradient(var(--tw-mask-radial-stops, var(--tw-mask-radial-size)))"),
                n("--tw-mask-radial-size", a)
            ]
    }), S("mask-radial-from", {
        color: (a)=>[
                x(),
                R(),
                n("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
                n("mask-composite", "intersect"),
                n("--tw-mask-radial-stops", "var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position)"),
                n("--tw-mask-radial", "radial-gradient(var(--tw-mask-radial-stops))"),
                n("--tw-mask-radial-from-color", a)
            ],
        position: (a)=>[
                x(),
                R(),
                n("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
                n("mask-composite", "intersect"),
                n("--tw-mask-radial-stops", "var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position)"),
                n("--tw-mask-radial", "radial-gradient(var(--tw-mask-radial-stops))"),
                n("--tw-mask-radial-from-position", a)
            ]
    }), S("mask-radial-to", {
        color: (a)=>[
                x(),
                R(),
                n("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
                n("mask-composite", "intersect"),
                n("--tw-mask-radial-stops", "var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position)"),
                n("--tw-mask-radial", "radial-gradient(var(--tw-mask-radial-stops))"),
                n("--tw-mask-radial-to-color", a)
            ],
        position: (a)=>[
                x(),
                R(),
                n("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
                n("mask-composite", "intersect"),
                n("--tw-mask-radial-stops", "var(--tw-mask-radial-shape) var(--tw-mask-radial-size) at var(--tw-mask-radial-position), var(--tw-mask-radial-from-color) var(--tw-mask-radial-from-position), var(--tw-mask-radial-to-color) var(--tw-mask-radial-to-position)"),
                n("--tw-mask-radial", "radial-gradient(var(--tw-mask-radial-stops))"),
                n("--tw-mask-radial-to-position", a)
            ]
    });
    let _ = ()=>F([
            V("--tw-mask-conic-position", "0deg"),
            V("--tw-mask-conic-from-position", "0%"),
            V("--tw-mask-conic-to-position", "100%"),
            V("--tw-mask-conic-from-color", "black"),
            V("--tw-mask-conic-to-color", "transparent")
        ]);
    o("mask-conic", {
        defaultValue: null,
        supportsNegative: !0,
        supportsFractions: !1,
        handleBareValue (a) {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(a.value) ? "calc(1deg * ".concat(a.value, ")") : null;
        },
        handleNegativeBareValue (a) {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(a.value) ? "calc(1deg * -".concat(a.value, ")") : null;
        },
        handle: (a)=>[
                x(),
                _(),
                n("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
                n("mask-composite", "intersect"),
                n("--tw-mask-conic", "conic-gradient(var(--tw-mask-conic-stops, var(--tw-mask-conic-position)))"),
                n("--tw-mask-conic-position", a)
            ]
    }), i("mask-conic", ()=>[
            {
                supportsNegative: !0,
                values: [
                    "0",
                    "1",
                    "2",
                    "3",
                    "6",
                    "12",
                    "45",
                    "90",
                    "180"
                ]
            }
        ]), S("mask-conic-from", {
        color: (a)=>[
                x(),
                _(),
                n("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
                n("mask-composite", "intersect"),
                n("--tw-mask-conic-stops", "from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position)"),
                n("--tw-mask-conic", "conic-gradient(var(--tw-mask-conic-stops))"),
                n("--tw-mask-conic-from-color", a)
            ],
        position: (a)=>[
                x(),
                _(),
                n("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
                n("mask-composite", "intersect"),
                n("--tw-mask-conic-stops", "from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position)"),
                n("--tw-mask-conic", "conic-gradient(var(--tw-mask-conic-stops))"),
                n("--tw-mask-conic-from-position", a)
            ]
    }), S("mask-conic-to", {
        color: (a)=>[
                x(),
                _(),
                n("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
                n("mask-composite", "intersect"),
                n("--tw-mask-conic-stops", "from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position)"),
                n("--tw-mask-conic", "conic-gradient(var(--tw-mask-conic-stops))"),
                n("--tw-mask-conic-to-color", a)
            ],
        position: (a)=>[
                x(),
                _(),
                n("mask-image", "var(--tw-mask-linear), var(--tw-mask-radial), var(--tw-mask-conic)"),
                n("mask-composite", "intersect"),
                n("--tw-mask-conic-stops", "from var(--tw-mask-conic-position), var(--tw-mask-conic-from-color) var(--tw-mask-conic-from-position), var(--tw-mask-conic-to-color) var(--tw-mask-conic-to-position)"),
                n("--tw-mask-conic", "conic-gradient(var(--tw-mask-conic-stops))"),
                n("--tw-mask-conic-to-position", a)
            ]
    }), e("box-decoration-slice", [
        [
            "-webkit-box-decoration-break",
            "slice"
        ],
        [
            "box-decoration-break",
            "slice"
        ]
    ]), e("box-decoration-clone", [
        [
            "-webkit-box-decoration-break",
            "clone"
        ],
        [
            "box-decoration-break",
            "clone"
        ]
    ]), e("bg-clip-text", [
        [
            "background-clip",
            "text"
        ]
    ]), e("bg-clip-border", [
        [
            "background-clip",
            "border-box"
        ]
    ]), e("bg-clip-padding", [
        [
            "background-clip",
            "padding-box"
        ]
    ]), e("bg-clip-content", [
        [
            "background-clip",
            "content-box"
        ]
    ]), e("bg-origin-border", [
        [
            "background-origin",
            "border-box"
        ]
    ]), e("bg-origin-padding", [
        [
            "background-origin",
            "padding-box"
        ]
    ]), e("bg-origin-content", [
        [
            "background-origin",
            "content-box"
        ]
    ]);
    for (let a of [
        "normal",
        "multiply",
        "screen",
        "overlay",
        "darken",
        "lighten",
        "color-dodge",
        "color-burn",
        "hard-light",
        "soft-light",
        "difference",
        "exclusion",
        "hue",
        "saturation",
        "color",
        "luminosity"
    ])e("bg-blend-".concat(a), [
        [
            "background-blend-mode",
            a
        ]
    ]), e("mix-blend-".concat(a), [
        [
            "mix-blend-mode",
            a
        ]
    ]);
    e("mix-blend-plus-darker", [
        [
            "mix-blend-mode",
            "plus-darker"
        ]
    ]), e("mix-blend-plus-lighter", [
        [
            "mix-blend-mode",
            "plus-lighter"
        ]
    ]), e("fill-none", [
        [
            "fill",
            "none"
        ]
    ]), t.functional("fill", (a)=>{
        if (!a.value) return;
        if (a.value.kind === "arbitrary") {
            let h = X(a.value.value, a.modifier, r);
            return h === null ? void 0 : [
                n("fill", h)
            ];
        }
        let c = te(a, r, [
            "--fill",
            "--color"
        ]);
        if (c) return [
            n("fill", c)
        ];
    }), i("fill", ()=>[
            {
                values: [
                    "current",
                    "inherit",
                    "transparent"
                ],
                valueThemeKeys: [
                    "--fill",
                    "--color"
                ],
                modifiers: Array.from({
                    length: 21
                }, (a, c)=>"".concat(c * 5))
            }
        ]), e("stroke-none", [
        [
            "stroke",
            "none"
        ]
    ]), t.functional("stroke", (a)=>{
        if (a.value) {
            if (a.value.kind === "arbitrary") {
                let c = a.value.value;
                var _a_value_dataType;
                switch((_a_value_dataType = a.value.dataType) !== null && _a_value_dataType !== void 0 ? _a_value_dataType : (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(c, [
                    "color",
                    "number",
                    "length",
                    "percentage"
                ])){
                    case "number":
                    case "length":
                    case "percentage":
                        return a.modifier ? void 0 : [
                            n("stroke-width", c)
                        ];
                    default:
                        return c = X(a.value.value, a.modifier, r), c === null ? void 0 : [
                            n("stroke", c)
                        ];
                }
            }
            {
                let c = te(a, r, [
                    "--stroke",
                    "--color"
                ]);
                if (c) return [
                    n("stroke", c)
                ];
            }
            {
                let c = r.resolve(a.value.value, [
                    "--stroke-width"
                ]);
                if (c) return [
                    n("stroke-width", c)
                ];
                if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(a.value.value)) return [
                    n("stroke-width", a.value.value)
                ];
            }
        }
    }), i("stroke", ()=>[
            {
                values: [
                    "current",
                    "inherit",
                    "transparent"
                ],
                valueThemeKeys: [
                    "--stroke",
                    "--color"
                ],
                modifiers: Array.from({
                    length: 21
                }, (a, c)=>"".concat(c * 5))
            },
            {
                values: [
                    "0",
                    "1",
                    "2",
                    "3"
                ],
                valueThemeKeys: [
                    "--stroke-width"
                ]
            }
        ]), e("object-contain", [
        [
            "object-fit",
            "contain"
        ]
    ]), e("object-cover", [
        [
            "object-fit",
            "cover"
        ]
    ]), e("object-fill", [
        [
            "object-fit",
            "fill"
        ]
    ]), e("object-none", [
        [
            "object-fit",
            "none"
        ]
    ]), e("object-scale-down", [
        [
            "object-fit",
            "scale-down"
        ]
    ]), o("object", {
        themeKeys: [
            "--object-position"
        ],
        handle: (a)=>[
                n("object-position", a)
            ],
        staticValues: {
            top: [
                n("object-position", "top")
            ],
            "top-left": [
                n("object-position", "left top")
            ],
            "top-right": [
                n("object-position", "right top")
            ],
            bottom: [
                n("object-position", "bottom")
            ],
            "bottom-left": [
                n("object-position", "left bottom")
            ],
            "bottom-right": [
                n("object-position", "right bottom")
            ],
            left: [
                n("object-position", "left")
            ],
            right: [
                n("object-position", "right")
            ],
            center: [
                n("object-position", "center")
            ]
        }
    });
    for (let [a, c] of [
        [
            "p",
            "padding"
        ],
        [
            "px",
            "padding-inline"
        ],
        [
            "py",
            "padding-block"
        ],
        [
            "ps",
            "padding-inline-start"
        ],
        [
            "pe",
            "padding-inline-end"
        ],
        [
            "pt",
            "padding-top"
        ],
        [
            "pr",
            "padding-right"
        ],
        [
            "pb",
            "padding-bottom"
        ],
        [
            "pl",
            "padding-left"
        ]
    ])l(a, [
        "--padding",
        "--spacing"
    ], (h)=>[
            n(c, h)
        ]);
    e("text-left", [
        [
            "text-align",
            "left"
        ]
    ]), e("text-center", [
        [
            "text-align",
            "center"
        ]
    ]), e("text-right", [
        [
            "text-align",
            "right"
        ]
    ]), e("text-justify", [
        [
            "text-align",
            "justify"
        ]
    ]), e("text-start", [
        [
            "text-align",
            "start"
        ]
    ]), e("text-end", [
        [
            "text-align",
            "end"
        ]
    ]), l("indent", [
        "--text-indent",
        "--spacing"
    ], (a)=>[
            n("text-indent", a)
        ], {
        supportsNegative: !0
    }), e("align-baseline", [
        [
            "vertical-align",
            "baseline"
        ]
    ]), e("align-top", [
        [
            "vertical-align",
            "top"
        ]
    ]), e("align-middle", [
        [
            "vertical-align",
            "middle"
        ]
    ]), e("align-bottom", [
        [
            "vertical-align",
            "bottom"
        ]
    ]), e("align-text-top", [
        [
            "vertical-align",
            "text-top"
        ]
    ]), e("align-text-bottom", [
        [
            "vertical-align",
            "text-bottom"
        ]
    ]), e("align-sub", [
        [
            "vertical-align",
            "sub"
        ]
    ]), e("align-super", [
        [
            "vertical-align",
            "super"
        ]
    ]), o("align", {
        themeKeys: [],
        handle: (a)=>[
                n("vertical-align", a)
            ]
    }), t.functional("font", (a)=>{
        if (!(!a.value || a.modifier)) {
            if (a.value.kind === "arbitrary") {
                let c = a.value.value;
                var _a_value_dataType;
                switch((_a_value_dataType = a.value.dataType) !== null && _a_value_dataType !== void 0 ? _a_value_dataType : (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(c, [
                    "number",
                    "generic-name",
                    "family-name"
                ])){
                    case "generic-name":
                    case "family-name":
                        return [
                            n("font-family", c)
                        ];
                    default:
                        return [
                            F([
                                V("--tw-font-weight")
                            ]),
                            n("--tw-font-weight", c),
                            n("font-weight", c)
                        ];
                }
            }
            {
                let c = r.resolveWith(a.value.value, [
                    "--font"
                ], [
                    "--font-feature-settings",
                    "--font-variation-settings"
                ]);
                if (c) {
                    let [h, A = {}] = c;
                    return [
                        n("font-family", h),
                        n("font-feature-settings", A["--font-feature-settings"]),
                        n("font-variation-settings", A["--font-variation-settings"])
                    ];
                }
            }
            {
                let c = r.resolve(a.value.value, [
                    "--font-weight"
                ]);
                if (c) return [
                    F([
                        V("--tw-font-weight")
                    ]),
                    n("--tw-font-weight", c),
                    n("font-weight", c)
                ];
            }
        }
    }), i("font", ()=>[
            {
                values: [],
                valueThemeKeys: [
                    "--font"
                ]
            },
            {
                values: [],
                valueThemeKeys: [
                    "--font-weight"
                ]
            }
        ]), e("uppercase", [
        [
            "text-transform",
            "uppercase"
        ]
    ]), e("lowercase", [
        [
            "text-transform",
            "lowercase"
        ]
    ]), e("capitalize", [
        [
            "text-transform",
            "capitalize"
        ]
    ]), e("normal-case", [
        [
            "text-transform",
            "none"
        ]
    ]), e("italic", [
        [
            "font-style",
            "italic"
        ]
    ]), e("not-italic", [
        [
            "font-style",
            "normal"
        ]
    ]), e("underline", [
        [
            "text-decoration-line",
            "underline"
        ]
    ]), e("overline", [
        [
            "text-decoration-line",
            "overline"
        ]
    ]), e("line-through", [
        [
            "text-decoration-line",
            "line-through"
        ]
    ]), e("no-underline", [
        [
            "text-decoration-line",
            "none"
        ]
    ]), e("font-stretch-normal", [
        [
            "font-stretch",
            "normal"
        ]
    ]), e("font-stretch-ultra-condensed", [
        [
            "font-stretch",
            "ultra-condensed"
        ]
    ]), e("font-stretch-extra-condensed", [
        [
            "font-stretch",
            "extra-condensed"
        ]
    ]), e("font-stretch-condensed", [
        [
            "font-stretch",
            "condensed"
        ]
    ]), e("font-stretch-semi-condensed", [
        [
            "font-stretch",
            "semi-condensed"
        ]
    ]), e("font-stretch-semi-expanded", [
        [
            "font-stretch",
            "semi-expanded"
        ]
    ]), e("font-stretch-expanded", [
        [
            "font-stretch",
            "expanded"
        ]
    ]), e("font-stretch-extra-expanded", [
        [
            "font-stretch",
            "extra-expanded"
        ]
    ]), e("font-stretch-ultra-expanded", [
        [
            "font-stretch",
            "ultra-expanded"
        ]
    ]), o("font-stretch", {
        handleBareValue: (param)=>{
            let { value: a } = param;
            if (!a.endsWith("%")) return null;
            let c = Number(a.slice(0, -1));
            return !(0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(c) || Number.isNaN(c) || c < 50 || c > 200 ? null : a;
        },
        handle: (a)=>[
                n("font-stretch", a)
            ]
    }), i("font-stretch", ()=>[
            {
                values: [
                    "50%",
                    "75%",
                    "90%",
                    "95%",
                    "100%",
                    "105%",
                    "110%",
                    "125%",
                    "150%",
                    "200%"
                ]
            }
        ]), s("placeholder", {
        themeKeys: [
            "--background-color",
            "--color"
        ],
        handle: (a)=>[
                B("&::placeholder", [
                    n("--tw-sort", "placeholder-color"),
                    n("color", a)
                ])
            ]
    }), e("decoration-solid", [
        [
            "text-decoration-style",
            "solid"
        ]
    ]), e("decoration-double", [
        [
            "text-decoration-style",
            "double"
        ]
    ]), e("decoration-dotted", [
        [
            "text-decoration-style",
            "dotted"
        ]
    ]), e("decoration-dashed", [
        [
            "text-decoration-style",
            "dashed"
        ]
    ]), e("decoration-wavy", [
        [
            "text-decoration-style",
            "wavy"
        ]
    ]), e("decoration-auto", [
        [
            "text-decoration-thickness",
            "auto"
        ]
    ]), e("decoration-from-font", [
        [
            "text-decoration-thickness",
            "from-font"
        ]
    ]), t.functional("decoration", (a)=>{
        if (a.value) {
            if (a.value.kind === "arbitrary") {
                let c = a.value.value;
                var _a_value_dataType;
                switch((_a_value_dataType = a.value.dataType) !== null && _a_value_dataType !== void 0 ? _a_value_dataType : (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(c, [
                    "color",
                    "length",
                    "percentage"
                ])){
                    case "length":
                    case "percentage":
                        return a.modifier ? void 0 : [
                            n("text-decoration-thickness", c)
                        ];
                    default:
                        return c = X(c, a.modifier, r), c === null ? void 0 : [
                            n("text-decoration-color", c)
                        ];
                }
            }
            {
                let c = r.resolve(a.value.value, [
                    "--text-decoration-thickness"
                ]);
                if (c) return a.modifier ? void 0 : [
                    n("text-decoration-thickness", c)
                ];
                if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(a.value.value)) return a.modifier ? void 0 : [
                    n("text-decoration-thickness", "".concat(a.value.value, "px"))
                ];
            }
            {
                let c = te(a, r, [
                    "--text-decoration-color",
                    "--color"
                ]);
                if (c) return [
                    n("text-decoration-color", c)
                ];
            }
        }
    }), i("decoration", ()=>[
            {
                values: [
                    "current",
                    "inherit",
                    "transparent"
                ],
                valueThemeKeys: [
                    "--text-decoration-color",
                    "--color"
                ],
                modifiers: Array.from({
                    length: 21
                }, (a, c)=>"".concat(c * 5))
            },
            {
                values: [
                    "0",
                    "1",
                    "2"
                ],
                valueThemeKeys: [
                    "--text-decoration-thickness"
                ]
            }
        ]), o("animate", {
        themeKeys: [
            "--animate"
        ],
        handle: (a)=>[
                n("animation", a)
            ],
        staticValues: {
            none: [
                n("animation", "none")
            ]
        }
    });
    {
        let a = [
            "var(--tw-blur,)",
            "var(--tw-brightness,)",
            "var(--tw-contrast,)",
            "var(--tw-grayscale,)",
            "var(--tw-hue-rotate,)",
            "var(--tw-invert,)",
            "var(--tw-saturate,)",
            "var(--tw-sepia,)",
            "var(--tw-drop-shadow,)"
        ].join(" "), c = [
            "var(--tw-backdrop-blur,)",
            "var(--tw-backdrop-brightness,)",
            "var(--tw-backdrop-contrast,)",
            "var(--tw-backdrop-grayscale,)",
            "var(--tw-backdrop-hue-rotate,)",
            "var(--tw-backdrop-invert,)",
            "var(--tw-backdrop-opacity,)",
            "var(--tw-backdrop-saturate,)",
            "var(--tw-backdrop-sepia,)"
        ].join(" "), h = ()=>F([
                V("--tw-blur"),
                V("--tw-brightness"),
                V("--tw-contrast"),
                V("--tw-grayscale"),
                V("--tw-hue-rotate"),
                V("--tw-invert"),
                V("--tw-opacity"),
                V("--tw-saturate"),
                V("--tw-sepia"),
                V("--tw-drop-shadow"),
                V("--tw-drop-shadow-color"),
                V("--tw-drop-shadow-alpha", "100%", "<percentage>"),
                V("--tw-drop-shadow-size")
            ]), A = ()=>F([
                V("--tw-backdrop-blur"),
                V("--tw-backdrop-brightness"),
                V("--tw-backdrop-contrast"),
                V("--tw-backdrop-grayscale"),
                V("--tw-backdrop-hue-rotate"),
                V("--tw-backdrop-invert"),
                V("--tw-backdrop-opacity"),
                V("--tw-backdrop-saturate"),
                V("--tw-backdrop-sepia")
            ]);
        t.functional("filter", (k)=>{
            if (!k.modifier) {
                if (k.value === null) return [
                    h(),
                    n("filter", a)
                ];
                if (k.value.kind === "arbitrary") return [
                    n("filter", k.value.value)
                ];
                switch(k.value.value){
                    case "none":
                        return [
                            n("filter", "none")
                        ];
                }
            }
        }), t.functional("backdrop-filter", (k)=>{
            if (!k.modifier) {
                if (k.value === null) return [
                    A(),
                    n("-webkit-backdrop-filter", c),
                    n("backdrop-filter", c)
                ];
                if (k.value.kind === "arbitrary") return [
                    n("-webkit-backdrop-filter", k.value.value),
                    n("backdrop-filter", k.value.value)
                ];
                switch(k.value.value){
                    case "none":
                        return [
                            n("-webkit-backdrop-filter", "none"),
                            n("backdrop-filter", "none")
                        ];
                }
            }
        }), o("blur", {
            themeKeys: [
                "--blur"
            ],
            handle: (k)=>[
                    h(),
                    n("--tw-blur", "blur(".concat(k, ")")),
                    n("filter", a)
                ],
            staticValues: {
                none: [
                    h(),
                    n("--tw-blur", " "),
                    n("filter", a)
                ]
            }
        }), o("backdrop-blur", {
            themeKeys: [
                "--backdrop-blur",
                "--blur"
            ],
            handle: (k)=>[
                    A(),
                    n("--tw-backdrop-blur", "blur(".concat(k, ")")),
                    n("-webkit-backdrop-filter", c),
                    n("backdrop-filter", c)
                ],
            staticValues: {
                none: [
                    A(),
                    n("--tw-backdrop-blur", " "),
                    n("-webkit-backdrop-filter", c),
                    n("backdrop-filter", c)
                ]
            }
        }), o("brightness", {
            themeKeys: [
                "--brightness"
            ],
            handleBareValue: (param)=>{
                let { value: k } = param;
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(k) ? "".concat(k, "%") : null;
            },
            handle: (k)=>[
                    h(),
                    n("--tw-brightness", "brightness(".concat(k, ")")),
                    n("filter", a)
                ]
        }), o("backdrop-brightness", {
            themeKeys: [
                "--backdrop-brightness",
                "--brightness"
            ],
            handleBareValue: (param)=>{
                let { value: k } = param;
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(k) ? "".concat(k, "%") : null;
            },
            handle: (k)=>[
                    A(),
                    n("--tw-backdrop-brightness", "brightness(".concat(k, ")")),
                    n("-webkit-backdrop-filter", c),
                    n("backdrop-filter", c)
                ]
        }), i("brightness", ()=>[
                {
                    values: [
                        "0",
                        "50",
                        "75",
                        "90",
                        "95",
                        "100",
                        "105",
                        "110",
                        "125",
                        "150",
                        "200"
                    ],
                    valueThemeKeys: [
                        "--brightness"
                    ]
                }
            ]), i("backdrop-brightness", ()=>[
                {
                    values: [
                        "0",
                        "50",
                        "75",
                        "90",
                        "95",
                        "100",
                        "105",
                        "110",
                        "125",
                        "150",
                        "200"
                    ],
                    valueThemeKeys: [
                        "--backdrop-brightness",
                        "--brightness"
                    ]
                }
            ]), o("contrast", {
            themeKeys: [
                "--contrast"
            ],
            handleBareValue: (param)=>{
                let { value: k } = param;
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(k) ? "".concat(k, "%") : null;
            },
            handle: (k)=>[
                    h(),
                    n("--tw-contrast", "contrast(".concat(k, ")")),
                    n("filter", a)
                ]
        }), o("backdrop-contrast", {
            themeKeys: [
                "--backdrop-contrast",
                "--contrast"
            ],
            handleBareValue: (param)=>{
                let { value: k } = param;
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(k) ? "".concat(k, "%") : null;
            },
            handle: (k)=>[
                    A(),
                    n("--tw-backdrop-contrast", "contrast(".concat(k, ")")),
                    n("-webkit-backdrop-filter", c),
                    n("backdrop-filter", c)
                ]
        }), i("contrast", ()=>[
                {
                    values: [
                        "0",
                        "50",
                        "75",
                        "100",
                        "125",
                        "150",
                        "200"
                    ],
                    valueThemeKeys: [
                        "--contrast"
                    ]
                }
            ]), i("backdrop-contrast", ()=>[
                {
                    values: [
                        "0",
                        "50",
                        "75",
                        "100",
                        "125",
                        "150",
                        "200"
                    ],
                    valueThemeKeys: [
                        "--backdrop-contrast",
                        "--contrast"
                    ]
                }
            ]), o("grayscale", {
            themeKeys: [
                "--grayscale"
            ],
            handleBareValue: (param)=>{
                let { value: k } = param;
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(k) ? "".concat(k, "%") : null;
            },
            defaultValue: "100%",
            handle: (k)=>[
                    h(),
                    n("--tw-grayscale", "grayscale(".concat(k, ")")),
                    n("filter", a)
                ]
        }), o("backdrop-grayscale", {
            themeKeys: [
                "--backdrop-grayscale",
                "--grayscale"
            ],
            handleBareValue: (param)=>{
                let { value: k } = param;
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(k) ? "".concat(k, "%") : null;
            },
            defaultValue: "100%",
            handle: (k)=>[
                    A(),
                    n("--tw-backdrop-grayscale", "grayscale(".concat(k, ")")),
                    n("-webkit-backdrop-filter", c),
                    n("backdrop-filter", c)
                ]
        }), i("grayscale", ()=>[
                {
                    values: [
                        "0",
                        "25",
                        "50",
                        "75",
                        "100"
                    ],
                    valueThemeKeys: [
                        "--grayscale"
                    ],
                    hasDefaultValue: !0
                }
            ]), i("backdrop-grayscale", ()=>[
                {
                    values: [
                        "0",
                        "25",
                        "50",
                        "75",
                        "100"
                    ],
                    valueThemeKeys: [
                        "--backdrop-grayscale",
                        "--grayscale"
                    ],
                    hasDefaultValue: !0
                }
            ]), o("hue-rotate", {
            supportsNegative: !0,
            themeKeys: [
                "--hue-rotate"
            ],
            handleBareValue: (param)=>{
                let { value: k } = param;
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(k) ? "".concat(k, "deg") : null;
            },
            handle: (k)=>[
                    h(),
                    n("--tw-hue-rotate", "hue-rotate(".concat(k, ")")),
                    n("filter", a)
                ]
        }), o("backdrop-hue-rotate", {
            supportsNegative: !0,
            themeKeys: [
                "--backdrop-hue-rotate",
                "--hue-rotate"
            ],
            handleBareValue: (param)=>{
                let { value: k } = param;
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(k) ? "".concat(k, "deg") : null;
            },
            handle: (k)=>[
                    A(),
                    n("--tw-backdrop-hue-rotate", "hue-rotate(".concat(k, ")")),
                    n("-webkit-backdrop-filter", c),
                    n("backdrop-filter", c)
                ]
        }), i("hue-rotate", ()=>[
                {
                    values: [
                        "0",
                        "15",
                        "30",
                        "60",
                        "90",
                        "180"
                    ],
                    valueThemeKeys: [
                        "--hue-rotate"
                    ]
                }
            ]), i("backdrop-hue-rotate", ()=>[
                {
                    values: [
                        "0",
                        "15",
                        "30",
                        "60",
                        "90",
                        "180"
                    ],
                    valueThemeKeys: [
                        "--backdrop-hue-rotate",
                        "--hue-rotate"
                    ]
                }
            ]), o("invert", {
            themeKeys: [
                "--invert"
            ],
            handleBareValue: (param)=>{
                let { value: k } = param;
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(k) ? "".concat(k, "%") : null;
            },
            defaultValue: "100%",
            handle: (k)=>[
                    h(),
                    n("--tw-invert", "invert(".concat(k, ")")),
                    n("filter", a)
                ]
        }), o("backdrop-invert", {
            themeKeys: [
                "--backdrop-invert",
                "--invert"
            ],
            handleBareValue: (param)=>{
                let { value: k } = param;
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(k) ? "".concat(k, "%") : null;
            },
            defaultValue: "100%",
            handle: (k)=>[
                    A(),
                    n("--tw-backdrop-invert", "invert(".concat(k, ")")),
                    n("-webkit-backdrop-filter", c),
                    n("backdrop-filter", c)
                ]
        }), i("invert", ()=>[
                {
                    values: [
                        "0",
                        "25",
                        "50",
                        "75",
                        "100"
                    ],
                    valueThemeKeys: [
                        "--invert"
                    ],
                    hasDefaultValue: !0
                }
            ]), i("backdrop-invert", ()=>[
                {
                    values: [
                        "0",
                        "25",
                        "50",
                        "75",
                        "100"
                    ],
                    valueThemeKeys: [
                        "--backdrop-invert",
                        "--invert"
                    ],
                    hasDefaultValue: !0
                }
            ]), o("saturate", {
            themeKeys: [
                "--saturate"
            ],
            handleBareValue: (param)=>{
                let { value: k } = param;
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(k) ? "".concat(k, "%") : null;
            },
            handle: (k)=>[
                    h(),
                    n("--tw-saturate", "saturate(".concat(k, ")")),
                    n("filter", a)
                ]
        }), o("backdrop-saturate", {
            themeKeys: [
                "--backdrop-saturate",
                "--saturate"
            ],
            handleBareValue: (param)=>{
                let { value: k } = param;
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(k) ? "".concat(k, "%") : null;
            },
            handle: (k)=>[
                    A(),
                    n("--tw-backdrop-saturate", "saturate(".concat(k, ")")),
                    n("-webkit-backdrop-filter", c),
                    n("backdrop-filter", c)
                ]
        }), i("saturate", ()=>[
                {
                    values: [
                        "0",
                        "50",
                        "100",
                        "150",
                        "200"
                    ],
                    valueThemeKeys: [
                        "--saturate"
                    ]
                }
            ]), i("backdrop-saturate", ()=>[
                {
                    values: [
                        "0",
                        "50",
                        "100",
                        "150",
                        "200"
                    ],
                    valueThemeKeys: [
                        "--backdrop-saturate",
                        "--saturate"
                    ]
                }
            ]), o("sepia", {
            themeKeys: [
                "--sepia"
            ],
            handleBareValue: (param)=>{
                let { value: k } = param;
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(k) ? "".concat(k, "%") : null;
            },
            defaultValue: "100%",
            handle: (k)=>[
                    h(),
                    n("--tw-sepia", "sepia(".concat(k, ")")),
                    n("filter", a)
                ]
        }), o("backdrop-sepia", {
            themeKeys: [
                "--backdrop-sepia",
                "--sepia"
            ],
            handleBareValue: (param)=>{
                let { value: k } = param;
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(k) ? "".concat(k, "%") : null;
            },
            defaultValue: "100%",
            handle: (k)=>[
                    A(),
                    n("--tw-backdrop-sepia", "sepia(".concat(k, ")")),
                    n("-webkit-backdrop-filter", c),
                    n("backdrop-filter", c)
                ]
        }), i("sepia", ()=>[
                {
                    values: [
                        "0",
                        "50",
                        "100"
                    ],
                    valueThemeKeys: [
                        "--sepia"
                    ],
                    hasDefaultValue: !0
                }
            ]), i("backdrop-sepia", ()=>[
                {
                    values: [
                        "0",
                        "50",
                        "100"
                    ],
                    valueThemeKeys: [
                        "--backdrop-sepia",
                        "--sepia"
                    ],
                    hasDefaultValue: !0
                }
            ]), e("drop-shadow-none", [
            h,
            [
                "--tw-drop-shadow",
                " "
            ],
            [
                "filter",
                a
            ]
        ]), t.functional("drop-shadow", (k)=>{
            let $;
            if (k.modifier && (k.modifier.kind === "arbitrary" ? $ = k.modifier.value : (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(k.modifier.value) && ($ = "".concat(k.modifier.value, "%"))), !k.value) {
                let P = r.get([
                    "--drop-shadow"
                ]), N = r.resolve(null, [
                    "--drop-shadow"
                ]);
                return P === null || N === null ? void 0 : [
                    h(),
                    n("--tw-drop-shadow-alpha", $),
                    ...Ye("--tw-drop-shadow-size", P, $, (T)=>"var(--tw-drop-shadow-color, ".concat(T, ")")),
                    n("--tw-drop-shadow", (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["b"])(N, ",").map((T)=>"drop-shadow(".concat(T, ")")).join(" ")),
                    n("filter", a)
                ];
            }
            if (k.value.kind === "arbitrary") {
                let P = k.value.value;
                var _k_value_dataType;
                switch((_k_value_dataType = k.value.dataType) !== null && _k_value_dataType !== void 0 ? _k_value_dataType : (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(P, [
                    "color"
                ])){
                    case "color":
                        return P = X(P, k.modifier, r), P === null ? void 0 : [
                            h(),
                            n("--tw-drop-shadow-color", Q(P, "var(--tw-drop-shadow-alpha)")),
                            n("--tw-drop-shadow", "var(--tw-drop-shadow-size)")
                        ];
                    default:
                        return k.modifier && !$ ? void 0 : [
                            h(),
                            n("--tw-drop-shadow-alpha", $),
                            ...Ye("--tw-drop-shadow-size", P, $, (T)=>"var(--tw-drop-shadow-color, ".concat(T, ")")),
                            n("--tw-drop-shadow", "var(--tw-drop-shadow-size)"),
                            n("filter", a)
                        ];
                }
            }
            {
                let P = r.get([
                    "--drop-shadow-".concat(k.value.value)
                ]), N = r.resolve(k.value.value, [
                    "--drop-shadow"
                ]);
                if (P && N) return k.modifier && !$ ? void 0 : $ ? [
                    h(),
                    n("--tw-drop-shadow-alpha", $),
                    ...Ye("--tw-drop-shadow-size", P, $, (T)=>"var(--tw-drop-shadow-color, ".concat(T, ")")),
                    n("--tw-drop-shadow", "var(--tw-drop-shadow-size)"),
                    n("filter", a)
                ] : [
                    h(),
                    n("--tw-drop-shadow-alpha", $),
                    ...Ye("--tw-drop-shadow-size", P, $, (T)=>"var(--tw-drop-shadow-color, ".concat(T, ")")),
                    n("--tw-drop-shadow", (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["b"])(N, ",").map((T)=>"drop-shadow(".concat(T, ")")).join(" ")),
                    n("filter", a)
                ];
            }
            {
                let P = te(k, r, [
                    "--drop-shadow-color",
                    "--color"
                ]);
                if (P) return P === "inherit" ? [
                    h(),
                    n("--tw-drop-shadow-color", "inherit"),
                    n("--tw-drop-shadow", "var(--tw-drop-shadow-size)")
                ] : [
                    h(),
                    n("--tw-drop-shadow-color", Q(P, "var(--tw-drop-shadow-alpha)")),
                    n("--tw-drop-shadow", "var(--tw-drop-shadow-size)")
                ];
            }
        }), i("drop-shadow", ()=>[
                {
                    values: [
                        "current",
                        "inherit",
                        "transparent"
                    ],
                    valueThemeKeys: [
                        "--drop-shadow-color",
                        "--color"
                    ],
                    modifiers: Array.from({
                        length: 21
                    }, (k, $)=>"".concat($ * 5))
                },
                {
                    valueThemeKeys: [
                        "--drop-shadow"
                    ]
                }
            ]), o("backdrop-opacity", {
            themeKeys: [
                "--backdrop-opacity",
                "--opacity"
            ],
            handleBareValue: (param)=>{
                let { value: k } = param;
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["g"])(k) ? "".concat(k, "%") : null;
            },
            handle: (k)=>[
                    A(),
                    n("--tw-backdrop-opacity", "opacity(".concat(k, ")")),
                    n("-webkit-backdrop-filter", c),
                    n("backdrop-filter", c)
                ]
        }), i("backdrop-opacity", ()=>[
                {
                    values: Array.from({
                        length: 21
                    }, (k, $)=>"".concat($ * 5)),
                    valueThemeKeys: [
                        "--backdrop-opacity",
                        "--opacity"
                    ]
                }
            ]);
    }
    {
        var _r_resolve, _r_resolve1;
        let a = "var(--tw-ease, ".concat((_r_resolve = r.resolve(null, [
            "--default-transition-timing-function"
        ])) !== null && _r_resolve !== void 0 ? _r_resolve : "ease", ")"), c = "var(--tw-duration, ".concat((_r_resolve1 = r.resolve(null, [
            "--default-transition-duration"
        ])) !== null && _r_resolve1 !== void 0 ? _r_resolve1 : "0s", ")");
        o("transition", {
            defaultValue: "color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, content-visibility, overlay, pointer-events",
            themeKeys: [
                "--transition-property"
            ],
            handle: (h)=>[
                    n("transition-property", h),
                    n("transition-timing-function", a),
                    n("transition-duration", c)
                ],
            staticValues: {
                none: [
                    n("transition-property", "none")
                ],
                all: [
                    n("transition-property", "all"),
                    n("transition-timing-function", a),
                    n("transition-duration", c)
                ],
                colors: [
                    n("transition-property", "color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to"),
                    n("transition-timing-function", a),
                    n("transition-duration", c)
                ],
                opacity: [
                    n("transition-property", "opacity"),
                    n("transition-timing-function", a),
                    n("transition-duration", c)
                ],
                shadow: [
                    n("transition-property", "box-shadow"),
                    n("transition-timing-function", a),
                    n("transition-duration", c)
                ],
                transform: [
                    n("transition-property", "transform, translate, scale, rotate"),
                    n("transition-timing-function", a),
                    n("transition-duration", c)
                ]
            }
        }), e("transition-discrete", [
            [
                "transition-behavior",
                "allow-discrete"
            ]
        ]), e("transition-normal", [
            [
                "transition-behavior",
                "normal"
            ]
        ]), o("delay", {
            handleBareValue: (param)=>{
                let { value: h } = param;
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(h) ? "".concat(h, "ms") : null;
            },
            themeKeys: [
                "--transition-delay"
            ],
            handle: (h)=>[
                    n("transition-delay", h)
                ]
        });
        {
            let h = ()=>F([
                    V("--tw-duration")
                ]);
            e("duration-initial", [
                h,
                [
                    "--tw-duration",
                    "initial"
                ]
            ]), t.functional("duration", (A)=>{
                if (A.modifier || !A.value) return;
                let k = null;
                var _A_value_fraction;
                if (A.value.kind === "arbitrary" ? k = A.value.value : (k = r.resolve((_A_value_fraction = A.value.fraction) !== null && _A_value_fraction !== void 0 ? _A_value_fraction : A.value.value, [
                    "--transition-duration"
                ]), k === null && (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(A.value.value) && (k = "".concat(A.value.value, "ms"))), k !== null) return [
                    h(),
                    n("--tw-duration", k),
                    n("transition-duration", k)
                ];
            });
        }
        i("delay", ()=>[
                {
                    values: [
                        "75",
                        "100",
                        "150",
                        "200",
                        "300",
                        "500",
                        "700",
                        "1000"
                    ],
                    valueThemeKeys: [
                        "--transition-delay"
                    ]
                }
            ]), i("duration", ()=>[
                {
                    values: [
                        "75",
                        "100",
                        "150",
                        "200",
                        "300",
                        "500",
                        "700",
                        "1000"
                    ],
                    valueThemeKeys: [
                        "--transition-duration"
                    ]
                }
            ]);
    }
    {
        let a = ()=>F([
                V("--tw-ease")
            ]);
        o("ease", {
            themeKeys: [
                "--ease"
            ],
            handle: (c)=>[
                    a(),
                    n("--tw-ease", c),
                    n("transition-timing-function", c)
                ],
            staticValues: {
                initial: [
                    a(),
                    n("--tw-ease", "initial")
                ],
                linear: [
                    a(),
                    n("--tw-ease", "linear"),
                    n("transition-timing-function", "linear")
                ]
            }
        });
    }
    e("will-change-auto", [
        [
            "will-change",
            "auto"
        ]
    ]), e("will-change-scroll", [
        [
            "will-change",
            "scroll-position"
        ]
    ]), e("will-change-contents", [
        [
            "will-change",
            "contents"
        ]
    ]), e("will-change-transform", [
        [
            "will-change",
            "transform"
        ]
    ]), o("will-change", {
        themeKeys: [],
        handle: (a)=>[
                n("will-change", a)
            ]
    }), e("content-none", [
        [
            "--tw-content",
            "none"
        ],
        [
            "content",
            "none"
        ]
    ]), o("content", {
        themeKeys: [],
        handle: (a)=>[
                F([
                    V("--tw-content", '""')
                ]),
                n("--tw-content", a),
                n("content", "var(--tw-content)")
            ]
    });
    {
        let a = "var(--tw-contain-size,) var(--tw-contain-layout,) var(--tw-contain-paint,) var(--tw-contain-style,)", c = ()=>F([
                V("--tw-contain-size"),
                V("--tw-contain-layout"),
                V("--tw-contain-paint"),
                V("--tw-contain-style")
            ]);
        e("contain-none", [
            [
                "contain",
                "none"
            ]
        ]), e("contain-content", [
            [
                "contain",
                "content"
            ]
        ]), e("contain-strict", [
            [
                "contain",
                "strict"
            ]
        ]), e("contain-size", [
            c,
            [
                "--tw-contain-size",
                "size"
            ],
            [
                "contain",
                a
            ]
        ]), e("contain-inline-size", [
            c,
            [
                "--tw-contain-size",
                "inline-size"
            ],
            [
                "contain",
                a
            ]
        ]), e("contain-layout", [
            c,
            [
                "--tw-contain-layout",
                "layout"
            ],
            [
                "contain",
                a
            ]
        ]), e("contain-paint", [
            c,
            [
                "--tw-contain-paint",
                "paint"
            ],
            [
                "contain",
                a
            ]
        ]), e("contain-style", [
            c,
            [
                "--tw-contain-style",
                "style"
            ],
            [
                "contain",
                a
            ]
        ]), o("contain", {
            themeKeys: [],
            handle: (h)=>[
                    n("contain", h)
                ]
        });
    }
    e("forced-color-adjust-none", [
        [
            "forced-color-adjust",
            "none"
        ]
    ]), e("forced-color-adjust-auto", [
        [
            "forced-color-adjust",
            "auto"
        ]
    ]), l("leading", [
        "--leading",
        "--spacing"
    ], (a)=>[
            F([
                V("--tw-leading")
            ]),
            n("--tw-leading", a),
            n("line-height", a)
        ], {
        staticValues: {
            none: [
                F([
                    V("--tw-leading")
                ]),
                n("--tw-leading", "1"),
                n("line-height", "1")
            ]
        }
    }), o("tracking", {
        supportsNegative: !0,
        themeKeys: [
            "--tracking"
        ],
        handle: (a)=>[
                F([
                    V("--tw-tracking")
                ]),
                n("--tw-tracking", a),
                n("letter-spacing", a)
            ]
    }), e("antialiased", [
        [
            "-webkit-font-smoothing",
            "antialiased"
        ],
        [
            "-moz-osx-font-smoothing",
            "grayscale"
        ]
    ]), e("subpixel-antialiased", [
        [
            "-webkit-font-smoothing",
            "auto"
        ],
        [
            "-moz-osx-font-smoothing",
            "auto"
        ]
    ]);
    {
        let a = "var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,)", c = ()=>F([
                V("--tw-ordinal"),
                V("--tw-slashed-zero"),
                V("--tw-numeric-figure"),
                V("--tw-numeric-spacing"),
                V("--tw-numeric-fraction")
            ]);
        e("normal-nums", [
            [
                "font-variant-numeric",
                "normal"
            ]
        ]), e("ordinal", [
            c,
            [
                "--tw-ordinal",
                "ordinal"
            ],
            [
                "font-variant-numeric",
                a
            ]
        ]), e("slashed-zero", [
            c,
            [
                "--tw-slashed-zero",
                "slashed-zero"
            ],
            [
                "font-variant-numeric",
                a
            ]
        ]), e("lining-nums", [
            c,
            [
                "--tw-numeric-figure",
                "lining-nums"
            ],
            [
                "font-variant-numeric",
                a
            ]
        ]), e("oldstyle-nums", [
            c,
            [
                "--tw-numeric-figure",
                "oldstyle-nums"
            ],
            [
                "font-variant-numeric",
                a
            ]
        ]), e("proportional-nums", [
            c,
            [
                "--tw-numeric-spacing",
                "proportional-nums"
            ],
            [
                "font-variant-numeric",
                a
            ]
        ]), e("tabular-nums", [
            c,
            [
                "--tw-numeric-spacing",
                "tabular-nums"
            ],
            [
                "font-variant-numeric",
                a
            ]
        ]), e("diagonal-fractions", [
            c,
            [
                "--tw-numeric-fraction",
                "diagonal-fractions"
            ],
            [
                "font-variant-numeric",
                a
            ]
        ]), e("stacked-fractions", [
            c,
            [
                "--tw-numeric-fraction",
                "stacked-fractions"
            ],
            [
                "font-variant-numeric",
                a
            ]
        ]);
    }
    {
        let a = ()=>F([
                V("--tw-outline-style", "solid")
            ]);
        t.static("outline-hidden", ()=>[
                n("--tw-outline-style", "none"),
                n("outline-style", "none"),
                z("@media", "(forced-colors: active)", [
                    n("outline", "2px solid transparent"),
                    n("outline-offset", "2px")
                ])
            ]), e("outline-none", [
            [
                "--tw-outline-style",
                "none"
            ],
            [
                "outline-style",
                "none"
            ]
        ]), e("outline-solid", [
            [
                "--tw-outline-style",
                "solid"
            ],
            [
                "outline-style",
                "solid"
            ]
        ]), e("outline-dashed", [
            [
                "--tw-outline-style",
                "dashed"
            ],
            [
                "outline-style",
                "dashed"
            ]
        ]), e("outline-dotted", [
            [
                "--tw-outline-style",
                "dotted"
            ],
            [
                "outline-style",
                "dotted"
            ]
        ]), e("outline-double", [
            [
                "--tw-outline-style",
                "double"
            ],
            [
                "outline-style",
                "double"
            ]
        ]), t.functional("outline", (c)=>{
            if (c.value === null) {
                if (c.modifier) return;
                var _r_get;
                let h = (_r_get = r.get([
                    "--default-outline-width"
                ])) !== null && _r_get !== void 0 ? _r_get : "1px";
                return [
                    a(),
                    n("outline-style", "var(--tw-outline-style)"),
                    n("outline-width", h)
                ];
            }
            if (c.value.kind === "arbitrary") {
                let h = c.value.value;
                var _c_value_dataType;
                switch((_c_value_dataType = c.value.dataType) !== null && _c_value_dataType !== void 0 ? _c_value_dataType : (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(h, [
                    "color",
                    "length",
                    "number",
                    "percentage"
                ])){
                    case "length":
                    case "number":
                    case "percentage":
                        return c.modifier ? void 0 : [
                            a(),
                            n("outline-style", "var(--tw-outline-style)"),
                            n("outline-width", h)
                        ];
                    default:
                        return h = X(h, c.modifier, r), h === null ? void 0 : [
                            n("outline-color", h)
                        ];
                }
            }
            {
                let h = te(c, r, [
                    "--outline-color",
                    "--color"
                ]);
                if (h) return [
                    n("outline-color", h)
                ];
            }
            {
                if (c.modifier) return;
                let h = r.resolve(c.value.value, [
                    "--outline-width"
                ]);
                if (h) return [
                    a(),
                    n("outline-style", "var(--tw-outline-style)"),
                    n("outline-width", h)
                ];
                if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(c.value.value)) return [
                    a(),
                    n("outline-style", "var(--tw-outline-style)"),
                    n("outline-width", "".concat(c.value.value, "px"))
                ];
            }
        }), i("outline", ()=>[
                {
                    values: [
                        "current",
                        "inherit",
                        "transparent"
                    ],
                    valueThemeKeys: [
                        "--outline-color",
                        "--color"
                    ],
                    modifiers: Array.from({
                        length: 21
                    }, (c, h)=>"".concat(h * 5)),
                    hasDefaultValue: !0
                },
                {
                    values: [
                        "0",
                        "1",
                        "2",
                        "4",
                        "8"
                    ],
                    valueThemeKeys: [
                        "--outline-width"
                    ]
                }
            ]), o("outline-offset", {
            supportsNegative: !0,
            themeKeys: [
                "--outline-offset"
            ],
            handleBareValue: (param)=>{
                let { value: c } = param;
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(c) ? "".concat(c, "px") : null;
            },
            handle: (c)=>[
                    n("outline-offset", c)
                ]
        }), i("outline-offset", ()=>[
                {
                    supportsNegative: !0,
                    values: [
                        "0",
                        "1",
                        "2",
                        "4",
                        "8"
                    ],
                    valueThemeKeys: [
                        "--outline-offset"
                    ]
                }
            ]);
    }
    o("opacity", {
        themeKeys: [
            "--opacity"
        ],
        handleBareValue: (param)=>{
            let { value: a } = param;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["g"])(a) ? "".concat(a, "%") : null;
        },
        handle: (a)=>[
                n("opacity", a)
            ]
    }), i("opacity", ()=>[
            {
                values: Array.from({
                    length: 21
                }, (a, c)=>"".concat(c * 5)),
                valueThemeKeys: [
                    "--opacity"
                ]
            }
        ]), o("underline-offset", {
        supportsNegative: !0,
        themeKeys: [
            "--text-underline-offset"
        ],
        handleBareValue: (param)=>{
            let { value: a } = param;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(a) ? "".concat(a, "px") : null;
        },
        handle: (a)=>[
                n("text-underline-offset", a)
            ],
        staticValues: {
            auto: [
                n("text-underline-offset", "auto")
            ]
        }
    }), i("underline-offset", ()=>[
            {
                supportsNegative: !0,
                values: [
                    "0",
                    "1",
                    "2",
                    "4",
                    "8"
                ],
                valueThemeKeys: [
                    "--text-underline-offset"
                ]
            }
        ]), t.functional("text", (a)=>{
        if (a.value) {
            if (a.value.kind === "arbitrary") {
                let c = a.value.value;
                var _a_value_dataType;
                switch((_a_value_dataType = a.value.dataType) !== null && _a_value_dataType !== void 0 ? _a_value_dataType : (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(c, [
                    "color",
                    "length",
                    "percentage",
                    "absolute-size",
                    "relative-size"
                ])){
                    case "size":
                    case "length":
                    case "percentage":
                    case "absolute-size":
                    case "relative-size":
                        {
                            if (a.modifier) {
                                let A = a.modifier.kind === "arbitrary" ? a.modifier.value : r.resolve(a.modifier.value, [
                                    "--leading"
                                ]);
                                if (!A && (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["f"])(a.modifier.value)) {
                                    let k = r.resolve(null, [
                                        "--spacing"
                                    ]);
                                    if (!k) return null;
                                    A = "calc(".concat(k, " * ").concat(a.modifier.value, ")");
                                }
                                return !A && a.modifier.value === "none" && (A = "1"), A ? [
                                    n("font-size", c),
                                    n("line-height", A)
                                ] : null;
                            }
                            return [
                                n("font-size", c)
                            ];
                        }
                    default:
                        return c = X(c, a.modifier, r), c === null ? void 0 : [
                            n("color", c)
                        ];
                }
            }
            {
                let c = te(a, r, [
                    "--text-color",
                    "--color"
                ]);
                if (c) return [
                    n("color", c)
                ];
            }
            {
                let c = r.resolveWith(a.value.value, [
                    "--text"
                ], [
                    "--line-height",
                    "--letter-spacing",
                    "--font-weight"
                ]);
                if (c) {
                    let [h, A = {}] = Array.isArray(c) ? c : [
                        c
                    ];
                    if (a.modifier) {
                        let k = a.modifier.kind === "arbitrary" ? a.modifier.value : r.resolve(a.modifier.value, [
                            "--leading"
                        ]);
                        if (!k && (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["f"])(a.modifier.value)) {
                            let P = r.resolve(null, [
                                "--spacing"
                            ]);
                            if (!P) return null;
                            k = "calc(".concat(P, " * ").concat(a.modifier.value, ")");
                        }
                        if (!k && a.modifier.value === "none" && (k = "1"), !k) return null;
                        let $ = [
                            n("font-size", h)
                        ];
                        return k && $.push(n("line-height", k)), $;
                    }
                    return typeof A == "string" ? [
                        n("font-size", h),
                        n("line-height", A)
                    ] : [
                        n("font-size", h),
                        n("line-height", A["--line-height"] ? "var(--tw-leading, ".concat(A["--line-height"], ")") : void 0),
                        n("letter-spacing", A["--letter-spacing"] ? "var(--tw-tracking, ".concat(A["--letter-spacing"], ")") : void 0),
                        n("font-weight", A["--font-weight"] ? "var(--tw-font-weight, ".concat(A["--font-weight"], ")") : void 0)
                    ];
                }
            }
        }
    }), i("text", ()=>[
            {
                values: [
                    "current",
                    "inherit",
                    "transparent"
                ],
                valueThemeKeys: [
                    "--text-color",
                    "--color"
                ],
                modifiers: Array.from({
                    length: 21
                }, (a, c)=>"".concat(c * 5))
            },
            {
                values: [],
                valueThemeKeys: [
                    "--text"
                ],
                modifiers: [],
                modifierThemeKeys: [
                    "--leading"
                ]
            }
        ]);
    let D = ()=>F([
            V("--tw-text-shadow-color"),
            V("--tw-text-shadow-alpha", "100%", "<percentage>")
        ]);
    e("text-shadow-initial", [
        D,
        [
            "--tw-text-shadow-color",
            "initial"
        ]
    ]), t.functional("text-shadow", (a)=>{
        let c;
        if (a.modifier && (a.modifier.kind === "arbitrary" ? c = a.modifier.value : (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(a.modifier.value) && (c = "".concat(a.modifier.value, "%"))), !a.value) {
            let h = r.get([
                "--text-shadow"
            ]);
            return h === null ? void 0 : [
                D(),
                n("--tw-text-shadow-alpha", c),
                ...ue("text-shadow", h, c, (A)=>"var(--tw-text-shadow-color, ".concat(A, ")"))
            ];
        }
        if (a.value.kind === "arbitrary") {
            let h = a.value.value;
            var _a_value_dataType;
            switch((_a_value_dataType = a.value.dataType) !== null && _a_value_dataType !== void 0 ? _a_value_dataType : (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(h, [
                "color"
            ])){
                case "color":
                    return h = X(h, a.modifier, r), h === null ? void 0 : [
                        D(),
                        n("--tw-text-shadow-color", Q(h, "var(--tw-text-shadow-alpha)"))
                    ];
                default:
                    return [
                        D(),
                        n("--tw-text-shadow-alpha", c),
                        ...ue("text-shadow", h, c, (k)=>"var(--tw-text-shadow-color, ".concat(k, ")"))
                    ];
            }
        }
        switch(a.value.value){
            case "none":
                return a.modifier ? void 0 : [
                    D(),
                    n("text-shadow", "none")
                ];
            case "inherit":
                return a.modifier ? void 0 : [
                    D(),
                    n("--tw-text-shadow-color", "inherit")
                ];
        }
        {
            let h = r.get([
                "--text-shadow-".concat(a.value.value)
            ]);
            if (h) return [
                D(),
                n("--tw-text-shadow-alpha", c),
                ...ue("text-shadow", h, c, (A)=>"var(--tw-text-shadow-color, ".concat(A, ")"))
            ];
        }
        {
            let h = te(a, r, [
                "--text-shadow-color",
                "--color"
            ]);
            if (h) return [
                D(),
                n("--tw-text-shadow-color", Q(h, "var(--tw-text-shadow-alpha)"))
            ];
        }
    }), i("text-shadow", ()=>[
            {
                values: [
                    "current",
                    "inherit",
                    "transparent"
                ],
                valueThemeKeys: [
                    "--text-shadow-color",
                    "--color"
                ],
                modifiers: Array.from({
                    length: 21
                }, (a, c)=>"".concat(c * 5))
            },
            {
                values: [
                    "none"
                ]
            },
            {
                valueThemeKeys: [
                    "--text-shadow"
                ],
                modifiers: Array.from({
                    length: 21
                }, (a, c)=>"".concat(c * 5)),
                hasDefaultValue: r.get([
                    "--text-shadow"
                ]) !== null
            }
        ]);
    {
        let k = function(N) {
            return "var(--tw-ring-inset,) 0 0 0 calc(".concat(N, " + var(--tw-ring-offset-width)) var(--tw-ring-color, ").concat(A, ")");
        }, $ = function(N) {
            return "inset 0 0 0 ".concat(N, " var(--tw-inset-ring-color, currentcolor)");
        };
        var M = k, re = $;
        let a = [
            "var(--tw-inset-shadow)",
            "var(--tw-inset-ring-shadow)",
            "var(--tw-ring-offset-shadow)",
            "var(--tw-ring-shadow)",
            "var(--tw-shadow)"
        ].join(", "), c = "0 0 #0000", h = ()=>F([
                V("--tw-shadow", c),
                V("--tw-shadow-color"),
                V("--tw-shadow-alpha", "100%", "<percentage>"),
                V("--tw-inset-shadow", c),
                V("--tw-inset-shadow-color"),
                V("--tw-inset-shadow-alpha", "100%", "<percentage>"),
                V("--tw-ring-color"),
                V("--tw-ring-shadow", c),
                V("--tw-inset-ring-color"),
                V("--tw-inset-ring-shadow", c),
                V("--tw-ring-inset"),
                V("--tw-ring-offset-width", "0px", "<length>"),
                V("--tw-ring-offset-color", "#fff"),
                V("--tw-ring-offset-shadow", c)
            ]);
        e("shadow-initial", [
            h,
            [
                "--tw-shadow-color",
                "initial"
            ]
        ]), t.functional("shadow", (N)=>{
            let T;
            if (N.modifier && (N.modifier.kind === "arbitrary" ? T = N.modifier.value : (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(N.modifier.value) && (T = "".concat(N.modifier.value, "%"))), !N.value) {
                let I = r.get([
                    "--shadow"
                ]);
                return I === null ? void 0 : [
                    h(),
                    n("--tw-shadow-alpha", T),
                    ...ue("--tw-shadow", I, T, (oe)=>"var(--tw-shadow-color, ".concat(oe, ")")),
                    n("box-shadow", a)
                ];
            }
            if (N.value.kind === "arbitrary") {
                let I = N.value.value;
                var _N_value_dataType;
                switch((_N_value_dataType = N.value.dataType) !== null && _N_value_dataType !== void 0 ? _N_value_dataType : (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(I, [
                    "color"
                ])){
                    case "color":
                        return I = X(I, N.modifier, r), I === null ? void 0 : [
                            h(),
                            n("--tw-shadow-color", Q(I, "var(--tw-shadow-alpha)"))
                        ];
                    default:
                        return [
                            h(),
                            n("--tw-shadow-alpha", T),
                            ...ue("--tw-shadow", I, T, (ot)=>"var(--tw-shadow-color, ".concat(ot, ")")),
                            n("box-shadow", a)
                        ];
                }
            }
            switch(N.value.value){
                case "none":
                    return N.modifier ? void 0 : [
                        h(),
                        n("--tw-shadow", c),
                        n("box-shadow", a)
                    ];
                case "inherit":
                    return N.modifier ? void 0 : [
                        h(),
                        n("--tw-shadow-color", "inherit")
                    ];
            }
            {
                let I = r.get([
                    "--shadow-".concat(N.value.value)
                ]);
                if (I) return [
                    h(),
                    n("--tw-shadow-alpha", T),
                    ...ue("--tw-shadow", I, T, (oe)=>"var(--tw-shadow-color, ".concat(oe, ")")),
                    n("box-shadow", a)
                ];
            }
            {
                let I = te(N, r, [
                    "--box-shadow-color",
                    "--color"
                ]);
                if (I) return [
                    h(),
                    n("--tw-shadow-color", Q(I, "var(--tw-shadow-alpha)"))
                ];
            }
        }), i("shadow", ()=>[
                {
                    values: [
                        "current",
                        "inherit",
                        "transparent"
                    ],
                    valueThemeKeys: [
                        "--box-shadow-color",
                        "--color"
                    ],
                    modifiers: Array.from({
                        length: 21
                    }, (N, T)=>"".concat(T * 5))
                },
                {
                    values: [
                        "none"
                    ]
                },
                {
                    valueThemeKeys: [
                        "--shadow"
                    ],
                    modifiers: Array.from({
                        length: 21
                    }, (N, T)=>"".concat(T * 5)),
                    hasDefaultValue: r.get([
                        "--shadow"
                    ]) !== null
                }
            ]), e("inset-shadow-initial", [
            h,
            [
                "--tw-inset-shadow-color",
                "initial"
            ]
        ]), t.functional("inset-shadow", (N)=>{
            let T;
            if (N.modifier && (N.modifier.kind === "arbitrary" ? T = N.modifier.value : (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(N.modifier.value) && (T = "".concat(N.modifier.value, "%"))), !N.value) {
                let I = r.get([
                    "--inset-shadow"
                ]);
                return I === null ? void 0 : [
                    h(),
                    n("--tw-inset-shadow-alpha", T),
                    ...ue("--tw-inset-shadow", I, T, (oe)=>"var(--tw-inset-shadow-color, ".concat(oe, ")")),
                    n("box-shadow", a)
                ];
            }
            if (N.value.kind === "arbitrary") {
                let I = N.value.value;
                var _N_value_dataType;
                switch((_N_value_dataType = N.value.dataType) !== null && _N_value_dataType !== void 0 ? _N_value_dataType : (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(I, [
                    "color"
                ])){
                    case "color":
                        return I = X(I, N.modifier, r), I === null ? void 0 : [
                            h(),
                            n("--tw-inset-shadow-color", Q(I, "var(--tw-inset-shadow-alpha)"))
                        ];
                    default:
                        return [
                            h(),
                            n("--tw-inset-shadow-alpha", T),
                            ...ue("--tw-inset-shadow", I, T, (ot)=>"var(--tw-inset-shadow-color, ".concat(ot, ")"), "inset "),
                            n("box-shadow", a)
                        ];
                }
            }
            switch(N.value.value){
                case "none":
                    return N.modifier ? void 0 : [
                        h(),
                        n("--tw-inset-shadow", c),
                        n("box-shadow", a)
                    ];
                case "inherit":
                    return N.modifier ? void 0 : [
                        h(),
                        n("--tw-inset-shadow-color", "inherit")
                    ];
            }
            {
                let I = r.get([
                    "--inset-shadow-".concat(N.value.value)
                ]);
                if (I) return [
                    h(),
                    n("--tw-inset-shadow-alpha", T),
                    ...ue("--tw-inset-shadow", I, T, (oe)=>"var(--tw-inset-shadow-color, ".concat(oe, ")")),
                    n("box-shadow", a)
                ];
            }
            {
                let I = te(N, r, [
                    "--box-shadow-color",
                    "--color"
                ]);
                if (I) return [
                    h(),
                    n("--tw-inset-shadow-color", Q(I, "var(--tw-inset-shadow-alpha)"))
                ];
            }
        }), i("inset-shadow", ()=>[
                {
                    values: [
                        "current",
                        "inherit",
                        "transparent"
                    ],
                    valueThemeKeys: [
                        "--box-shadow-color",
                        "--color"
                    ],
                    modifiers: Array.from({
                        length: 21
                    }, (N, T)=>"".concat(T * 5))
                },
                {
                    values: [
                        "none"
                    ]
                },
                {
                    valueThemeKeys: [
                        "--inset-shadow"
                    ],
                    modifiers: Array.from({
                        length: 21
                    }, (N, T)=>"".concat(T * 5)),
                    hasDefaultValue: r.get([
                        "--inset-shadow"
                    ]) !== null
                }
            ]), e("ring-inset", [
            h,
            [
                "--tw-ring-inset",
                "inset"
            ]
        ]);
        var _r_get2;
        let A = (_r_get2 = r.get([
            "--default-ring-color"
        ])) !== null && _r_get2 !== void 0 ? _r_get2 : "currentcolor";
        t.functional("ring", (N)=>{
            if (!N.value) {
                if (N.modifier) return;
                var _r_get;
                let T = (_r_get = r.get([
                    "--default-ring-width"
                ])) !== null && _r_get !== void 0 ? _r_get : "1px";
                return [
                    h(),
                    n("--tw-ring-shadow", k(T)),
                    n("box-shadow", a)
                ];
            }
            if (N.value.kind === "arbitrary") {
                let T = N.value.value;
                var _N_value_dataType;
                switch((_N_value_dataType = N.value.dataType) !== null && _N_value_dataType !== void 0 ? _N_value_dataType : (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(T, [
                    "color",
                    "length"
                ])){
                    case "length":
                        return N.modifier ? void 0 : [
                            h(),
                            n("--tw-ring-shadow", k(T)),
                            n("box-shadow", a)
                        ];
                    default:
                        return T = X(T, N.modifier, r), T === null ? void 0 : [
                            n("--tw-ring-color", T)
                        ];
                }
            }
            {
                let T = te(N, r, [
                    "--ring-color",
                    "--color"
                ]);
                if (T) return [
                    n("--tw-ring-color", T)
                ];
            }
            {
                if (N.modifier) return;
                let T = r.resolve(N.value.value, [
                    "--ring-width"
                ]);
                if (T === null && (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(N.value.value) && (T = "".concat(N.value.value, "px")), T) return [
                    h(),
                    n("--tw-ring-shadow", k(T)),
                    n("box-shadow", a)
                ];
            }
        }), i("ring", ()=>[
                {
                    values: [
                        "current",
                        "inherit",
                        "transparent"
                    ],
                    valueThemeKeys: [
                        "--ring-color",
                        "--color"
                    ],
                    modifiers: Array.from({
                        length: 21
                    }, (N, T)=>"".concat(T * 5))
                },
                {
                    values: [
                        "0",
                        "1",
                        "2",
                        "4",
                        "8"
                    ],
                    valueThemeKeys: [
                        "--ring-width"
                    ],
                    hasDefaultValue: !0
                }
            ]), t.functional("inset-ring", (N)=>{
            if (!N.value) return N.modifier ? void 0 : [
                h(),
                n("--tw-inset-ring-shadow", $("1px")),
                n("box-shadow", a)
            ];
            if (N.value.kind === "arbitrary") {
                let T = N.value.value;
                var _N_value_dataType;
                switch((_N_value_dataType = N.value.dataType) !== null && _N_value_dataType !== void 0 ? _N_value_dataType : (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(T, [
                    "color",
                    "length"
                ])){
                    case "length":
                        return N.modifier ? void 0 : [
                            h(),
                            n("--tw-inset-ring-shadow", $(T)),
                            n("box-shadow", a)
                        ];
                    default:
                        return T = X(T, N.modifier, r), T === null ? void 0 : [
                            n("--tw-inset-ring-color", T)
                        ];
                }
            }
            {
                let T = te(N, r, [
                    "--ring-color",
                    "--color"
                ]);
                if (T) return [
                    n("--tw-inset-ring-color", T)
                ];
            }
            {
                if (N.modifier) return;
                let T = r.resolve(N.value.value, [
                    "--ring-width"
                ]);
                if (T === null && (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(N.value.value) && (T = "".concat(N.value.value, "px")), T) return [
                    h(),
                    n("--tw-inset-ring-shadow", $(T)),
                    n("box-shadow", a)
                ];
            }
        }), i("inset-ring", ()=>[
                {
                    values: [
                        "current",
                        "inherit",
                        "transparent"
                    ],
                    valueThemeKeys: [
                        "--ring-color",
                        "--color"
                    ],
                    modifiers: Array.from({
                        length: 21
                    }, (N, T)=>"".concat(T * 5))
                },
                {
                    values: [
                        "0",
                        "1",
                        "2",
                        "4",
                        "8"
                    ],
                    valueThemeKeys: [
                        "--ring-width"
                    ],
                    hasDefaultValue: !0
                }
            ]);
        let P = "var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color)";
        t.functional("ring-offset", (N)=>{
            if (N.value) {
                if (N.value.kind === "arbitrary") {
                    let T = N.value.value;
                    var _N_value_dataType;
                    switch((_N_value_dataType = N.value.dataType) !== null && _N_value_dataType !== void 0 ? _N_value_dataType : (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(T, [
                        "color",
                        "length"
                    ])){
                        case "length":
                            return N.modifier ? void 0 : [
                                n("--tw-ring-offset-width", T),
                                n("--tw-ring-offset-shadow", P)
                            ];
                        default:
                            return T = X(T, N.modifier, r), T === null ? void 0 : [
                                n("--tw-ring-offset-color", T)
                            ];
                    }
                }
                {
                    let T = r.resolve(N.value.value, [
                        "--ring-offset-width"
                    ]);
                    if (T) return N.modifier ? void 0 : [
                        n("--tw-ring-offset-width", T),
                        n("--tw-ring-offset-shadow", P)
                    ];
                    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(N.value.value)) return N.modifier ? void 0 : [
                        n("--tw-ring-offset-width", "".concat(N.value.value, "px")),
                        n("--tw-ring-offset-shadow", P)
                    ];
                }
                {
                    let T = te(N, r, [
                        "--ring-offset-color",
                        "--color"
                    ]);
                    if (T) return [
                        n("--tw-ring-offset-color", T)
                    ];
                }
            }
        });
    }
    return i("ring-offset", ()=>[
            {
                values: [
                    "current",
                    "inherit",
                    "transparent"
                ],
                valueThemeKeys: [
                    "--ring-offset-color",
                    "--color"
                ],
                modifiers: Array.from({
                    length: 21
                }, (a, c)=>"".concat(c * 5))
            },
            {
                values: [
                    "0",
                    "1",
                    "2",
                    "4",
                    "8"
                ],
                valueThemeKeys: [
                    "--ring-offset-width"
                ]
            }
        ]), t.functional("@container", (a)=>{
        let c = null;
        if (a.value === null ? c = "inline-size" : a.value.kind === "arbitrary" ? c = a.value.value : a.value.kind === "named" && a.value.value === "normal" ? c = "normal" : !1, c !== null) return a.modifier ? [
            n("container-type", c),
            n("container-name", a.modifier.value)
        ] : [
            n("container-type", c)
        ];
    }), i("@container", ()=>[
            {
                values: [
                    "normal"
                ],
                valueThemeKeys: [],
                hasDefaultValue: !0
            }
        ]), t;
}
var kt = [
    "number",
    "integer",
    "ratio",
    "percentage"
];
function dr(r) {
    let t = r.params;
    return Si.test(t) ? (i)=>{
        let e = {
            "--value": {
                usedSpacingInteger: !1,
                usedSpacingNumber: !1,
                themeKeys: new Set,
                literals: new Set
            },
            "--modifier": {
                usedSpacingInteger: !1,
                usedSpacingNumber: !1,
                themeKeys: new Set,
                literals: new Set
            }
        };
        j(r.nodes, (o)=>{
            if (o.kind !== "declaration" || !o.value || !o.value.includes("--value(") && !o.value.includes("--modifier(")) return;
            let s = J(o.value);
            ee(s, (l)=>{
                if (l.kind !== "function") return;
                if (l.value === "--spacing" && !(e["--modifier"].usedSpacingNumber && e["--value"].usedSpacingNumber)) return ee(l.nodes, (u)=>{
                    if (u.kind !== "function" || u.value !== "--value" && u.value !== "--modifier") return;
                    let f = u.value;
                    for (let g of u.nodes)if (g.kind === "word") {
                        var _e_f, _e_f1;
                        if (g.value === "integer") (_e_f = e[f]).usedSpacingInteger || (_e_f.usedSpacingInteger = !0);
                        else if (g.value === "number" && ((_e_f1 = e[f]).usedSpacingNumber || (_e_f1.usedSpacingNumber = !0), e["--modifier"].usedSpacingNumber && e["--value"].usedSpacingNumber)) return 2;
                    }
                }), 0;
                if (l.value !== "--value" && l.value !== "--modifier") return;
                let d = (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["b"])(Z(l.nodes), ",");
                for (let [u, f] of d.entries())f = f.replace(/\\\*/g, "*"), f = f.replace(/--(.*?)\s--(.*?)/g, "--$1-*--$2"), f = f.replace(/\s+/g, ""), f = f.replace(/(-\*){2,}/g, "-*"), f[0] === "-" && f[1] === "-" && !f.includes("-*") && (f += "-*"), d[u] = f;
                l.nodes = J(d.join(","));
                for (let u of l.nodes)if (u.kind === "word" && (u.value[0] === '"' || u.value[0] === "'") && u.value[0] === u.value[u.value.length - 1]) {
                    let f = u.value.slice(1, -1);
                    e[l.value].literals.add(f);
                } else if (u.kind === "word" && u.value[0] === "-" && u.value[1] === "-") {
                    let f = u.value.replace(/-\*.*$/g, "");
                    e[l.value].themeKeys.add(f);
                } else if (u.kind === "word" && !(u.value[0] === "[" && u.value[u.value.length - 1] === "]") && !kt.includes(u.value)) {
                    console.warn('Unsupported bare value data type: "'.concat(u.value, '".\nOnly valid data types are: ').concat(kt.map((y1)=>'"'.concat(y1, '"')).join(", "), ".\n"));
                    let f = u.value, g = structuredClone(l), m = "\xB6";
                    ee(g.nodes, (y1, param)=>{
                        let { replaceWith: x } = param;
                        y1.kind === "word" && y1.value === f && x({
                            kind: "word",
                            value: m
                        });
                    });
                    let p = "^".repeat(Z([
                        u
                    ]).length), w = Z([
                        g
                    ]).indexOf(m), v = [
                        "```css",
                        Z([
                            l
                        ]),
                        " ".repeat(w) + p,
                        "```"
                    ].join("\n");
                    console.warn(v);
                }
            }), o.value = Z(s);
        }), i.utilities.functional(t.slice(0, -2), (o)=>{
            let s = structuredClone(r), l = o.value, d = o.modifier;
            if (l === null) return;
            let u = !1, f = !1, g = !1, m = !1, p = new Map, w = !1;
            if (j([
                s
            ], (v, param)=>{
                let { parent: y1, replaceWith: x } = param;
                if ((y1 === null || y1 === void 0 ? void 0 : y1.kind) !== "rule" && (y1 === null || y1 === void 0 ? void 0 : y1.kind) !== "at-rule" || v.kind !== "declaration" || !v.value) return;
                let S = J(v.value);
                var _ee;
                ((_ee = ee(S, (b, param)=>{
                    let { replaceWith: O } = param;
                    if (b.kind === "function") {
                        if (b.value === "--value") {
                            u = !0;
                            let R = ur(l, b, i);
                            return R ? (f = !0, R.ratio ? w = !0 : p.set(v, y1), O(R.nodes), 1) : (u || (u = !1), x([]), 2);
                        } else if (b.value === "--modifier") {
                            if (d === null) return x([]), 2;
                            g = !0;
                            let R = ur(d, b, i);
                            return R ? (m = !0, O(R.nodes), 1) : (g || (g = !1), x([]), 2);
                        }
                    }
                })) !== null && _ee !== void 0 ? _ee : 0) === 0 && (v.value = Z(S));
            }), u && !f || g && !m || w && m || d && !w && !m) return null;
            if (w) for (let [v, y1] of p){
                let x = y1.nodes.indexOf(v);
                x !== -1 && y1.nodes.splice(x, 1);
            }
            return s.nodes;
        }), i.utilities.suggest(t.slice(0, -2), ()=>{
            let o = [], s = [];
            for (let [l, { literals: d, usedSpacingNumber: u, usedSpacingInteger: f, themeKeys: g }] of [
                [
                    o,
                    e["--value"]
                ],
                [
                    s,
                    e["--modifier"]
                ]
            ]){
                for (let m of d)l.push(m);
                if (u) l.push(...Ze);
                else if (f) for (let m of Ze)(0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(m) && l.push(m);
                for (let m of i.theme.keysInNamespaces(g))l.push(m.replace(cr, (p, w, v)=>"".concat(w, ".").concat(v)));
            }
            return [
                {
                    values: o,
                    modifiers: s
                }
            ];
        });
    } : Ni.test(t) ? (i)=>{
        i.utilities.static(t, ()=>structuredClone(r.nodes));
    } : null;
}
function ur(r, t, i) {
    for (let e of t.nodes){
        if (r.kind === "named" && e.kind === "word" && (e.value[0] === "'" || e.value[0] === '"') && e.value[e.value.length - 1] === e.value[0] && e.value.slice(1, -1) === r.value) return {
            nodes: J(r.value)
        };
        if (r.kind === "named" && e.kind === "word" && e.value[0] === "-" && e.value[1] === "-") {
            let o = e.value;
            if (o.endsWith("-*")) {
                o = o.slice(0, -2);
                let s = i.theme.resolve(r.value, [
                    o
                ]);
                if (s) return {
                    nodes: J(s)
                };
            } else {
                let s = o.split("-*");
                if (s.length <= 1) continue;
                let l = [
                    s.shift()
                ], d = i.theme.resolveWith(r.value, l, s);
                if (d) {
                    let [, u = {}] = d;
                    {
                        let f = u[s.pop()];
                        if (f) return {
                            nodes: J(f)
                        };
                    }
                }
            }
        } else if (r.kind === "named" && e.kind === "word") {
            if (!kt.includes(e.value)) continue;
            let o = e.value === "ratio" && "fraction" in r ? r.fraction : r.value;
            if (!o) continue;
            let s = (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(o, [
                e.value
            ]);
            if (s === null) continue;
            if (s === "ratio") {
                let [l, d] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["b"])(o, "/");
                if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(l) || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(d)) continue;
            } else {
                if (s === "number" && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["f"])(o)) continue;
                if (s === "percentage" && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(o.slice(0, -1))) continue;
            }
            return {
                nodes: J(o),
                ratio: s === "ratio"
            };
        } else if (r.kind === "arbitrary" && e.kind === "word" && e.value[0] === "[" && e.value[e.value.length - 1] === "]") {
            let o = e.value.slice(1, -1);
            if (o === "*") return {
                nodes: J(r.value)
            };
            if ("dataType" in r && r.dataType && r.dataType !== o) continue;
            if ("dataType" in r && r.dataType) return {
                nodes: J(r.value)
            };
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(r.value, [
                o
            ]) !== null) return {
                nodes: J(r.value)
            };
        }
    }
}
function ue(r, t, i, e) {
    let o = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : "";
    let s = !1, l = Re(t, (u)=>i == null ? e(u) : u.startsWith("current") ? e(Q(u, i)) : ((u.startsWith("var(") || i.startsWith("var(")) && (s = !0), e(fr(u, i))));
    function d(u) {
        return o ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["b"])(u, ",").map((f)=>o + f).join(",") : u;
    }
    return s ? [
        n(r, d(Re(t, e))),
        Y("@supports (color: lab(from red l a b))", [
            n(r, d(l))
        ])
    ] : [
        n(r, d(l))
    ];
}
function Ye(r, t, i, e) {
    let o = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : "";
    let s = !1, l = (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["b"])(t, ",").map((d)=>Re(d, (u)=>i == null ? e(u) : u.startsWith("current") ? e(Q(u, i)) : ((u.startsWith("var(") || i.startsWith("var(")) && (s = !0), e(fr(u, i))))).map((d)=>"drop-shadow(".concat(d, ")")).join(" ");
    return s ? [
        n(r, o + (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["b"])(t, ",").map((d)=>"drop-shadow(".concat(Re(d, e), ")")).join(" ")),
        Y("@supports (color: lab(from red l a b))", [
            n(r, o + l)
        ])
    ] : [
        n(r, o + l)
    ];
}
var bt = {
    "--alpha": Ti,
    "--spacing": Ei,
    "--theme": Ri,
    theme: Pi
};
function Ti(r, t, i) {
    for(var _len = arguments.length, e = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++){
        e[_key - 3] = arguments[_key];
    }
    let [o, s] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["b"])(i, "/").map((l)=>l.trim());
    if (!o || !s) throw new Error("The --alpha(…) function requires a color and an alpha value, e.g.: `--alpha(".concat(o || "var(--my-color)", " / ").concat(s || "50%", ")`"));
    if (e.length > 0) throw new Error("The --alpha(…) function only accepts one argument, e.g.: `--alpha(".concat(o || "var(--my-color)", " / ").concat(s || "50%", ")`"));
    return Q(o, s);
}
function Ei(r, t, i) {
    for(var _len = arguments.length, e = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++){
        e[_key - 3] = arguments[_key];
    }
    if (!i) throw new Error("The --spacing(\u2026) function requires an argument, but received none.");
    if (e.length > 0) throw new Error("The --spacing(…) function only accepts a single argument, but received ".concat(e.length + 1, "."));
    let o = r.theme.resolve(null, [
        "--spacing"
    ]);
    if (!o) throw new Error("The --spacing(\u2026) function requires that the `--spacing` theme variable exists, but it was not found.");
    return "calc(".concat(o, " * ").concat(i, ")");
}
function Ri(r, t, i) {
    for(var _len = arguments.length, e = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++){
        e[_key - 3] = arguments[_key];
    }
    if (!i.startsWith("--")) throw new Error("The --theme(\u2026) function can only be used with CSS variables from your theme.");
    let o = !1;
    i.endsWith(" inline") && (o = !0, i = i.slice(0, -7)), t.kind === "at-rule" && (o = !0);
    let s = r.resolveThemeValue(i, o);
    if (!s) {
        if (e.length > 0) return e.join(", ");
        throw new Error("Could not resolve value for theme function: `theme(".concat(i, ")`. Consider checking if the variable name is correct or provide a fallback value to silence this error."));
    }
    if (e.length === 0) return s;
    let l = e.join(", ");
    if (l === "initial") return s;
    if (s === "initial") return l;
    if (s.startsWith("var(") || s.startsWith("theme(") || s.startsWith("--theme(")) {
        let d = J(s);
        return Oi(d, l), Z(d);
    }
    return s;
}
function Pi(r, t, i) {
    for(var _len = arguments.length, e = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++){
        e[_key - 3] = arguments[_key];
    }
    i = Ki(i);
    let o = r.resolveThemeValue(i);
    if (!o && e.length > 0) return e.join(", ");
    if (!o) throw new Error("Could not resolve value for theme function: `theme(".concat(i, ")`. Consider checking if the path is correct or provide a fallback value to silence this error."));
    return o;
}
var mr = new RegExp(Object.keys(bt).map((r)=>"".concat(r, "\\(")).join("|"));
function xe(r, t) {
    let i = 0;
    return j(r, (e)=>{
        if (e.kind === "declaration" && e.value && mr.test(e.value)) {
            i |= 8, e.value = gr(e.value, e, t);
            return;
        }
        e.kind === "at-rule" && (e.name === "@media" || e.name === "@custom-media" || e.name === "@container" || e.name === "@supports") && mr.test(e.params) && (i |= 8, e.params = gr(e.params, e, t));
    }), i;
}
function gr(r, t, i) {
    let e = J(r);
    return ee(e, (o, param)=>{
        let { replaceWith: s } = param;
        if (o.kind === "function" && o.value in bt) {
            let l = (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["b"])(Z(o.nodes).trim(), ",").map((u)=>u.trim()), d = bt[o.value](i, t, ...l);
            return s(J(d));
        }
    }), Z(e);
}
function Ki(r) {
    if (r[0] !== "'" && r[0] !== '"') return r;
    let t = "", i = r[0];
    for(let e = 1; e < r.length - 1; e++){
        let o = r[e], s = r[e + 1];
        o === "\\" && (s === i || s === "\\") ? (t += s, e++) : t += o;
    }
    return t;
}
function Oi(r, t) {
    ee(r, (i)=>{
        if (i.kind === "function" && !(i.value !== "var" && i.value !== "theme" && i.value !== "--theme")) if (i.nodes.length === 1) i.nodes.push({
            kind: "word",
            value: ", ".concat(t)
        });
        else {
            let e = i.nodes[i.nodes.length - 1];
            e.kind === "word" && e.value === "initial" && (e.value = t);
        }
    });
}
function Qe(r, t) {
    let i = r.length, e = t.length, o = i < e ? i : e;
    for(let s = 0; s < o; s++){
        let l = r.charCodeAt(s), d = t.charCodeAt(s);
        if (l >= 48 && l <= 57 && d >= 48 && d <= 57) {
            let u = s, f = s + 1, g = s, m = s + 1;
            for(l = r.charCodeAt(f); l >= 48 && l <= 57;)l = r.charCodeAt(++f);
            for(d = t.charCodeAt(m); d >= 48 && d <= 57;)d = t.charCodeAt(++m);
            let p = r.slice(u, f), w = t.slice(g, m), v = Number(p) - Number(w);
            if (v) return v;
            if (p < w) return -1;
            if (p > w) return 1;
            continue;
        }
        if (l !== d) return l - d;
    }
    return r.length - t.length;
}
var _i = /^\d+\/\d+$/;
function hr(r) {
    let t = new W((o)=>({
            name: o,
            utility: o,
            fraction: !1,
            modifiers: []
        }));
    for (let o of r.utilities.keys("static")){
        let s = t.get(o);
        s.fraction = !1, s.modifiers = [];
    }
    for (let o of r.utilities.keys("functional")){
        let s = r.utilities.getCompletions(o);
        for (let l of s)for (let d of l.values){
            var _g;
            let u = d !== null && _i.test(d), f = d === null ? o : "".concat(o, "-").concat(d), g = t.get(f);
            if (g.utility = o, (_g = g).fraction || (_g.fraction = u), g.modifiers.push(...l.modifiers), l.supportsNegative) {
                var _m;
                let m = t.get("-".concat(f));
                m.utility = "-".concat(o), (_m = m).fraction || (_m.fraction = u), m.modifiers.push(...l.modifiers);
            }
            g.modifiers = Array.from(new Set(g.modifiers));
        }
    }
    if (t.size === 0) return [];
    let i = Array.from(t.values());
    return i.sort((o, s)=>Qe(o.name, s.name)), Di(i);
}
function Di(r) {
    let t = [], i = null, e = new Map, o = new W(()=>[]);
    for (let l of r){
        let { utility: d, fraction: u } = l;
        i || (i = {
            utility: d,
            items: []
        }, e.set(d, i)), d !== i.utility && (t.push(i), i = {
            utility: d,
            items: []
        }, e.set(d, i)), u ? o.get(d).push(l) : i.items.push(l);
    }
    i && t[t.length - 1] !== i && t.push(i);
    for (let [l, d] of o){
        let u = e.get(l);
        u && u.items.push(...d);
    }
    let s = [];
    for (let l of t)for (let d of l.items)s.push([
        d.name,
        {
            modifiers: d.modifiers
        }
    ]);
    return s;
}
function vr(r) {
    let t = [];
    for (let [e, o] of r.variants.entries()){
        let d = function() {
            let { value: u, modifier: f } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
            let g = e;
            u && (g += s ? "-".concat(u) : u), f && (g += "/".concat(f));
            let m = r.parseVariant(g);
            if (!m) return [];
            let p = B(".__placeholder__", []);
            if (Ce(p, m, r.variants) === null) return [];
            let w = [];
            return Ge(p.nodes, (v, param)=>{
                let { path: y1 } = param;
                if (v.kind !== "rule" && v.kind !== "at-rule" || v.nodes.length > 0) return;
                y1.sort((C, b)=>{
                    let O = C.kind === "at-rule", R = b.kind === "at-rule";
                    return O && !R ? -1 : !O && R ? 1 : 0;
                });
                let x = y1.flatMap((C)=>C.kind === "rule" ? C.selector === "&" ? [] : [
                        C.selector
                    ] : C.kind === "at-rule" ? [
                        "".concat(C.name, " ").concat(C.params)
                    ] : []), S = "";
                for(let C = x.length - 1; C >= 0; C--)S = S === "" ? x[C] : "".concat(x[C], " { ").concat(S, " }");
                w.push(S);
            }), w;
        };
        var i = d;
        if (o.kind === "arbitrary") continue;
        let s = e !== "@", l = r.variants.getCompletions(e);
        switch(o.kind){
            case "static":
                {
                    t.push({
                        name: e,
                        values: l,
                        isArbitrary: !1,
                        hasDash: s,
                        selectors: d
                    });
                    break;
                }
            case "functional":
                {
                    t.push({
                        name: e,
                        values: l,
                        isArbitrary: !0,
                        hasDash: s,
                        selectors: d
                    });
                    break;
                }
            case "compound":
                {
                    t.push({
                        name: e,
                        values: l,
                        isArbitrary: !0,
                        hasDash: s,
                        selectors: d
                    });
                    break;
                }
        }
    }
    return t;
}
function wr(r, t) {
    let { astNodes: i, nodeSorting: e } = pe(Array.from(t), r), o = new Map(t.map((l)=>[
            l,
            null
        ])), s = 0n;
    for (let l of i){
        var _e_get;
        let d = (_e_get = e.get(l)) === null || _e_get === void 0 ? void 0 : _e_get.candidate;
        var _o_get;
        d && o.set(d, (_o_get = o.get(d)) !== null && _o_get !== void 0 ? _o_get : s++);
    }
    return t.map((l)=>{
        var _o_get;
        return [
            l,
            (_o_get = o.get(l)) !== null && _o_get !== void 0 ? _o_get : null
        ];
    });
}
var Xe = RegExp("^@?[a-z0-9][a-zA-Z0-9_-]*(?<![_-])$");
var xt = class {
    static(t, i) {
        let { compounds: e, order: o } = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
        this.set(t, {
            kind: "static",
            applyFn: i,
            compoundsWith: 0,
            compounds: e !== null && e !== void 0 ? e : 2,
            order: o
        });
    }
    fromAst(t, i, e) {
        let o = [], s = !1;
        j(i, (l)=>{
            l.kind === "rule" ? o.push(l.selector) : l.kind === "at-rule" && l.name === "@variant" ? s = !0 : l.kind === "at-rule" && l.name !== "@slot" && o.push("".concat(l.name, " ").concat(l.params));
        }), this.static(t, (l)=>{
            let d = structuredClone(i);
            s && Ct(d, e), At(d, l.nodes), l.nodes = d;
        }, {
            compounds: ye(o)
        });
    }
    functional(t, i) {
        let { compounds: e, order: o } = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
        this.set(t, {
            kind: "functional",
            applyFn: i,
            compoundsWith: 0,
            compounds: e !== null && e !== void 0 ? e : 2,
            order: o
        });
    }
    compound(t, i, e) {
        let { compounds: o, order: s } = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
        this.set(t, {
            kind: "compound",
            applyFn: e,
            compoundsWith: i,
            compounds: o !== null && o !== void 0 ? o : 2,
            order: s
        });
    }
    group(t, i) {
        this.groupOrder = this.nextOrder(), i && this.compareFns.set(this.groupOrder, i), t(), this.groupOrder = null;
    }
    has(t) {
        return this.variants.has(t);
    }
    get(t) {
        return this.variants.get(t);
    }
    kind(t) {
        var _this_variants_get;
        return (_this_variants_get = this.variants.get(t)) === null || _this_variants_get === void 0 ? void 0 : _this_variants_get.kind;
    }
    compoundsWith(t, i) {
        let e = this.variants.get(t), o = typeof i == "string" ? this.variants.get(i) : i.kind === "arbitrary" ? {
            compounds: ye([
                i.selector
            ])
        } : this.variants.get(i.root);
        return !(!e || !o || e.kind !== "compound" || o.compounds === 0 || e.compoundsWith === 0 || (e.compoundsWith & o.compounds) === 0);
    }
    suggest(t, i) {
        this.completions.set(t, i);
    }
    getCompletions(t) {
        var _this_completions_get;
        var _this_completions_get1;
        return (_this_completions_get1 = (_this_completions_get = this.completions.get(t)) === null || _this_completions_get === void 0 ? void 0 : _this_completions_get()) !== null && _this_completions_get1 !== void 0 ? _this_completions_get1 : [];
    }
    compare(t, i) {
        if (t === i) return 0;
        if (t === null) return -1;
        if (i === null) return 1;
        if (t.kind === "arbitrary" && i.kind === "arbitrary") return t.selector < i.selector ? -1 : 1;
        if (t.kind === "arbitrary") return 1;
        if (i.kind === "arbitrary") return -1;
        let e = this.variants.get(t.root).order, o = this.variants.get(i.root).order, s = e - o;
        if (s !== 0) return s;
        if (t.kind === "compound" && i.kind === "compound") {
            let f = this.compare(t.variant, i.variant);
            return f !== 0 ? f : t.modifier && i.modifier ? t.modifier.value < i.modifier.value ? -1 : 1 : t.modifier ? 1 : i.modifier ? -1 : 0;
        }
        let l = this.compareFns.get(e);
        if (l !== void 0) return l(t, i);
        if (t.root !== i.root) return t.root < i.root ? -1 : 1;
        let d = t.value, u = i.value;
        return d === null ? -1 : u === null || d.kind === "arbitrary" && u.kind !== "arbitrary" ? 1 : d.kind !== "arbitrary" && u.kind === "arbitrary" || d.value < u.value ? -1 : 1;
    }
    keys() {
        return this.variants.keys();
    }
    entries() {
        return this.variants.entries();
    }
    set(t, param) {
        let { kind: i, applyFn: e, compounds: o, compoundsWith: s, order: l } = param;
        let d = this.variants.get(t);
        d ? Object.assign(d, {
            kind: i,
            applyFn: e,
            compounds: o
        }) : (l === void 0 && (this.lastOrder = this.nextOrder(), l = this.lastOrder), this.variants.set(t, {
            kind: i,
            applyFn: e,
            order: l,
            compoundsWith: s,
            compounds: o
        }));
    }
    nextOrder() {
        var _this_groupOrder;
        return (_this_groupOrder = this.groupOrder) !== null && _this_groupOrder !== void 0 ? _this_groupOrder : this.lastOrder + 1;
    }
    constructor(){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "compareFns", new Map);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "variants", new Map);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "completions", new Map);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "groupOrder", null);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f40$swc$2f$helpers$2f$esm$2f$_define_property$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_"])(this, "lastOrder", 0);
    }
};
function ye(r) {
    let t = 0;
    for (let i of r){
        if (i[0] === "@") {
            if (!i.startsWith("@media") && !i.startsWith("@supports") && !i.startsWith("@container")) return 0;
            t |= 1;
            continue;
        }
        if (i.includes("::")) return 0;
        t |= 2;
    }
    return t;
}
function kr(r) {
    let t = new xt;
    function i(f, g) {
        let { compounds: m } = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
        m = m !== null && m !== void 0 ? m : ye(g), t.static(f, (p)=>{
            p.nodes = g.map((w)=>Y(w, p.nodes));
        }, {
            compounds: m
        });
    }
    i("*", [
        ":is(& > *)"
    ], {
        compounds: 0
    }), i("**", [
        ":is(& *)"
    ], {
        compounds: 0
    });
    function e(f, g) {
        return g.map((m)=>{
            m = m.trim();
            let p = (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["b"])(m, " ");
            return p[0] === "not" ? p.slice(1).join(" ") : f === "@container" ? p[0][0] === "(" ? "not ".concat(m) : p[1] === "not" ? "".concat(p[0], " ").concat(p.slice(2).join(" ")) : "".concat(p[0], " not ").concat(p.slice(1).join(" ")) : "not ".concat(m);
        });
    }
    let o = [
        "@media",
        "@supports",
        "@container"
    ];
    function s(f) {
        for (let g of o){
            if (g !== f.name) continue;
            let m = (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["b"])(f.params, ",");
            return m.length > 1 ? null : (m = e(f.name, m), z(f.name, m.join(", ")));
        }
        return null;
    }
    function l(f) {
        return f.includes("::") ? null : "&:not(".concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["b"])(f, ",").map((m)=>(m = m.replaceAll("&", "*"), m)).join(", "), ")");
    }
    t.compound("not", 3, (f, g)=>{
        if (g.variant.kind === "arbitrary" && g.variant.relative || g.modifier) return null;
        let m = !1;
        if (j([
            f
        ], (p, param)=>{
            let { path: w } = param;
            if (p.kind !== "rule" && p.kind !== "at-rule") return 0;
            if (p.nodes.length > 0) return 0;
            let v = [], y1 = [];
            for (let S of w)S.kind === "at-rule" ? v.push(S) : S.kind === "rule" && y1.push(S);
            if (v.length > 1) return 2;
            if (y1.length > 1) return 2;
            let x = [];
            for (let S of y1){
                let C = l(S.selector);
                if (!C) return m = !1, 2;
                x.push(B(C, []));
            }
            for (let S of v){
                let C = s(S);
                if (!C) return m = !1, 2;
                x.push(C);
            }
            return Object.assign(f, B("&", x)), m = !0, 1;
        }), f.kind === "rule" && f.selector === "&" && f.nodes.length === 1 && Object.assign(f, f.nodes[0]), !m) return null;
    }), t.suggest("not", ()=>Array.from(t.keys()).filter((f)=>t.compoundsWith("not", f))), t.compound("group", 2, (f, g)=>{
        if (g.variant.kind === "arbitrary" && g.variant.relative) return null;
        let m = g.modifier ? ":where(.".concat(r.prefix ? "".concat(r.prefix, "\\:") : "", "group\\/").concat(g.modifier.value, ")") : ":where(.".concat(r.prefix ? "".concat(r.prefix, "\\:") : "", "group)"), p = !1;
        if (j([
            f
        ], (w, param)=>{
            let { path: v } = param;
            if (w.kind !== "rule") return 0;
            for (let x of v.slice(0, -1))if (x.kind === "rule") return p = !1, 2;
            let y1 = w.selector.replaceAll("&", m);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["b"])(y1, ",").length > 1 && (y1 = ":is(".concat(y1, ")")), w.selector = "&:is(".concat(y1, " *)"), p = !0;
        }), !p) return null;
    }), t.suggest("group", ()=>Array.from(t.keys()).filter((f)=>t.compoundsWith("group", f))), t.compound("peer", 2, (f, g)=>{
        if (g.variant.kind === "arbitrary" && g.variant.relative) return null;
        let m = g.modifier ? ":where(.".concat(r.prefix ? "".concat(r.prefix, "\\:") : "", "peer\\/").concat(g.modifier.value, ")") : ":where(.".concat(r.prefix ? "".concat(r.prefix, "\\:") : "", "peer)"), p = !1;
        if (j([
            f
        ], (w, param)=>{
            let { path: v } = param;
            if (w.kind !== "rule") return 0;
            for (let x of v.slice(0, -1))if (x.kind === "rule") return p = !1, 2;
            let y1 = w.selector.replaceAll("&", m);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["b"])(y1, ",").length > 1 && (y1 = ":is(".concat(y1, ")")), w.selector = "&:is(".concat(y1, " ~ *)"), p = !0;
        }), !p) return null;
    }), t.suggest("peer", ()=>Array.from(t.keys()).filter((f)=>t.compoundsWith("peer", f))), i("first-letter", [
        "&::first-letter"
    ]), i("first-line", [
        "&::first-line"
    ]), i("marker", [
        "& *::marker",
        "&::marker",
        "& *::-webkit-details-marker",
        "&::-webkit-details-marker"
    ]), i("selection", [
        "& *::selection",
        "&::selection"
    ]), i("file", [
        "&::file-selector-button"
    ]), i("placeholder", [
        "&::placeholder"
    ]), i("backdrop", [
        "&::backdrop"
    ]), i("details-content", [
        "&::details-content"
    ]);
    {
        let f = function() {
            return F([
                z("@property", "--tw-content", [
                    n("syntax", '"*"'),
                    n("initial-value", '""'),
                    n("inherits", "false")
                ])
            ]);
        };
        var d = f;
        t.static("before", (g)=>{
            g.nodes = [
                B("&::before", [
                    f(),
                    n("content", "var(--tw-content)"),
                    ...g.nodes
                ])
            ];
        }, {
            compounds: 0
        }), t.static("after", (g)=>{
            g.nodes = [
                B("&::after", [
                    f(),
                    n("content", "var(--tw-content)"),
                    ...g.nodes
                ])
            ];
        }, {
            compounds: 0
        });
    }
    i("first", [
        "&:first-child"
    ]), i("last", [
        "&:last-child"
    ]), i("only", [
        "&:only-child"
    ]), i("odd", [
        "&:nth-child(odd)"
    ]), i("even", [
        "&:nth-child(even)"
    ]), i("first-of-type", [
        "&:first-of-type"
    ]), i("last-of-type", [
        "&:last-of-type"
    ]), i("only-of-type", [
        "&:only-of-type"
    ]), i("visited", [
        "&:visited"
    ]), i("target", [
        "&:target"
    ]), i("open", [
        "&:is([open], :popover-open, :open)"
    ]), i("default", [
        "&:default"
    ]), i("checked", [
        "&:checked"
    ]), i("indeterminate", [
        "&:indeterminate"
    ]), i("placeholder-shown", [
        "&:placeholder-shown"
    ]), i("autofill", [
        "&:autofill"
    ]), i("optional", [
        "&:optional"
    ]), i("required", [
        "&:required"
    ]), i("valid", [
        "&:valid"
    ]), i("invalid", [
        "&:invalid"
    ]), i("user-valid", [
        "&:user-valid"
    ]), i("user-invalid", [
        "&:user-invalid"
    ]), i("in-range", [
        "&:in-range"
    ]), i("out-of-range", [
        "&:out-of-range"
    ]), i("read-only", [
        "&:read-only"
    ]), i("empty", [
        "&:empty"
    ]), i("focus-within", [
        "&:focus-within"
    ]), t.static("hover", (f)=>{
        f.nodes = [
            B("&:hover", [
                z("@media", "(hover: hover)", f.nodes)
            ])
        ];
    }), i("focus", [
        "&:focus"
    ]), i("focus-visible", [
        "&:focus-visible"
    ]), i("active", [
        "&:active"
    ]), i("enabled", [
        "&:enabled"
    ]), i("disabled", [
        "&:disabled"
    ]), i("inert", [
        "&:is([inert], [inert] *)"
    ]), t.compound("in", 2, (f, g)=>{
        if (g.modifier) return null;
        let m = !1;
        if (j([
            f
        ], (p, param)=>{
            let { path: w } = param;
            if (p.kind !== "rule") return 0;
            for (let v of w.slice(0, -1))if (v.kind === "rule") return m = !1, 2;
            p.selector = ":where(".concat(p.selector.replaceAll("&", "*"), ") &"), m = !0;
        }), !m) return null;
    }), t.suggest("in", ()=>Array.from(t.keys()).filter((f)=>t.compoundsWith("in", f))), t.compound("has", 2, (f, g)=>{
        if (g.modifier) return null;
        let m = !1;
        if (j([
            f
        ], (p, param)=>{
            let { path: w } = param;
            if (p.kind !== "rule") return 0;
            for (let v of w.slice(0, -1))if (v.kind === "rule") return m = !1, 2;
            p.selector = "&:has(".concat(p.selector.replaceAll("&", "*"), ")"), m = !0;
        }), !m) return null;
    }), t.suggest("has", ()=>Array.from(t.keys()).filter((f)=>t.compoundsWith("has", f))), t.functional("aria", (f, g)=>{
        if (!g.value || g.modifier) return null;
        g.value.kind === "arbitrary" ? f.nodes = [
            B("&[aria-".concat(yr(g.value.value), "]"), f.nodes)
        ] : f.nodes = [
            B("&[aria-".concat(g.value.value, '="true"]'), f.nodes)
        ];
    }), t.suggest("aria", ()=>[
            "busy",
            "checked",
            "disabled",
            "expanded",
            "hidden",
            "pressed",
            "readonly",
            "required",
            "selected"
        ]), t.functional("data", (f, g)=>{
        if (!g.value || g.modifier) return null;
        f.nodes = [
            B("&[data-".concat(yr(g.value.value), "]"), f.nodes)
        ];
    }), t.functional("nth", (f, g)=>{
        if (!g.value || g.modifier || g.value.kind === "named" && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(g.value.value)) return null;
        f.nodes = [
            B("&:nth-child(".concat(g.value.value, ")"), f.nodes)
        ];
    }), t.functional("nth-last", (f, g)=>{
        if (!g.value || g.modifier || g.value.kind === "named" && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(g.value.value)) return null;
        f.nodes = [
            B("&:nth-last-child(".concat(g.value.value, ")"), f.nodes)
        ];
    }), t.functional("nth-of-type", (f, g)=>{
        if (!g.value || g.modifier || g.value.kind === "named" && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(g.value.value)) return null;
        f.nodes = [
            B("&:nth-of-type(".concat(g.value.value, ")"), f.nodes)
        ];
    }), t.functional("nth-last-of-type", (f, g)=>{
        if (!g.value || g.modifier || g.value.kind === "named" && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(g.value.value)) return null;
        f.nodes = [
            B("&:nth-last-of-type(".concat(g.value.value, ")"), f.nodes)
        ];
    }), t.functional("supports", (f, g)=>{
        if (!g.value || g.modifier) return null;
        let m = g.value.value;
        if (m === null) return null;
        if (/^[\w-]*\s*\(/.test(m)) {
            let p = m.replace(/\b(and|or|not)\b/g, " $1 ");
            f.nodes = [
                z("@supports", p, f.nodes)
            ];
            return;
        }
        m.includes(":") || (m = "".concat(m, ": var(--tw)")), (m[0] !== "(" || m[m.length - 1] !== ")") && (m = "(".concat(m, ")")), f.nodes = [
            z("@supports", m, f.nodes)
        ];
    }, {
        compounds: 1
    }), i("motion-safe", [
        "@media (prefers-reduced-motion: no-preference)"
    ]), i("motion-reduce", [
        "@media (prefers-reduced-motion: reduce)"
    ]), i("contrast-more", [
        "@media (prefers-contrast: more)"
    ]), i("contrast-less", [
        "@media (prefers-contrast: less)"
    ]);
    {
        let f = function(g, m, p, w) {
            if (g === m) return 0;
            let v = w.get(g);
            if (v === null) return p === "asc" ? -1 : 1;
            let y1 = w.get(m);
            return y1 === null ? p === "asc" ? 1 : -1 : we(v, y1, p);
        };
        var u = f;
        {
            let g = r.namespace("--breakpoint"), m = new W((p)=>{
                switch(p.kind){
                    case "static":
                        var _r_resolveValue;
                        return (_r_resolveValue = r.resolveValue(p.root, [
                            "--breakpoint"
                        ])) !== null && _r_resolveValue !== void 0 ? _r_resolveValue : null;
                    case "functional":
                        {
                            if (!p.value || p.modifier) return null;
                            let w = null;
                            return p.value.kind === "arbitrary" ? w = p.value.value : p.value.kind === "named" && (w = r.resolveValue(p.value.value, [
                                "--breakpoint"
                            ])), !w || w.includes("var(") ? null : w;
                        }
                    case "arbitrary":
                    case "compound":
                        return null;
                }
            });
            t.group(()=>{
                t.functional("max", (p, w)=>{
                    if (w.modifier) return null;
                    let v = m.get(w);
                    if (v === null) return null;
                    p.nodes = [
                        z("@media", "(width < ".concat(v, ")"), p.nodes)
                    ];
                }, {
                    compounds: 1
                });
            }, (p, w)=>f(p, w, "desc", m)), t.suggest("max", ()=>Array.from(g.keys()).filter((p)=>p !== null)), t.group(()=>{
                for (let [p, w] of r.namespace("--breakpoint"))p !== null && t.static(p, (v)=>{
                    v.nodes = [
                        z("@media", "(width >= ".concat(w, ")"), v.nodes)
                    ];
                }, {
                    compounds: 1
                });
                t.functional("min", (p, w)=>{
                    if (w.modifier) return null;
                    let v = m.get(w);
                    if (v === null) return null;
                    p.nodes = [
                        z("@media", "(width >= ".concat(v, ")"), p.nodes)
                    ];
                }, {
                    compounds: 1
                });
            }, (p, w)=>f(p, w, "asc", m)), t.suggest("min", ()=>Array.from(g.keys()).filter((p)=>p !== null));
        }
        {
            let g = r.namespace("--container"), m = new W((p)=>{
                switch(p.kind){
                    case "functional":
                        {
                            if (p.value === null) return null;
                            let w = null;
                            return p.value.kind === "arbitrary" ? w = p.value.value : p.value.kind === "named" && (w = r.resolveValue(p.value.value, [
                                "--container"
                            ])), !w || w.includes("var(") ? null : w;
                        }
                    case "static":
                    case "arbitrary":
                    case "compound":
                        return null;
                }
            });
            t.group(()=>{
                t.functional("@max", (p, w)=>{
                    let v = m.get(w);
                    if (v === null) return null;
                    p.nodes = [
                        z("@container", w.modifier ? "".concat(w.modifier.value, " (width < ").concat(v, ")") : "(width < ".concat(v, ")"), p.nodes)
                    ];
                }, {
                    compounds: 1
                });
            }, (p, w)=>f(p, w, "desc", m)), t.suggest("@max", ()=>Array.from(g.keys()).filter((p)=>p !== null)), t.group(()=>{
                t.functional("@", (p, w)=>{
                    let v = m.get(w);
                    if (v === null) return null;
                    p.nodes = [
                        z("@container", w.modifier ? "".concat(w.modifier.value, " (width >= ").concat(v, ")") : "(width >= ".concat(v, ")"), p.nodes)
                    ];
                }, {
                    compounds: 1
                }), t.functional("@min", (p, w)=>{
                    let v = m.get(w);
                    if (v === null) return null;
                    p.nodes = [
                        z("@container", w.modifier ? "".concat(w.modifier.value, " (width >= ").concat(v, ")") : "(width >= ".concat(v, ")"), p.nodes)
                    ];
                }, {
                    compounds: 1
                });
            }, (p, w)=>f(p, w, "asc", m)), t.suggest("@min", ()=>Array.from(g.keys()).filter((p)=>p !== null)), t.suggest("@", ()=>Array.from(g.keys()).filter((p)=>p !== null));
        }
    }
    return i("portrait", [
        "@media (orientation: portrait)"
    ]), i("landscape", [
        "@media (orientation: landscape)"
    ]), i("ltr", [
        '&:where(:dir(ltr), [dir="ltr"], [dir="ltr"] *)'
    ]), i("rtl", [
        '&:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *)'
    ]), i("dark", [
        "@media (prefers-color-scheme: dark)"
    ]), i("starting", [
        "@starting-style"
    ]), i("print", [
        "@media print"
    ]), i("forced-colors", [
        "@media (forced-colors: active)"
    ]), i("inverted-colors", [
        "@media (inverted-colors: inverted)"
    ]), i("pointer-none", [
        "@media (pointer: none)"
    ]), i("pointer-coarse", [
        "@media (pointer: coarse)"
    ]), i("pointer-fine", [
        "@media (pointer: fine)"
    ]), i("any-pointer-none", [
        "@media (any-pointer: none)"
    ]), i("any-pointer-coarse", [
        "@media (any-pointer: coarse)"
    ]), i("any-pointer-fine", [
        "@media (any-pointer: fine)"
    ]), i("noscript", [
        "@media (scripting: none)"
    ]), t;
}
function yr(r) {
    if (r.includes("=")) {
        let [t, ...i] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["b"])(r, "="), e = i.join("=").trim();
        if (e[0] === "'" || e[0] === '"') return r;
        if (e.length > 1) {
            let o = e[e.length - 1];
            if (e[e.length - 2] === " " && (o === "i" || o === "I" || o === "s" || o === "S")) return "".concat(t, '="').concat(e.slice(0, -2), '" ').concat(o);
        }
        return "".concat(t, '="').concat(e, '"');
    }
    return r;
}
function At(r, t) {
    j(r, (i, param)=>{
        let { replaceWith: e } = param;
        if (i.kind === "at-rule" && i.name === "@slot") e(t);
        else if (i.kind === "at-rule" && (i.name === "@keyframes" || i.name === "@property")) return Object.assign(i, F([
            z(i.name, i.params, i.nodes)
        ])), 1;
    });
}
function Ct(r, t) {
    let i = 0;
    return j(r, (e, param)=>{
        let { replaceWith: o } = param;
        if (e.kind !== "at-rule" || e.name !== "@variant") return;
        let s = B("&", e.nodes), l = e.params, d = t.parseVariant(l);
        if (d === null) throw new Error("Cannot use `@variant` with unknown variant: ".concat(l));
        if (Ce(s, d, t.variants) === null) throw new Error("Cannot use `@variant` with variant: ".concat(l));
        o(s), i |= 32;
    }), i;
}
function br(r) {
    let t = pr(r), i = kr(r), e = new W((u)=>nr(u, d)), o = new W((u)=>Array.from(ir(u, d))), s = new W((u)=>new W((f)=>{
            let g = xr(f, d, u);
            try {
                xe(g.map((param)=>{
                    let { node: m } = param;
                    return m;
                }), d);
            } catch (e) {
                return [];
            }
            return g;
        })), l = new W((u)=>{
        for (let f of qe(u))r.markUsedVariable(f);
    }), d = {
        theme: r,
        utilities: t,
        variants: i,
        invalidCandidates: new Set,
        important: !1,
        candidatesToCss (u) {
            let f = [];
            for (let g of u){
                let m = !1, { astNodes: p } = pe([
                    g
                ], this, {
                    onInvalidCandidate () {
                        m = !0;
                    }
                });
                p = ve(p, d, 0), p.length === 0 || m ? f.push(null) : f.push(ie(p));
            }
            return f;
        },
        getClassOrder (u) {
            return wr(this, u);
        },
        getClassList () {
            return hr(this);
        },
        getVariants () {
            return vr(this);
        },
        parseCandidate (u) {
            return o.get(u);
        },
        parseVariant (u) {
            return e.get(u);
        },
        compileAstNodes (u) {
            let f = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
            return s.get(f).get(u);
        },
        printCandidate (u) {
            return ar(d, u);
        },
        printVariant (u) {
            return He(u);
        },
        getVariantOrder () {
            let u = Array.from(e.values());
            u.sort((p, w)=>this.variants.compare(p, w));
            let f = new Map, g, m = 0;
            for (let p of u)p !== null && (g !== void 0 && this.variants.compare(g, p) !== 0 && m++, f.set(p, m), g = p);
            return f;
        },
        resolveThemeValue (u) {
            let f = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
            let g = u.lastIndexOf("/"), m = null;
            g !== -1 && (m = u.slice(g + 1).trim(), u = u.slice(0, g).trim());
            var _r_resolve;
            let p = (_r_resolve = r.resolve(null, [
                u
            ], f ? 1 : 0)) !== null && _r_resolve !== void 0 ? _r_resolve : void 0;
            return m && p ? Q(p, m) : p;
        },
        trackUsedVariables (u) {
            l.get(u);
        }
    };
    return d;
}
var Vt = [
    "container-type",
    "pointer-events",
    "visibility",
    "position",
    "inset",
    "inset-inline",
    "inset-block",
    "inset-inline-start",
    "inset-inline-end",
    "top",
    "right",
    "bottom",
    "left",
    "isolation",
    "z-index",
    "order",
    "grid-column",
    "grid-column-start",
    "grid-column-end",
    "grid-row",
    "grid-row-start",
    "grid-row-end",
    "float",
    "clear",
    "--tw-container-component",
    "margin",
    "margin-inline",
    "margin-block",
    "margin-inline-start",
    "margin-inline-end",
    "margin-top",
    "margin-right",
    "margin-bottom",
    "margin-left",
    "box-sizing",
    "display",
    "field-sizing",
    "aspect-ratio",
    "height",
    "max-height",
    "min-height",
    "width",
    "max-width",
    "min-width",
    "flex",
    "flex-shrink",
    "flex-grow",
    "flex-basis",
    "table-layout",
    "caption-side",
    "border-collapse",
    "border-spacing",
    "transform-origin",
    "translate",
    "--tw-translate-x",
    "--tw-translate-y",
    "--tw-translate-z",
    "scale",
    "--tw-scale-x",
    "--tw-scale-y",
    "--tw-scale-z",
    "rotate",
    "--tw-rotate-x",
    "--tw-rotate-y",
    "--tw-rotate-z",
    "--tw-skew-x",
    "--tw-skew-y",
    "transform",
    "animation",
    "cursor",
    "touch-action",
    "--tw-pan-x",
    "--tw-pan-y",
    "--tw-pinch-zoom",
    "resize",
    "scroll-snap-type",
    "--tw-scroll-snap-strictness",
    "scroll-snap-align",
    "scroll-snap-stop",
    "scroll-margin",
    "scroll-margin-inline",
    "scroll-margin-block",
    "scroll-margin-inline-start",
    "scroll-margin-inline-end",
    "scroll-margin-top",
    "scroll-margin-right",
    "scroll-margin-bottom",
    "scroll-margin-left",
    "scroll-padding",
    "scroll-padding-inline",
    "scroll-padding-block",
    "scroll-padding-inline-start",
    "scroll-padding-inline-end",
    "scroll-padding-top",
    "scroll-padding-right",
    "scroll-padding-bottom",
    "scroll-padding-left",
    "list-style-position",
    "list-style-type",
    "list-style-image",
    "appearance",
    "columns",
    "break-before",
    "break-inside",
    "break-after",
    "grid-auto-columns",
    "grid-auto-flow",
    "grid-auto-rows",
    "grid-template-columns",
    "grid-template-rows",
    "flex-direction",
    "flex-wrap",
    "place-content",
    "place-items",
    "align-content",
    "align-items",
    "justify-content",
    "justify-items",
    "gap",
    "column-gap",
    "row-gap",
    "--tw-space-x-reverse",
    "--tw-space-y-reverse",
    "divide-x-width",
    "divide-y-width",
    "--tw-divide-y-reverse",
    "divide-style",
    "divide-color",
    "place-self",
    "align-self",
    "justify-self",
    "overflow",
    "overflow-x",
    "overflow-y",
    "overscroll-behavior",
    "overscroll-behavior-x",
    "overscroll-behavior-y",
    "scroll-behavior",
    "border-radius",
    "border-start-radius",
    "border-end-radius",
    "border-top-radius",
    "border-right-radius",
    "border-bottom-radius",
    "border-left-radius",
    "border-start-start-radius",
    "border-start-end-radius",
    "border-end-end-radius",
    "border-end-start-radius",
    "border-top-left-radius",
    "border-top-right-radius",
    "border-bottom-right-radius",
    "border-bottom-left-radius",
    "border-width",
    "border-inline-width",
    "border-block-width",
    "border-inline-start-width",
    "border-inline-end-width",
    "border-top-width",
    "border-right-width",
    "border-bottom-width",
    "border-left-width",
    "border-style",
    "border-inline-style",
    "border-block-style",
    "border-inline-start-style",
    "border-inline-end-style",
    "border-top-style",
    "border-right-style",
    "border-bottom-style",
    "border-left-style",
    "border-color",
    "border-inline-color",
    "border-block-color",
    "border-inline-start-color",
    "border-inline-end-color",
    "border-top-color",
    "border-right-color",
    "border-bottom-color",
    "border-left-color",
    "background-color",
    "background-image",
    "--tw-gradient-position",
    "--tw-gradient-stops",
    "--tw-gradient-via-stops",
    "--tw-gradient-from",
    "--tw-gradient-from-position",
    "--tw-gradient-via",
    "--tw-gradient-via-position",
    "--tw-gradient-to",
    "--tw-gradient-to-position",
    "mask-image",
    "--tw-mask-top",
    "--tw-mask-top-from-color",
    "--tw-mask-top-from-position",
    "--tw-mask-top-to-color",
    "--tw-mask-top-to-position",
    "--tw-mask-right",
    "--tw-mask-right-from-color",
    "--tw-mask-right-from-position",
    "--tw-mask-right-to-color",
    "--tw-mask-right-to-position",
    "--tw-mask-bottom",
    "--tw-mask-bottom-from-color",
    "--tw-mask-bottom-from-position",
    "--tw-mask-bottom-to-color",
    "--tw-mask-bottom-to-position",
    "--tw-mask-left",
    "--tw-mask-left-from-color",
    "--tw-mask-left-from-position",
    "--tw-mask-left-to-color",
    "--tw-mask-left-to-position",
    "--tw-mask-linear",
    "--tw-mask-linear-position",
    "--tw-mask-linear-from-color",
    "--tw-mask-linear-from-position",
    "--tw-mask-linear-to-color",
    "--tw-mask-linear-to-position",
    "--tw-mask-radial",
    "--tw-mask-radial-shape",
    "--tw-mask-radial-size",
    "--tw-mask-radial-position",
    "--tw-mask-radial-from-color",
    "--tw-mask-radial-from-position",
    "--tw-mask-radial-to-color",
    "--tw-mask-radial-to-position",
    "--tw-mask-conic",
    "--tw-mask-conic-position",
    "--tw-mask-conic-from-color",
    "--tw-mask-conic-from-position",
    "--tw-mask-conic-to-color",
    "--tw-mask-conic-to-position",
    "box-decoration-break",
    "background-size",
    "background-attachment",
    "background-clip",
    "background-position",
    "background-repeat",
    "background-origin",
    "mask-composite",
    "mask-mode",
    "mask-type",
    "mask-size",
    "mask-clip",
    "mask-position",
    "mask-repeat",
    "mask-origin",
    "fill",
    "stroke",
    "stroke-width",
    "object-fit",
    "object-position",
    "padding",
    "padding-inline",
    "padding-block",
    "padding-inline-start",
    "padding-inline-end",
    "padding-top",
    "padding-right",
    "padding-bottom",
    "padding-left",
    "text-align",
    "text-indent",
    "vertical-align",
    "font-family",
    "font-size",
    "line-height",
    "font-weight",
    "letter-spacing",
    "text-wrap",
    "overflow-wrap",
    "word-break",
    "text-overflow",
    "hyphens",
    "white-space",
    "color",
    "text-transform",
    "font-style",
    "font-stretch",
    "font-variant-numeric",
    "text-decoration-line",
    "text-decoration-color",
    "text-decoration-style",
    "text-decoration-thickness",
    "text-underline-offset",
    "-webkit-font-smoothing",
    "placeholder-color",
    "caret-color",
    "accent-color",
    "color-scheme",
    "opacity",
    "background-blend-mode",
    "mix-blend-mode",
    "box-shadow",
    "--tw-shadow",
    "--tw-shadow-color",
    "--tw-ring-shadow",
    "--tw-ring-color",
    "--tw-inset-shadow",
    "--tw-inset-shadow-color",
    "--tw-inset-ring-shadow",
    "--tw-inset-ring-color",
    "--tw-ring-offset-width",
    "--tw-ring-offset-color",
    "outline",
    "outline-width",
    "outline-offset",
    "outline-color",
    "--tw-blur",
    "--tw-brightness",
    "--tw-contrast",
    "--tw-drop-shadow",
    "--tw-grayscale",
    "--tw-hue-rotate",
    "--tw-invert",
    "--tw-saturate",
    "--tw-sepia",
    "filter",
    "--tw-backdrop-blur",
    "--tw-backdrop-brightness",
    "--tw-backdrop-contrast",
    "--tw-backdrop-grayscale",
    "--tw-backdrop-hue-rotate",
    "--tw-backdrop-invert",
    "--tw-backdrop-opacity",
    "--tw-backdrop-saturate",
    "--tw-backdrop-sepia",
    "backdrop-filter",
    "transition-property",
    "transition-behavior",
    "transition-delay",
    "transition-duration",
    "transition-timing-function",
    "will-change",
    "contain",
    "content",
    "forced-color-adjust"
];
function pe(r, t) {
    let { onInvalidCandidate: i, respectImportant: e } = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    let o = new Map, s = [], l = new Map;
    for (let f of r){
        if (t.invalidCandidates.has(f)) {
            i === null || i === void 0 ? void 0 : i(f);
            continue;
        }
        let g = t.parseCandidate(f);
        if (g.length === 0) {
            i === null || i === void 0 ? void 0 : i(f);
            continue;
        }
        l.set(f, g);
    }
    let d = 0;
    (e !== null && e !== void 0 ? e : !0) && (d |= 1);
    let u = t.getVariantOrder();
    for (let [f, g] of l){
        let m = !1;
        for (let p of g){
            let w = t.compileAstNodes(p, d);
            if (w.length !== 0) {
                m = !0;
                for (let { node: v, propertySort: y1 } of w){
                    let x = 0n;
                    for (let S of p.variants)x |= 1n << BigInt(u.get(S));
                    o.set(v, {
                        properties: y1,
                        variants: x,
                        candidate: f
                    }), s.push(v);
                }
            }
        }
        m || (i === null || i === void 0 ? void 0 : i(f));
    }
    return s.sort((f, g)=>{
        let m = o.get(f), p = o.get(g);
        if (m.variants - p.variants !== 0n) return Number(m.variants - p.variants);
        let w = 0;
        for(; w < m.properties.order.length && w < p.properties.order.length && m.properties.order[w] === p.properties.order[w];)w += 1;
        var _m_properties_order_w, _p_properties_order_w;
        return ((_m_properties_order_w = m.properties.order[w]) !== null && _m_properties_order_w !== void 0 ? _m_properties_order_w : 1 / 0) - ((_p_properties_order_w = p.properties.order[w]) !== null && _p_properties_order_w !== void 0 ? _p_properties_order_w : 1 / 0) || p.properties.count - m.properties.count || Qe(m.candidate, p.candidate);
    }), {
        astNodes: s,
        nodeSorting: o
    };
}
function xr(r, t, i) {
    let e = ji(r, t);
    if (e.length === 0) return [];
    let o = t.important && !!(i & 1), s = [], l = ".".concat(fe(r.raw));
    for (let d of e){
        let u = Ui(d);
        (r.important || o) && Cr(d);
        let f = {
            kind: "rule",
            selector: l,
            nodes: d
        };
        for (let g of r.variants)if (Ce(f, g, t.variants) === null) return [];
        s.push({
            node: f,
            propertySort: u
        });
    }
    return s;
}
function Ce(r, t, i) {
    let e = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0;
    if (t.kind === "arbitrary") {
        if (t.relative && e === 0) return null;
        r.nodes = [
            Y(t.selector, r.nodes)
        ];
        return;
    }
    let { applyFn: o } = i.get(t.root);
    if (t.kind === "compound") {
        let l = z("@slot");
        if (Ce(l, t.variant, i, e + 1) === null || t.root === "not" && l.nodes.length > 1) return null;
        for (let u of l.nodes)if (u.kind !== "rule" && u.kind !== "at-rule" || o(u, t) === null) return null;
        j(l.nodes, (u)=>{
            if ((u.kind === "rule" || u.kind === "at-rule") && u.nodes.length <= 0) return u.nodes = r.nodes, 1;
        }), r.nodes = l.nodes;
        return;
    }
    if (o(r, t) === null) return null;
}
function Ar(r) {
    var _r_options;
    var _r_options_types;
    let t = (_r_options_types = (_r_options = r.options) === null || _r_options === void 0 ? void 0 : _r_options.types) !== null && _r_options_types !== void 0 ? _r_options_types : [];
    return t.length > 1 && t.includes("any");
}
function ji(r, t) {
    if (r.kind === "arbitrary") {
        let l = r.value;
        return r.modifier && (l = X(l, r.modifier, t.theme)), l === null ? [] : [
            [
                n(r.property, l)
            ]
        ];
    }
    var _t_utilities_get;
    let i = (_t_utilities_get = t.utilities.get(r.root)) !== null && _t_utilities_get !== void 0 ? _t_utilities_get : [], e = [], o = i.filter((l)=>!Ar(l));
    for (let l of o){
        if (l.kind !== r.kind) continue;
        let d = l.compileFn(r);
        if (d !== void 0) {
            if (d === null) return e;
            e.push(d);
        }
    }
    if (e.length > 0) return e;
    let s = i.filter((l)=>Ar(l));
    for (let l of s){
        if (l.kind !== r.kind) continue;
        let d = l.compileFn(r);
        if (d !== void 0) {
            if (d === null) return e;
            e.push(d);
        }
    }
    return e;
}
function Cr(r) {
    for (let t of r)t.kind !== "at-root" && (t.kind === "declaration" ? t.important = !0 : (t.kind === "rule" || t.kind === "at-rule") && Cr(t.nodes));
}
function Ui(r) {
    let t = new Set, i = 0, e = r.slice(), o = !1;
    for(; e.length > 0;){
        let s = e.shift();
        if (s.kind === "declaration") {
            if (s.value === void 0 || (i++, o)) continue;
            if (s.property === "--tw-sort") {
                var _s_value;
                let d = Vt.indexOf((_s_value = s.value) !== null && _s_value !== void 0 ? _s_value : "");
                if (d !== -1) {
                    t.add(d), o = !0;
                    continue;
                }
            }
            let l = Vt.indexOf(s.property);
            l !== -1 && t.add(l);
        } else if (s.kind === "rule" || s.kind === "at-rule") for (let l of s.nodes)e.push(l);
    }
    return {
        order: Array.from(t).sort((s, l)=>s - l),
        count: i
    };
}
function Ke(r, t) {
    let i = 0, e = Y("&", r), o = new Set, s = new W(()=>new Set), l = new W(()=>new Set);
    j([
        e
    ], (m, param)=>{
        let { parent: p, path: w } = param;
        if (m.kind === "at-rule") {
            if (m.name === "@keyframes") return j(m.nodes, (v)=>{
                if (v.kind === "at-rule" && v.name === "@apply") throw new Error("You cannot use `@apply` inside `@keyframes`.");
            }), 1;
            if (m.name === "@utility") {
                let v = m.params.replace(/-\*$/, "");
                l.get(v).add(m), j(m.nodes, (y1)=>{
                    if (!(y1.kind !== "at-rule" || y1.name !== "@apply")) {
                        o.add(m);
                        for (let x of Vr(y1, t))s.get(m).add(x);
                    }
                });
                return;
            }
            if (m.name === "@apply") {
                if (p === null) return;
                i |= 1, o.add(p);
                for (let v of Vr(m, t))for (let y1 of w)y1 !== m && o.has(y1) && s.get(y1).add(v);
            }
        }
    });
    let d = new Set, u = [], f = new Set;
    function g(m) {
        let p = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
        if (!d.has(m)) {
            if (f.has(m)) {
                let w = p[(p.indexOf(m) + 1) % p.length];
                throw m.kind === "at-rule" && m.name === "@utility" && w.kind === "at-rule" && w.name === "@utility" && j(m.nodes, (v)=>{
                    if (v.kind !== "at-rule" || v.name !== "@apply") return;
                    let y1 = v.params.split(/\s+/g);
                    for (let x of y1)for (let S of t.parseCandidate(x))switch(S.kind){
                        case "arbitrary":
                            break;
                        case "static":
                        case "functional":
                            if (w.params.replace(/-\*$/, "") === S.root) throw new Error("You cannot `@apply` the `".concat(x, "` utility here because it creates a circular dependency."));
                            break;
                        default:
                    }
                }), new Error("Circular dependency detected:\n\n".concat(ie([
                    m
                ]), "\nRelies on:\n\n").concat(ie([
                    w
                ])));
            }
            f.add(m);
            for (let w of s.get(m))for (let v of l.get(w))p.push(m), g(v, p), p.pop();
            d.add(m), f.delete(m), u.push(m);
        }
    }
    for (let m of o)g(m);
    for (let m of u)"nodes" in m && j(m.nodes, (p, param)=>{
        let { replaceWith: w } = param;
        if (p.kind !== "at-rule" || p.name !== "@apply") return;
        let v = p.params.split(/(\s+)/g), y1 = {}, x = 0;
        for (let [S, C] of v.entries())S % 2 === 0 && (y1[C] = x), x += C.length;
        {
            let S = Object.keys(y1), C = pe(S, t, {
                respectImportant: !1,
                onInvalidCandidate: (_)=>{
                    if (t.theme.prefix && !_.startsWith(t.theme.prefix)) throw new Error("Cannot apply unprefixed utility class `".concat(_, "`. Did you mean `").concat(t.theme.prefix, ":").concat(_, "`?"));
                    if (t.invalidCandidates.has(_)) throw new Error("Cannot apply utility class `".concat(_, "` because it has been explicitly disabled: https://tailwindcss.com/docs/detecting-classes-in-source-files#explicitly-excluding-classes"));
                    let D = (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["b"])(_, ":");
                    if (D.length > 1) {
                        let G = D.pop();
                        if (t.candidatesToCss([
                            G
                        ])[0]) {
                            let K = t.candidatesToCss(D.map((q)=>"".concat(q, ":[--tw-variant-check:1]"))), U = D.filter((q, M)=>K[M] === null);
                            if (U.length > 0) {
                                if (U.length === 1) throw new Error("Cannot apply utility class `".concat(_, "` because the ").concat(U.map((q)=>"`".concat(q, "`")), " variant does not exist."));
                                {
                                    let q = new Intl.ListFormat("en", {
                                        style: "long",
                                        type: "conjunction"
                                    });
                                    throw new Error("Cannot apply utility class `".concat(_, "` because the ").concat(q.format(U.map((M)=>"`".concat(M, "`"))), " variants do not exist."));
                                }
                            }
                        }
                    }
                    throw t.theme.size === 0 ? new Error("Cannot apply unknown utility class `".concat(_, "`. Are you using CSS modules or similar and missing `@reference`? https://tailwindcss.com/docs/functions-and-directives#reference-directive")) : new Error("Cannot apply unknown utility class `".concat(_, "`"));
                }
            }), b = p.src, O = C.astNodes.map((_)=>{
                var _C_nodeSorting_get;
                let D = (_C_nodeSorting_get = C.nodeSorting.get(_)) === null || _C_nodeSorting_get === void 0 ? void 0 : _C_nodeSorting_get.candidate, G = D ? y1[D] : void 0;
                if (_ = structuredClone(_), !b || !D || G === void 0) return j([
                    _
                ], (U)=>{
                    U.src = b;
                }), _;
                let K = [
                    b[0],
                    b[1],
                    b[2]
                ];
                return K[1] += 7 + G, K[2] = K[1] + D.length, j([
                    _
                ], (U)=>{
                    U.src = K;
                }), _;
            }), R = [];
            for (let _ of O)if (_.kind === "rule") for (let D of _.nodes)R.push(D);
            else R.push(_);
            w(R);
        }
    });
    return i;
}
function* Vr(r, t) {
    for (let i of r.params.split(/\s+/g))for (let e of t.parseCandidate(i))switch(e.kind){
        case "arbitrary":
            break;
        case "static":
        case "functional":
            yield e.root;
            break;
        default:
    }
}
async function $t(r, t, i) {
    let e = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0, o = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : !1;
    let s = 0, l = [];
    return j(r, (d, param)=>{
        let { replaceWith: u } = param;
        if (d.kind === "at-rule" && (d.name === "@import" || d.name === "@reference")) {
            let f = Ii(J(d.params));
            if (f === null) return;
            d.name === "@reference" && (f.media = "reference"), s |= 2;
            let { uri: g, layer: m, media: p, supports: w } = f;
            if (g.startsWith("data:") || g.startsWith("http://") || g.startsWith("https://")) return;
            let v = ae({}, []);
            return l.push((async ()=>{
                if (e > 100) throw new Error("Exceeded maximum recursion depth while resolving `".concat(g, "` in `").concat(t, "`)"));
                let y1 = await i(g, t), x = me(y1.content, {
                    from: o ? y1.path : void 0
                });
                await $t(x, y1.base, i, e + 1, o), v.nodes = Li(d, [
                    ae({
                        base: y1.base
                    }, x)
                ], m, p, w);
            })()), u(v), 1;
        }
    }), l.length > 0 && await Promise.all(l), s;
}
function Ii(r) {
    let t, i = null, e = null, o = null;
    for(let s = 0; s < r.length; s++){
        let l = r[s];
        if (l.kind !== "separator") {
            if (l.kind === "word" && !t) {
                if (!l.value || l.value[0] !== '"' && l.value[0] !== "'") return null;
                t = l.value.slice(1, -1);
                continue;
            }
            if (l.kind === "function" && l.value.toLowerCase() === "url" || !t) return null;
            if ((l.kind === "word" || l.kind === "function") && l.value.toLowerCase() === "layer") {
                if (i) return null;
                if (o) throw new Error("`layer(\u2026)` in an `@import` should come before any other functions or conditions");
                "nodes" in l ? i = Z(l.nodes) : i = "";
                continue;
            }
            if (l.kind === "function" && l.value.toLowerCase() === "supports") {
                if (o) return null;
                o = Z(l.nodes);
                continue;
            }
            e = Z(r.slice(s));
            break;
        }
    }
    return t ? {
        uri: t,
        layer: i,
        media: e,
        supports: o
    } : null;
}
function Li(r, t, i, e, o) {
    let s = t;
    if (i !== null) {
        let l = z("@layer", i, s);
        l.src = r.src, s = [
            l
        ];
    }
    if (e !== null) {
        let l = z("@media", e, s);
        l.src = r.src, s = [
            l
        ];
    }
    if (o !== null) {
        let l = z("@supports", o[0] === "(" ? o : "(".concat(o, ")"), s);
        l.src = r.src, s = [
            l
        ];
    }
    return s;
}
function Ve(r) {
    let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
    var _r__t;
    return Array.isArray(r) && r.length === 2 && typeof r[1] == "object" && typeof r[1] !== null ? t ? (_r__t = r[1][t]) !== null && _r__t !== void 0 ? _r__t : null : r[0] : Array.isArray(r) && t === null ? r.join(", ") : typeof r == "string" && t === null ? r : null;
}
function $r(r, param, i) {
    let { theme: t } = param;
    for (let e of i){
        let o = et([
            e
        ]);
        o && r.theme.clearNamespace("--".concat(o), 4);
    }
    for (let [e, o] of Fi(t)){
        if (typeof o != "string" && typeof o != "number") continue;
        if (typeof o == "string" && (o = o.replace(/<alpha-value>/g, "1")), e[0] === "opacity" && (typeof o == "number" || typeof o == "string")) {
            let l = typeof o == "string" ? parseFloat(o) : o;
            l >= 0 && l <= 1 && (o = l * 100 + "%");
        }
        let s = et(e);
        s && r.theme.add("--".concat(s), "" + o, 7);
    }
    if (Object.hasOwn(t, "fontFamily")) {
        let e = 5;
        {
            let o = Ve(t.fontFamily.sans);
            var _Ve, _Ve1;
            o && r.theme.hasDefault("--font-sans") && (r.theme.add("--default-font-family", o, e), r.theme.add("--default-font-feature-settings", (_Ve = Ve(t.fontFamily.sans, "fontFeatureSettings")) !== null && _Ve !== void 0 ? _Ve : "normal", e), r.theme.add("--default-font-variation-settings", (_Ve1 = Ve(t.fontFamily.sans, "fontVariationSettings")) !== null && _Ve1 !== void 0 ? _Ve1 : "normal", e));
        }
        {
            let o = Ve(t.fontFamily.mono);
            var _Ve2, _Ve3;
            o && r.theme.hasDefault("--font-mono") && (r.theme.add("--default-mono-font-family", o, e), r.theme.add("--default-mono-font-feature-settings", (_Ve2 = Ve(t.fontFamily.mono, "fontFeatureSettings")) !== null && _Ve2 !== void 0 ? _Ve2 : "normal", e), r.theme.add("--default-mono-font-variation-settings", (_Ve3 = Ve(t.fontFamily.mono, "fontVariationSettings")) !== null && _Ve3 !== void 0 ? _Ve3 : "normal", e));
        }
    }
    return t;
}
function Fi(r) {
    let t = [];
    return Nr(r, [], (i, e)=>{
        if (Mi(i)) return t.push([
            e,
            i
        ]), 1;
        if (Wi(i)) {
            t.push([
                e,
                i[0]
            ]);
            for (let o of Reflect.ownKeys(i[1]))t.push([
                [
                    ...e,
                    "-".concat(o)
                ],
                i[1][o]
            ]);
            return 1;
        }
        if (Array.isArray(i) && i.every((o)=>typeof o == "string")) return e[0] === "fontSize" ? (t.push([
            e,
            i[0]
        ]), i.length >= 2 && t.push([
            [
                ...e,
                "-line-height"
            ],
            i[1]
        ])) : t.push([
            e,
            i.join(", ")
        ]), 1;
    }), t;
}
var zi = /^[a-zA-Z0-9-_%/\.]+$/;
function et(r) {
    if (r[0] === "container") return null;
    r = structuredClone(r), r[0] === "animation" && (r[0] = "animate"), r[0] === "aspectRatio" && (r[0] = "aspect"), r[0] === "borderRadius" && (r[0] = "radius"), r[0] === "boxShadow" && (r[0] = "shadow"), r[0] === "colors" && (r[0] = "color"), r[0] === "containers" && (r[0] = "container"), r[0] === "fontFamily" && (r[0] = "font"), r[0] === "fontSize" && (r[0] = "text"), r[0] === "letterSpacing" && (r[0] = "tracking"), r[0] === "lineHeight" && (r[0] = "leading"), r[0] === "maxWidth" && (r[0] = "container"), r[0] === "screens" && (r[0] = "breakpoint"), r[0] === "transitionTimingFunction" && (r[0] = "ease");
    for (let t of r)if (!zi.test(t)) return null;
    return r.map((t, i, e)=>t === "1" && i !== e.length - 1 ? "" : t).map((t)=>t.replaceAll(".", "_").replace(/([a-z])([A-Z])/g, (i, e, o)=>"".concat(e, "-").concat(o.toLowerCase()))).filter((t, i)=>t !== "DEFAULT" || i !== r.length - 1).join("-");
}
function Mi(r) {
    return typeof r == "number" || typeof r == "string";
}
function Wi(r) {
    if (!Array.isArray(r) || r.length !== 2 || typeof r[0] != "string" && typeof r[0] != "number" || r[1] === void 0 || r[1] === null || typeof r[1] != "object") return !1;
    for (let t of Reflect.ownKeys(r[1]))if (typeof t != "string" || typeof r[1][t] != "string" && typeof r[1][t] != "number") return !1;
    return !0;
}
function Nr(r) {
    let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [], i = arguments.length > 2 ? arguments[2] : void 0;
    for (let e of Reflect.ownKeys(r)){
        let o = r[e];
        if (o == null) continue;
        var _i;
        let s = [
            ...t,
            e
        ], l = (_i = i(o, s)) !== null && _i !== void 0 ? _i : 0;
        if (l !== 1) {
            if (l === 2) return 2;
            if (!(!Array.isArray(o) && typeof o != "object") && Nr(o, s, i) === 2) return 2;
        }
    }
}
function tt(r) {
    let t = [];
    for (let i of (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["b"])(r, ".")){
        if (!i.includes("[")) {
            t.push(i);
            continue;
        }
        let e = 0;
        for(;;){
            let o = i.indexOf("[", e), s = i.indexOf("]", o);
            if (o === -1 || s === -1) break;
            o > e && t.push(i.slice(e, o)), t.push(i.slice(o + 1, s)), e = s + 1;
        }
        e <= i.length - 1 && t.push(i.slice(e));
    }
    return t;
}
function $e(r) {
    if (Object.prototype.toString.call(r) !== "[object Object]") return !1;
    let t = Object.getPrototypeOf(r);
    return t === null || Object.getPrototypeOf(t) === null;
}
function Oe(r, t, i) {
    let e = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : [];
    for (let o of t)if (o != null) for (let s of Reflect.ownKeys(o)){
        e.push(s);
        let l = i(r[s], o[s], e);
        l !== void 0 ? r[s] = l : !$e(r[s]) || !$e(o[s]) ? r[s] = o[s] : r[s] = Oe({}, [
            r[s],
            o[s]
        ], i, e), e.pop();
    }
    return r;
}
function rt(r, t, i) {
    return function(o, s) {
        let l = o.lastIndexOf("/"), d = null;
        l !== -1 && (d = o.slice(l + 1).trim(), o = o.slice(0, l).trim());
        let u = (()=>{
            var _t, _Sr;
            let f = tt(o), [g, m] = Bi(r.theme, f), p = i((_Sr = Sr((_t = t()) !== null && _t !== void 0 ? _t : {}, f)) !== null && _Sr !== void 0 ? _Sr : null);
            if (typeof p == "string" && (p = p.replace("<alpha-value>", "1")), typeof g != "object") return typeof m != "object" && m & 4 ? p !== null && p !== void 0 ? p : g : g;
            if (p !== null && typeof p == "object" && !Array.isArray(p)) {
                var _p___CSS_VALUES__;
                let w = Oe({}, [
                    p
                ], (v, y1)=>y1);
                if (g === null && Object.hasOwn(p, "__CSS_VALUES__")) {
                    let v = {};
                    for(let y1 in p.__CSS_VALUES__)v[y1] = p[y1], delete w[y1];
                    g = v;
                }
                for(let v in g)v !== "__CSS_VALUES__" && ((p === null || p === void 0 ? void 0 : (_p___CSS_VALUES__ = p.__CSS_VALUES__) === null || _p___CSS_VALUES__ === void 0 ? void 0 : _p___CSS_VALUES__[v]) & 4 && Sr(w, v.split("-")) !== void 0 || (w[ge(v)] = g[v]));
                return w;
            }
            if (Array.isArray(g) && Array.isArray(m) && Array.isArray(p)) {
                let w = g[0], v = g[1];
                var _p_;
                m[0] & 4 && (w = (_p_ = p[0]) !== null && _p_ !== void 0 ? _p_ : w);
                var _p__y;
                for (let y1 of Object.keys(v))m[1][y1] & 4 && (v[y1] = (_p__y = p[1][y1]) !== null && _p__y !== void 0 ? _p__y : v[y1]);
                return [
                    w,
                    v
                ];
            }
            return g !== null && g !== void 0 ? g : p;
        })();
        return d && typeof u == "string" && (u = Q(u, d)), u !== null && u !== void 0 ? u : s;
    };
}
function Bi(r, t) {
    if (t.length === 1 && t[0].startsWith("--")) return [
        r.get([
            t[0]
        ]),
        r.getOptions(t[0])
    ];
    let i = et(t), e = new Map, o = new W(()=>new Map), s = r.namespace("--".concat(i));
    if (s.size === 0) return [
        null,
        0
    ];
    let l = new Map;
    for (let [g, m] of s){
        if (!g || !g.includes("--")) {
            e.set(g, m), l.set(g, r.getOptions(g ? "--".concat(i, "-").concat(g) : "--".concat(i)));
            continue;
        }
        let p = g.indexOf("--"), w = g.slice(0, p), v = g.slice(p + 2);
        v = v.replace(/-([a-z])/g, (y1, x)=>x.toUpperCase()), o.get(w === "" ? null : w).set(v, [
            m,
            r.getOptions("--".concat(i).concat(g))
        ]);
    }
    let d = r.getOptions("--".concat(i));
    for (let [g, m] of o){
        let p = e.get(g);
        if (typeof p != "string") continue;
        let w = {}, v = {};
        for (let [y1, [x, S]] of m)w[y1] = x, v[y1] = S;
        e.set(g, [
            p,
            w
        ]), l.set(g, [
            d,
            v
        ]);
    }
    let u = {}, f = {};
    for (let [g, m] of e)Tr(u, [
        g !== null && g !== void 0 ? g : "DEFAULT"
    ], m);
    for (let [g, m] of l)Tr(f, [
        g !== null && g !== void 0 ? g : "DEFAULT"
    ], m);
    var _u_DEFAULT, _f_DEFAULT, _f_DEFAULT1;
    return t[t.length - 1] === "DEFAULT" ? [
        (_u_DEFAULT = u === null || u === void 0 ? void 0 : u.DEFAULT) !== null && _u_DEFAULT !== void 0 ? _u_DEFAULT : null,
        (_f_DEFAULT = f.DEFAULT) !== null && _f_DEFAULT !== void 0 ? _f_DEFAULT : 0
    ] : "DEFAULT" in u && Object.keys(u).length === 1 ? [
        u.DEFAULT,
        (_f_DEFAULT1 = f.DEFAULT) !== null && _f_DEFAULT1 !== void 0 ? _f_DEFAULT1 : 0
    ] : (u.__CSS_VALUES__ = f, [
        u,
        f
    ]);
}
function Sr(r, t) {
    for(let i = 0; i < t.length; ++i){
        let e = t[i];
        if ((r === null || r === void 0 ? void 0 : r[e]) === void 0) {
            if (t[i + 1] === void 0) return;
            t[i + 1] = "".concat(e, "-").concat(t[i + 1]);
            continue;
        }
        r = r[e];
    }
    return r;
}
function Tr(r, t, i) {
    for (let e of t.slice(0, -1))r[e] === void 0 && (r[e] = {}), r = r[e];
    r[t[t.length - 1]] = i;
}
function qi(r) {
    return {
        kind: "combinator",
        value: r
    };
}
function Gi(r, t) {
    return {
        kind: "function",
        value: r,
        nodes: t
    };
}
function _e1(r) {
    return {
        kind: "selector",
        value: r
    };
}
function Ji(r) {
    return {
        kind: "separator",
        value: r
    };
}
function Hi(r) {
    return {
        kind: "value",
        value: r
    };
}
function De(r, t) {
    let i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
    for(let e = 0; e < r.length; e++){
        var _t;
        let o = r[e], s = !1, l = 0, d = (_t = t(o, {
            parent: i,
            replaceWith (u) {
                s || (s = !0, Array.isArray(u) ? u.length === 0 ? (r.splice(e, 1), l = 0) : u.length === 1 ? (r[e] = u[0], l = 1) : (r.splice(e, 1, ...u), l = u.length) : (r[e] = u, l = 1));
            }
        })) !== null && _t !== void 0 ? _t : 0;
        if (s) {
            d === 0 ? e-- : e += l - 1;
            continue;
        }
        if (d === 2) return 2;
        if (d !== 1 && o.kind === "function" && De(o.nodes, t, o) === 2) return 2;
    }
}
function je(r) {
    let t = "";
    for (let i of r)switch(i.kind){
        case "combinator":
        case "selector":
        case "separator":
        case "value":
            {
                t += i.value;
                break;
            }
        case "function":
            t += i.value + "(" + je(i.nodes) + ")";
    }
    return t;
}
var Er = 92, Yi = 93, Rr = 41, Zi = 58, Pr = 44, Qi = 34, Xi = 46, Kr = 62, Or = 10, en = 35, _r1 = 91, Dr = 40, jr = 43, tn = 39, Ur = 32, Ir = 9, Lr = 126;
function it(r) {
    r = r.replaceAll("\r\n", "\n");
    let t = [], i = [], e = null, o = "", s;
    for(let l = 0; l < r.length; l++){
        let d = r.charCodeAt(l);
        switch(d){
            case Pr:
            case Kr:
            case Or:
            case Ur:
            case jr:
            case Ir:
            case Lr:
                {
                    if (o.length > 0) {
                        let p = _e1(o);
                        e ? e.nodes.push(p) : t.push(p), o = "";
                    }
                    let u = l, f = l + 1;
                    for(; f < r.length && (s = r.charCodeAt(f), !(s !== Pr && s !== Kr && s !== Or && s !== Ur && s !== jr && s !== Ir && s !== Lr)); f++);
                    l = f - 1;
                    let g = r.slice(u, f), m = g.trim() === "," ? Ji(g) : qi(g);
                    e ? e.nodes.push(m) : t.push(m);
                    break;
                }
            case Dr:
                {
                    let u = Gi(o, []);
                    if (o = "", u.value !== ":not" && u.value !== ":where" && u.value !== ":has" && u.value !== ":is") {
                        let f = l + 1, g = 0;
                        for(let p = l + 1; p < r.length; p++){
                            if (s = r.charCodeAt(p), s === Dr) {
                                g++;
                                continue;
                            }
                            if (s === Rr) {
                                if (g === 0) {
                                    l = p;
                                    break;
                                }
                                g--;
                            }
                        }
                        let m = l;
                        u.nodes.push(Hi(r.slice(f, m))), o = "", l = m, e ? e.nodes.push(u) : t.push(u);
                        break;
                    }
                    e ? e.nodes.push(u) : t.push(u), i.push(u), e = u;
                    break;
                }
            case Rr:
                {
                    let u = i.pop();
                    if (o.length > 0) {
                        let f = _e1(o);
                        u.nodes.push(f), o = "";
                    }
                    i.length > 0 ? e = i[i.length - 1] : e = null;
                    break;
                }
            case Xi:
            case Zi:
            case en:
                {
                    if (o.length > 0) {
                        let u = _e1(o);
                        e ? e.nodes.push(u) : t.push(u);
                    }
                    o = String.fromCharCode(d);
                    break;
                }
            case _r1:
                {
                    if (o.length > 0) {
                        let g = _e1(o);
                        e ? e.nodes.push(g) : t.push(g);
                    }
                    o = "";
                    let u = l, f = 0;
                    for(let g = l + 1; g < r.length; g++){
                        if (s = r.charCodeAt(g), s === _r1) {
                            f++;
                            continue;
                        }
                        if (s === Yi) {
                            if (f === 0) {
                                l = g;
                                break;
                            }
                            f--;
                        }
                    }
                    o += r.slice(u, l + 1);
                    break;
                }
            case tn:
            case Qi:
                {
                    let u = l;
                    for(let f = l + 1; f < r.length; f++)if (s = r.charCodeAt(f), s === Er) f += 1;
                    else if (s === d) {
                        l = f;
                        break;
                    }
                    o += r.slice(u, l + 1);
                    break;
                }
            case Er:
                {
                    let u = r.charCodeAt(l + 1);
                    o += String.fromCharCode(d) + String.fromCharCode(u), l += 1;
                    break;
                }
            default:
                o += String.fromCharCode(d);
        }
    }
    return o.length > 0 && t.push(_e1(o)), t;
}
var Fr = /^[a-z@][a-zA-Z0-9/%._-]*$/;
function Nt(param) {
    let { designSystem: r, ast: t, resolvedConfig: i, featuresRef: e, referenceMode: o, src: s } = param;
    let l = {
        addBase (d) {
            if (o) return;
            let u = le(d);
            e.current |= xe(u, r);
            let f = z("@layer", "base", u);
            j([
                f
            ], (g)=>{
                g.src = s;
            }), t.push(f);
        },
        addVariant (d, u) {
            if (!Xe.test(d)) throw new Error("`addVariant('".concat(d, "')` defines an invalid variant name. Variants should only contain alphanumeric, dashes, or underscore characters and start with a lowercase letter or number."));
            if (typeof u == "string") {
                if (u.includes(":merge(")) return;
            } else if (Array.isArray(u)) {
                if (u.some((g)=>g.includes(":merge("))) return;
            } else if (typeof u == "object") {
                let g = function(m, p) {
                    return Object.entries(m).some((param)=>{
                        let [w, v] = param;
                        return w.includes(p) || typeof v == "object" && g(v, p);
                    });
                };
                var f = g;
                if (g(u, ":merge(")) return;
            }
            typeof u == "string" || Array.isArray(u) ? r.variants.static(d, (g)=>{
                g.nodes = zr(u, g.nodes);
            }, {
                compounds: ye(typeof u == "string" ? [
                    u
                ] : u)
            }) : typeof u == "object" && r.variants.fromAst(d, le(u), r);
        },
        matchVariant (d, u, f) {
            function g(p, w, v) {
                var _w_value;
                let y1 = u(p, {
                    modifier: (_w_value = w === null || w === void 0 ? void 0 : w.value) !== null && _w_value !== void 0 ? _w_value : null
                });
                return zr(y1, v);
            }
            try {
                let p = u("a", {
                    modifier: null
                });
                if (typeof p == "string" && p.includes(":merge(")) return;
                if (Array.isArray(p) && p.some((w)=>w.includes(":merge("))) return;
            } catch (e) {}
            var _f_values;
            let m = Object.keys((_f_values = f === null || f === void 0 ? void 0 : f.values) !== null && _f_values !== void 0 ? _f_values : {});
            r.variants.group(()=>{
                r.variants.functional(d, (p, w)=>{
                    if (!w.value) {
                        if ((f === null || f === void 0 ? void 0 : f.values) && "DEFAULT" in f.values) {
                            p.nodes = g(f.values.DEFAULT, w.modifier, p.nodes);
                            return;
                        }
                        return null;
                    }
                    if (w.value.kind === "arbitrary") p.nodes = g(w.value.value, w.modifier, p.nodes);
                    else if (w.value.kind === "named" && (f === null || f === void 0 ? void 0 : f.values)) {
                        let v = f.values[w.value.value];
                        if (typeof v != "string") return null;
                        p.nodes = g(v, w.modifier, p.nodes);
                    } else return null;
                });
            }, (p, w)=>{
                var _f_values, _f_values1, _p_modifier, _w_modifier;
                if (p.kind !== "functional" || w.kind !== "functional") return 0;
                var _f_values_v, _f_values_y;
                let v = p.value ? p.value.value : "DEFAULT", y1 = w.value ? w.value.value : "DEFAULT", x = (_f_values_v = f === null || f === void 0 ? void 0 : (_f_values = f.values) === null || _f_values === void 0 ? void 0 : _f_values[v]) !== null && _f_values_v !== void 0 ? _f_values_v : v, S = (_f_values_y = f === null || f === void 0 ? void 0 : (_f_values1 = f.values) === null || _f_values1 === void 0 ? void 0 : _f_values1[y1]) !== null && _f_values_y !== void 0 ? _f_values_y : y1;
                var _p_modifier_value, _w_modifier_value;
                if (f && typeof f.sort == "function") return f.sort({
                    value: x,
                    modifier: (_p_modifier_value = (_p_modifier = p.modifier) === null || _p_modifier === void 0 ? void 0 : _p_modifier.value) !== null && _p_modifier_value !== void 0 ? _p_modifier_value : null
                }, {
                    value: S,
                    modifier: (_w_modifier_value = (_w_modifier = w.modifier) === null || _w_modifier === void 0 ? void 0 : _w_modifier.value) !== null && _w_modifier_value !== void 0 ? _w_modifier_value : null
                });
                let C = m.indexOf(v), b = m.indexOf(y1);
                return C = C === -1 ? m.length : C, b = b === -1 ? m.length : b, C !== b ? C - b : x < S ? -1 : 1;
            }), r.variants.suggest(d, ()=>{
                var _f_values;
                return Object.keys((_f_values = f === null || f === void 0 ? void 0 : f.values) !== null && _f_values !== void 0 ? _f_values : {}).filter((p)=>p !== "DEFAULT");
            });
        },
        addUtilities (d) {
            d = Array.isArray(d) ? d : [
                d
            ];
            let u = d.flatMap((g)=>Object.entries(g));
            u = u.flatMap((param)=>{
                let [g, m] = param;
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["b"])(g, ",").map((p)=>[
                        p.trim(),
                        m
                    ]);
            });
            let f = new W(()=>[]);
            for (let [g, m] of u){
                if (g.startsWith("@keyframes ")) {
                    if (!o) {
                        let v = Y(g, le(m));
                        j([
                            v
                        ], (y1)=>{
                            y1.src = s;
                        }), t.push(v);
                    }
                    continue;
                }
                let p = it(g), w = !1;
                if (De(p, (v)=>{
                    if (v.kind === "selector" && v.value[0] === "." && Fr.test(v.value.slice(1))) {
                        let y1 = v.value;
                        v.value = "&";
                        let x = je(p), S = y1.slice(1), C = x === "&" ? le(m) : [
                            Y(x, le(m))
                        ];
                        f.get(S).push(...C), w = !0, v.value = y1;
                        return;
                    }
                    if (v.kind === "function" && v.value === ":not") return 1;
                }), !w) throw new Error("`addUtilities({ '".concat(g, "' : … })` defines an invalid utility selector. Utilities must be a single class name and start with a lowercase letter, eg. `.scrollbar-none`."));
            }
            for (let [g, m] of f)r.theme.prefix && j(m, (p)=>{
                if (p.kind === "rule") {
                    let w = it(p.selector);
                    De(w, (v)=>{
                        v.kind === "selector" && v.value[0] === "." && (v.value = ".".concat(r.theme.prefix, "\\:").concat(v.value.slice(1)));
                    }), p.selector = je(w);
                }
            }), r.utilities.static(g, (p)=>{
                let w = structuredClone(m);
                return Mr(w, g, p.raw), e.current |= Ke(w, r), w;
            });
        },
        matchUtilities (d, u) {
            let f = (u === null || u === void 0 ? void 0 : u.type) ? Array.isArray(u === null || u === void 0 ? void 0 : u.type) ? u.type : [
                u.type
            ] : [
                "any"
            ];
            for (let [m, p] of Object.entries(d)){
                let w = function(param) {
                    let { negative: v } = param;
                    return (y1)=>{
                        var _y_value, _y_value1;
                        if (((_y_value = y1.value) === null || _y_value === void 0 ? void 0 : _y_value.kind) === "arbitrary" && f.length > 0 && !f.includes("any") && (y1.value.dataType && !f.includes(y1.value.dataType) || !y1.value.dataType && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"])(y1.value.value, f))) return;
                        let x = f.includes("color"), S = null, C = !1;
                        {
                            var _u_values;
                            let R = (_u_values = u === null || u === void 0 ? void 0 : u.values) !== null && _u_values !== void 0 ? _u_values : {};
                            var _R___BARE_VALUE__, _ref, _R_DEFAULT;
                            x && (R = Object.assign({
                                inherit: "inherit",
                                transparent: "transparent",
                                current: "currentcolor"
                            }, R)), y1.value ? y1.value.kind === "arbitrary" ? S = y1.value.value : y1.value.fraction && R[y1.value.fraction] ? (S = R[y1.value.fraction], C = !0) : R[y1.value.value] ? S = R[y1.value.value] : R.__BARE_VALUE__ && (S = (_R___BARE_VALUE__ = R.__BARE_VALUE__(y1.value)) !== null && _R___BARE_VALUE__ !== void 0 ? _R___BARE_VALUE__ : null, C = (_ref = y1.value.fraction !== null && (S === null || S === void 0 ? void 0 : S.includes("/"))) !== null && _ref !== void 0 ? _ref : !1) : S = (_R_DEFAULT = R.DEFAULT) !== null && _R_DEFAULT !== void 0 ? _R_DEFAULT : null;
                        }
                        if (S === null) return;
                        let b;
                        {
                            var _u_modifiers;
                            let R = (_u_modifiers = u === null || u === void 0 ? void 0 : u.modifiers) !== null && _u_modifiers !== void 0 ? _u_modifiers : null;
                            y1.modifier ? R === "any" || y1.modifier.kind === "arbitrary" ? b = y1.modifier.value : (R === null || R === void 0 ? void 0 : R[y1.modifier.value]) ? b = R[y1.modifier.value] : x && !Number.isNaN(Number(y1.modifier.value)) ? b = "".concat(y1.modifier.value, "%") : b = null : b = null;
                        }
                        if (y1.modifier && b === null && !C) return ((_y_value1 = y1.value) === null || _y_value1 === void 0 ? void 0 : _y_value1.kind) === "arbitrary" ? null : void 0;
                        x && b !== null && (S = Q(S, b)), v && (S = "calc(".concat(S, " * -1)"));
                        let O = le(p(S, {
                            modifier: b
                        }));
                        return Mr(O, m, y1.raw), e.current |= Ke(O, r), O;
                    };
                };
                var g = w;
                if (!Fr.test(m)) throw new Error("`matchUtilities({ '".concat(m, "' : … })` defines an invalid utility name. Utilities should be alphanumeric and start with a lowercase letter, eg. `scrollbar`."));
                (u === null || u === void 0 ? void 0 : u.supportsNegativeValues) && r.utilities.functional("-".concat(m), w({
                    negative: !0
                }), {
                    types: f
                }), r.utilities.functional(m, w({
                    negative: !1
                }), {
                    types: f
                }), r.utilities.suggest(m, ()=>{
                    var _u_values;
                    let v = (_u_values = u === null || u === void 0 ? void 0 : u.values) !== null && _u_values !== void 0 ? _u_values : {}, y1 = new Set(Object.keys(v));
                    y1.delete("__BARE_VALUE__"), y1.delete("__CSS_VALUES__"), y1.has("DEFAULT") && (y1.delete("DEFAULT"), y1.add(null));
                    var _u_modifiers;
                    let x = (_u_modifiers = u === null || u === void 0 ? void 0 : u.modifiers) !== null && _u_modifiers !== void 0 ? _u_modifiers : {}, S = x === "any" ? [] : Object.keys(x);
                    var _u_supportsNegativeValues;
                    return [
                        {
                            supportsNegative: (_u_supportsNegativeValues = u === null || u === void 0 ? void 0 : u.supportsNegativeValues) !== null && _u_supportsNegativeValues !== void 0 ? _u_supportsNegativeValues : !1,
                            values: Array.from(y1),
                            modifiers: S
                        }
                    ];
                });
            }
        },
        addComponents (d, u) {
            this.addUtilities(d, u);
        },
        matchComponents (d, u) {
            this.matchUtilities(d, u);
        },
        theme: rt(r, ()=>{
            var _i_theme;
            return (_i_theme = i.theme) !== null && _i_theme !== void 0 ? _i_theme : {};
        }, (d)=>d),
        prefix (d) {
            return d;
        },
        config (d, u) {
            let f = i;
            if (!d) return f;
            let g = tt(d);
            for(let m = 0; m < g.length; ++m){
                let p = g[m];
                if (f[p] === void 0) return u;
                f = f[p];
            }
            return f !== null && f !== void 0 ? f : u;
        }
    };
    return l.addComponents = l.addComponents.bind(l), l.matchComponents = l.matchComponents.bind(l), l;
}
function le(r) {
    let t = [];
    r = Array.isArray(r) ? r : [
        r
    ];
    let i = r.flatMap((e)=>Object.entries(e));
    for (let [e, o] of i)if (o != null && o !== !1) if (typeof o != "object") {
        if (!e.startsWith("--")) {
            if (o === "@slot") {
                t.push(Y(e, [
                    z("@slot")
                ]));
                continue;
            }
            e = e.replace(/([A-Z])/g, "-$1").toLowerCase();
        }
        t.push(n(e, String(o)));
    } else if (Array.isArray(o)) for (let s of o)typeof s == "string" ? t.push(n(e, s)) : t.push(Y(e, le(s)));
    else t.push(Y(e, le(o)));
    return t;
}
function zr(r, t) {
    return (typeof r == "string" ? [
        r
    ] : r).flatMap((e)=>{
        if (e.trim().endsWith("}")) {
            let o = e.replace("}", "{@slot}}"), s = me(o);
            return At(s, t), s;
        } else return Y(e, t);
    });
}
function Mr(r, t, i) {
    j(r, (e)=>{
        if (e.kind === "rule") {
            let o = it(e.selector);
            De(o, (s)=>{
                s.kind === "selector" && s.value === ".".concat(t) && (s.value = ".".concat(fe(i)));
            }), e.selector = je(o);
        }
    });
}
function Wr(r, t, i) {
    for (let e of nn(t))r.theme.addKeyframes(e);
}
function nn(r) {
    let t = [];
    if ("keyframes" in r.theme) for (let [i, e] of Object.entries(r.theme.keyframes))t.push(z("@keyframes", i, le(e)));
    return t;
}
function Br(r) {
    var _r_get, _r_get1;
    return {
        theme: {
            ...__TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["h"],
            colors: (param)=>{
                let { theme: t } = param;
                return t("color", {});
            },
            extend: {
                fontSize: (param)=>{
                    let { theme: t } = param;
                    return {
                        ...t("text", {})
                    };
                },
                boxShadow: (param)=>{
                    let { theme: t } = param;
                    return {
                        ...t("shadow", {})
                    };
                },
                animation: (param)=>{
                    let { theme: t } = param;
                    return {
                        ...t("animate", {})
                    };
                },
                aspectRatio: (param)=>{
                    let { theme: t } = param;
                    return {
                        ...t("aspect", {})
                    };
                },
                borderRadius: (param)=>{
                    let { theme: t } = param;
                    return {
                        ...t("radius", {})
                    };
                },
                screens: (param)=>{
                    let { theme: t } = param;
                    return {
                        ...t("breakpoint", {})
                    };
                },
                letterSpacing: (param)=>{
                    let { theme: t } = param;
                    return {
                        ...t("tracking", {})
                    };
                },
                lineHeight: (param)=>{
                    let { theme: t } = param;
                    return {
                        ...t("leading", {})
                    };
                },
                transitionDuration: {
                    DEFAULT: (_r_get = r.get([
                        "--default-transition-duration"
                    ])) !== null && _r_get !== void 0 ? _r_get : null
                },
                transitionTimingFunction: {
                    DEFAULT: (_r_get1 = r.get([
                        "--default-transition-timing-function"
                    ])) !== null && _r_get1 !== void 0 ? _r_get1 : null
                },
                maxWidth: (param)=>{
                    let { theme: t } = param;
                    return {
                        ...t("container", {})
                    };
                }
            }
        }
    };
}
var on = {
    blocklist: [],
    future: {},
    prefix: "",
    important: !1,
    darkMode: null,
    theme: {},
    plugins: [],
    content: {
        files: []
    }
};
function Tt(r, t) {
    let i = {
        design: r,
        configs: [],
        plugins: [],
        content: {
            files: []
        },
        theme: {},
        extend: {},
        result: structuredClone(on)
    };
    for (let o of t)St(i, o);
    var _o_darkMode, _o_prefix, _o_blocklist, _o_important;
    for (let o of i.configs)"darkMode" in o && o.darkMode !== void 0 && (i.result.darkMode = (_o_darkMode = o.darkMode) !== null && _o_darkMode !== void 0 ? _o_darkMode : null), "prefix" in o && o.prefix !== void 0 && (i.result.prefix = (_o_prefix = o.prefix) !== null && _o_prefix !== void 0 ? _o_prefix : ""), "blocklist" in o && o.blocklist !== void 0 && (i.result.blocklist = (_o_blocklist = o.blocklist) !== null && _o_blocklist !== void 0 ? _o_blocklist : []), "important" in o && o.important !== void 0 && (i.result.important = (_o_important = o.important) !== null && _o_important !== void 0 ? _o_important : !1);
    let e = ln(i);
    return {
        resolvedConfig: {
            ...i.result,
            content: i.content,
            theme: i.theme,
            plugins: i.plugins
        },
        replacedThemeKeys: e
    };
}
function an(r, t) {
    if (Array.isArray(r) && $e(r[0])) return r.concat(t);
    if (Array.isArray(t) && $e(t[0]) && $e(r)) return [
        r,
        ...t
    ];
    if (Array.isArray(t)) return t;
}
function St(r, param) {
    let { config: t, base: i, path: e, reference: o, src: s } = param;
    let l = [];
    var _t_plugins;
    for (let f of (_t_plugins = t.plugins) !== null && _t_plugins !== void 0 ? _t_plugins : [])"__isOptionsFunction" in f ? l.push({
        ...f(),
        reference: o,
        src: s
    }) : "handler" in f ? l.push({
        ...f,
        reference: o,
        src: s
    }) : l.push({
        handler: f,
        reference: o,
        src: s
    });
    if (Array.isArray(t.presets) && t.presets.length === 0) throw new Error("Error in the config file/plugin/preset. An empty preset (`preset: []`) is not currently supported.");
    var _t_presets;
    for (let f of (_t_presets = t.presets) !== null && _t_presets !== void 0 ? _t_presets : [])St(r, {
        path: e,
        base: i,
        config: f,
        reference: o,
        src: s
    });
    var _f_src;
    for (let f of l)r.plugins.push(f), f.config && St(r, {
        path: e,
        base: i,
        config: f.config,
        reference: !!f.reference,
        src: (_f_src = f.src) !== null && _f_src !== void 0 ? _f_src : s
    });
    var _t_content;
    let d = (_t_content = t.content) !== null && _t_content !== void 0 ? _t_content : [], u = Array.isArray(d) ? d : d.files;
    for (let f of u)r.content.files.push(typeof f == "object" ? f : {
        base: i,
        pattern: f
    });
    r.configs.push(t);
}
function ln(r) {
    let t = new Set, i = rt(r.design, ()=>r.theme, o), e = Object.assign(i, {
        theme: i,
        colors: __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$HTB5LLOP$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["a"]
    });
    function o(s) {
        var _s;
        return typeof s == "function" ? (_s = s(e)) !== null && _s !== void 0 ? _s : null : s !== null && s !== void 0 ? s : null;
    }
    for (let s of r.configs){
        var _r_extend, _u;
        var _s_theme, _l_extend;
        let l = (_s_theme = s.theme) !== null && _s_theme !== void 0 ? _s_theme : {}, d = (_l_extend = l.extend) !== null && _l_extend !== void 0 ? _l_extend : {};
        for(let u in l)u !== "extend" && t.add(u);
        Object.assign(r.theme, l);
        var _;
        for(let u in d)(_ = (_r_extend = r.extend)[_u = u]) !== null && _ !== void 0 ? _ : _r_extend[_u] = [], r.extend[u].push(d[u]);
    }
    delete r.theme.extend;
    for(let s in r.extend){
        let l = [
            r.theme[s],
            ...r.extend[s]
        ];
        r.theme[s] = ()=>{
            let d = l.map(o);
            return Oe({}, d, an);
        };
    }
    for(let s in r.theme)r.theme[s] = o(r.theme[s]);
    if (r.theme.screens && typeof r.theme.screens == "object") for (let s of Object.keys(r.theme.screens)){
        let l = r.theme.screens[s];
        l && typeof l == "object" && ("raw" in l || "max" in l || "min" in l && (r.theme.screens[s] = l.min));
    }
    return t;
}
function qr(r, t) {
    let i = r.theme.container || {};
    if (typeof i != "object" || i === null) return;
    let e = sn(i, t);
    e.length !== 0 && t.utilities.static("container", ()=>structuredClone(e));
}
function sn(param, e) {
    let { center: r, padding: t, screens: i } = param;
    let o = [], s = null;
    if (r && o.push(n("margin-inline", "auto")), (typeof t == "string" || typeof t == "object" && t !== null && "DEFAULT" in t) && o.push(n("padding-inline", typeof t == "string" ? t : t.DEFAULT)), typeof i == "object" && i !== null) {
        s = new Map;
        let l = Array.from(e.theme.namespace("--breakpoint").entries());
        if (l.sort((d, u)=>we(d[1], u[1], "asc")), l.length > 0) {
            let [d] = l[0];
            o.push(z("@media", "(width >= --theme(--breakpoint-".concat(d, "))"), [
                n("max-width", "none")
            ]));
        }
        for (let [d, u] of Object.entries(i)){
            if (typeof u == "object") if ("min" in u) u = u.min;
            else continue;
            s.set(d, z("@media", "(width >= ".concat(u, ")"), [
                n("max-width", u)
            ]));
        }
    }
    if (typeof t == "object" && t !== null) {
        let l = Object.entries(t).filter((param)=>{
            let [d] = param;
            return d !== "DEFAULT";
        }).map((param)=>{
            let [d, u] = param;
            return [
                d,
                e.theme.resolveValue(d, [
                    "--breakpoint"
                ]),
                u
            ];
        }).filter(Boolean);
        l.sort((d, u)=>we(d[1], u[1], "asc"));
        for (let [d, , u] of l)if (s && s.has(d)) s.get(d).nodes.push(n("padding-inline", u));
        else {
            if (s) continue;
            o.push(z("@media", "(width >= theme(--breakpoint-".concat(d, "))"), [
                n("padding-inline", u)
            ]));
        }
    }
    if (s) for (let [, l] of s)o.push(l);
    return o;
}
function Gr(param) {
    let { addVariant: r, config: t } = param;
    let i = t("darkMode", null), [e, o = ".dark"] = Array.isArray(i) ? i : [
        i
    ];
    if (e === "variant") {
        let s;
        if (Array.isArray(o) || typeof o == "function" ? s = o : typeof o == "string" && (s = [
            o
        ]), Array.isArray(s)) for (let l of s)l === ".dark" ? (e = !1, console.warn('When using `variant` for `darkMode`, you must provide a selector.\nExample: `darkMode: ["variant", ".your-selector &"]`')) : l.includes("&") || (e = !1, console.warn('When using `variant` for `darkMode`, your selector must contain `&`.\nExample `darkMode: ["variant", ".your-selector &"]`'));
        o = s;
    }
    e === null || (e === "selector" ? r("dark", "&:where(".concat(o, ", ").concat(o, " *)")) : e === "media" ? r("dark", "@media (prefers-color-scheme: dark)") : e === "variant" ? r("dark", o) : e === "class" && r("dark", "&:is(".concat(o, " *)")));
}
function Jr(r) {
    for (let [t, i] of [
        [
            "t",
            "top"
        ],
        [
            "tr",
            "top right"
        ],
        [
            "r",
            "right"
        ],
        [
            "br",
            "bottom right"
        ],
        [
            "b",
            "bottom"
        ],
        [
            "bl",
            "bottom left"
        ],
        [
            "l",
            "left"
        ],
        [
            "tl",
            "top left"
        ]
    ])r.utilities.static("bg-gradient-to-".concat(t), ()=>[
            n("--tw-gradient-position", "to ".concat(i, " in oklab")),
            n("background-image", "linear-gradient(var(--tw-gradient-stops))")
        ]);
    r.utilities.static("bg-left-top", ()=>[
            n("background-position", "left top")
        ]), r.utilities.static("bg-right-top", ()=>[
            n("background-position", "right top")
        ]), r.utilities.static("bg-left-bottom", ()=>[
            n("background-position", "left bottom")
        ]), r.utilities.static("bg-right-bottom", ()=>[
            n("background-position", "right bottom")
        ]), r.utilities.static("object-left-top", ()=>[
            n("object-position", "left top")
        ]), r.utilities.static("object-right-top", ()=>[
            n("object-position", "right top")
        ]), r.utilities.static("object-left-bottom", ()=>[
            n("object-position", "left bottom")
        ]), r.utilities.static("object-right-bottom", ()=>[
            n("object-position", "right bottom")
        ]), r.utilities.functional("max-w-screen", (t)=>{
        if (!t.value || t.value.kind === "arbitrary") return;
        let i = r.theme.resolve(t.value.value, [
            "--breakpoint"
        ]);
        if (i) return [
            n("max-width", i)
        ];
    }), r.utilities.static("overflow-ellipsis", ()=>[
            n("text-overflow", "ellipsis")
        ]), r.utilities.static("decoration-slice", ()=>[
            n("-webkit-box-decoration-break", "slice"),
            n("box-decoration-break", "slice")
        ]), r.utilities.static("decoration-clone", ()=>[
            n("-webkit-box-decoration-break", "clone"),
            n("box-decoration-break", "clone")
        ]), r.utilities.functional("flex-shrink", (t)=>{
        if (!t.modifier) {
            if (!t.value) return [
                n("flex-shrink", "1")
            ];
            if (t.value.kind === "arbitrary") return [
                n("flex-shrink", t.value.value)
            ];
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(t.value.value)) return [
                n("flex-shrink", t.value.value)
            ];
        }
    }), r.utilities.functional("flex-grow", (t)=>{
        if (!t.modifier) {
            if (!t.value) return [
                n("flex-grow", "1")
            ];
            if (t.value.kind === "arbitrary") return [
                n("flex-grow", t.value.value)
            ];
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"])(t.value.value)) return [
                n("flex-grow", t.value.value)
            ];
        }
    }), r.utilities.static("order-none", ()=>[
            n("order", "0")
        ]);
}
function Hr(r, t) {
    var _t_variants_get;
    var _t_variants_get_order;
    let i = r.theme.screens || {}, e = (_t_variants_get_order = (_t_variants_get = t.variants.get("min")) === null || _t_variants_get === void 0 ? void 0 : _t_variants_get.order) !== null && _t_variants_get_order !== void 0 ? _t_variants_get_order : 0, o = [];
    for (let [l, d] of Object.entries(i)){
        let p = function(w) {
            t.variants.static(l, (v)=>{
                v.nodes = [
                    z("@media", m, v.nodes)
                ];
            }, {
                order: w
            });
        };
        var s = p;
        let u = t.variants.get(l), f = t.theme.resolveValue(l, [
            "--breakpoint"
        ]);
        if (u && f && !t.theme.hasDefault("--breakpoint-".concat(l))) continue;
        let g = !0;
        typeof d == "string" && (g = !1);
        let m = un(d);
        g ? o.push(p) : p(e);
    }
    if (o.length !== 0) {
        for (let [, l] of t.variants.variants)l.order > e && (l.order += o.length);
        t.variants.compareFns = new Map(Array.from(t.variants.compareFns).map((param)=>{
            let [l, d] = param;
            return l > e && (l += o.length), [
                l,
                d
            ];
        }));
        for (let [l, d] of o.entries())d(e + l + 1);
    }
}
function un(r) {
    return (Array.isArray(r) ? r : [
        r
    ]).map((i)=>typeof i == "string" ? {
            min: i
        } : i && typeof i == "object" ? i : null).map((i)=>{
        if (i === null) return null;
        if ("raw" in i) return i.raw;
        let e = "";
        return i.max !== void 0 && (e += "".concat(i.max, " >= ")), e += "width", i.min !== void 0 && (e += " >= ".concat(i.min)), "(".concat(e, ")");
    }).filter(Boolean).join(", ");
}
function Yr(r, t) {
    let i = r.theme.aria || {}, e = r.theme.supports || {}, o = r.theme.data || {};
    if (Object.keys(i).length > 0) {
        let s = t.variants.get("aria"), l = s === null || s === void 0 ? void 0 : s.applyFn, d = s === null || s === void 0 ? void 0 : s.compounds;
        t.variants.functional("aria", (u, f)=>{
            let g = f.value;
            return g && g.kind === "named" && g.value in i ? l === null || l === void 0 ? void 0 : l(u, {
                ...f,
                value: {
                    kind: "arbitrary",
                    value: i[g.value]
                }
            }) : l === null || l === void 0 ? void 0 : l(u, f);
        }, {
            compounds: d
        });
    }
    if (Object.keys(e).length > 0) {
        let s = t.variants.get("supports"), l = s === null || s === void 0 ? void 0 : s.applyFn, d = s === null || s === void 0 ? void 0 : s.compounds;
        t.variants.functional("supports", (u, f)=>{
            let g = f.value;
            return g && g.kind === "named" && g.value in e ? l === null || l === void 0 ? void 0 : l(u, {
                ...f,
                value: {
                    kind: "arbitrary",
                    value: e[g.value]
                }
            }) : l === null || l === void 0 ? void 0 : l(u, f);
        }, {
            compounds: d
        });
    }
    if (Object.keys(o).length > 0) {
        let s = t.variants.get("data"), l = s === null || s === void 0 ? void 0 : s.applyFn, d = s === null || s === void 0 ? void 0 : s.compounds;
        t.variants.functional("data", (u, f)=>{
            let g = f.value;
            return g && g.kind === "named" && g.value in o ? l === null || l === void 0 ? void 0 : l(u, {
                ...f,
                value: {
                    kind: "arbitrary",
                    value: o[g.value]
                }
            }) : l === null || l === void 0 ? void 0 : l(u, f);
        }, {
            compounds: d
        });
    }
}
var fn = /^[a-z]+$/;
async function Qr(param) {
    let { designSystem: r, base: t, ast: i, loadModule: e, sources: o } = param;
    let s = 0, l = [], d = [];
    j(i, (m, param)=>{
        let { parent: p, replaceWith: w, context: v } = param;
        if (m.kind === "at-rule") {
            if (m.name === "@plugin") {
                if (p !== null) throw new Error("`@plugin` cannot be nested.");
                let y1 = m.params.slice(1, -1);
                if (y1.length === 0) throw new Error("`@plugin` must have a path.");
                let x = {};
                var _m_nodes;
                for (let S of (_m_nodes = m.nodes) !== null && _m_nodes !== void 0 ? _m_nodes : []){
                    if (S.kind !== "declaration") throw new Error("Unexpected `@plugin` option:\n\n".concat(ie([
                        S
                    ]), "\n\n`@plugin` options must be a flat list of declarations."));
                    if (S.value === void 0) continue;
                    let C = S.value, b = (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["b"])(C, ",").map((O)=>{
                        if (O = O.trim(), O === "null") return null;
                        if (O === "true") return !0;
                        if (O === "false") return !1;
                        if (Number.isNaN(Number(O))) {
                            if (O[0] === '"' && O[O.length - 1] === '"' || O[0] === "'" && O[O.length - 1] === "'") return O.slice(1, -1);
                            if (O[0] === "{" && O[O.length - 1] === "}") throw new Error("Unexpected `@plugin` option: Value of declaration `".concat(ie([
                                S
                            ]).trim(), "` is not supported.\n\nUsing an object as a plugin option is currently only supported in JavaScript configuration files."));
                        } else return Number(O);
                        return O;
                    });
                    x[S.property] = b.length === 1 ? b[0] : b;
                }
                l.push([
                    {
                        id: y1,
                        base: v.base,
                        reference: !!v.reference,
                        src: m.src
                    },
                    Object.keys(x).length > 0 ? x : null
                ]), w([]), s |= 4;
                return;
            }
            if (m.name === "@config") {
                if (m.nodes.length > 0) throw new Error("`@config` cannot have a body.");
                if (p !== null) throw new Error("`@config` cannot be nested.");
                d.push({
                    id: m.params.slice(1, -1),
                    base: v.base,
                    reference: !!v.reference,
                    src: m.src
                }), w([]), s |= 4;
                return;
            }
        }
    }), Jr(r);
    let u = r.resolveThemeValue;
    if (r.resolveThemeValue = function(p, w) {
        return p.startsWith("--") ? u(p, w) : (s |= Zr({
            designSystem: r,
            base: t,
            ast: i,
            sources: o,
            configs: [],
            pluginDetails: []
        }), r.resolveThemeValue(p, w));
    }, !l.length && !d.length) return 0;
    let [f, g] = await Promise.all([
        Promise.all(d.map(async (param)=>{
            let { id: m, base: p, reference: w, src: v } = param;
            let y1 = await e(m, p, "config");
            return {
                path: m,
                base: y1.base,
                config: y1.module,
                reference: w,
                src: v
            };
        })),
        Promise.all(l.map(async (param)=>{
            let [{ id: m, base: p, reference: w, src: v }, y1] = param;
            let x = await e(m, p, "plugin");
            return {
                path: m,
                base: x.base,
                plugin: x.module,
                options: y1,
                reference: w,
                src: v
            };
        }))
    ]);
    return s |= Zr({
        designSystem: r,
        base: t,
        ast: i,
        sources: o,
        configs: f,
        pluginDetails: g
    }), s;
}
function Zr(param) {
    let { designSystem: r, base: t, ast: i, sources: e, configs: o, pluginDetails: s } = param;
    let l = 0, u = [
        ...s.map((y1)=>{
            if (!y1.options) return {
                config: {
                    plugins: [
                        y1.plugin
                    ]
                },
                base: y1.base,
                reference: y1.reference,
                src: y1.src
            };
            if ("__isOptionsFunction" in y1.plugin) return {
                config: {
                    plugins: [
                        y1.plugin(y1.options)
                    ]
                },
                base: y1.base,
                reference: y1.reference,
                src: y1.src
            };
            throw new Error('The plugin "'.concat(y1.path, '" does not accept options'));
        }),
        ...o
    ], { resolvedConfig: f } = Tt(r, [
        {
            config: Br(r.theme),
            base: t,
            reference: !0,
            src: void 0
        },
        ...u,
        {
            config: {
                plugins: [
                    Gr
                ]
            },
            base: t,
            reference: !0,
            src: void 0
        }
    ]), { resolvedConfig: g, replacedThemeKeys: m } = Tt(r, u), p = {
        designSystem: r,
        ast: i,
        resolvedConfig: f,
        featuresRef: {
            set current (y){
                l |= y;
            }
        }
    }, w = Nt({
        ...p,
        referenceMode: !1,
        src: void 0
    }), v = r.resolveThemeValue;
    r.resolveThemeValue = function(x, S) {
        if (x[0] === "-" && x[1] === "-") return v(x, S);
        let C = w.theme(x, void 0);
        if (Array.isArray(C) && C.length === 2) return C[0];
        if (Array.isArray(C)) return C.join(", ");
        if (typeof C == "string") return C;
    };
    for (let { handler: y1, reference: x, src: S } of f.plugins){
        let C = Nt({
            ...p,
            referenceMode: x !== null && x !== void 0 ? x : !1,
            src: S
        });
        y1(C);
    }
    if ($r(r, g, m), Wr(r, g, m), Yr(g, r), Hr(g, r), qr(g, r), !r.theme.prefix && f.prefix) {
        if (f.prefix.endsWith("-") && (f.prefix = f.prefix.slice(0, -1), console.warn('The prefix "'.concat(f.prefix, '" is invalid. Prefixes must be lowercase ASCII letters (a-z) only and is written as a variant before all utilities. We have fixed up the prefix for you. Remove the trailing `-` to silence this warning.'))), !fn.test(f.prefix)) throw new Error('The prefix "'.concat(f.prefix, '" is invalid. Prefixes must be lowercase ASCII letters (a-z) only.'));
        r.theme.prefix = f.prefix;
    }
    if (!r.important && f.important === !0 && (r.important = !0), typeof f.important == "string") {
        let y1 = f.important;
        j(i, (x, param)=>{
            let { replaceWith: S, parent: C } = param;
            if (x.kind === "at-rule" && !(x.name !== "@tailwind" || x.params !== "utilities")) return (C === null || C === void 0 ? void 0 : C.kind) === "rule" && C.selector === y1 ? 2 : (S(B(y1, [
                x
            ])), 2);
        });
    }
    for (let y1 of f.blocklist)r.invalidCandidates.add(y1);
    for (let y1 of f.content.files){
        if ("raw" in y1) throw new Error("Error in the config file/plugin/preset. The `content` key contains a `raw` entry:\n\n".concat(JSON.stringify(y1, null, 2), "\n\nThis feature is not currently supported."));
        let x = !1;
        y1.pattern[0] == "!" && (x = !0, y1.pattern = y1.pattern.slice(1)), e.push({
            ...y1,
            negated: x
        });
    }
    return l;
}
function Xr(r) {
    let t = [
        0
    ];
    for(let o = 0; o < r.length; o++)r.charCodeAt(o) === 10 && t.push(o + 1);
    function i(o) {
        let s = 0, l = t.length;
        for(; l > 0;){
            let u = (l | 0) >> 1, f = s + u;
            t[f] <= o ? (s = f + 1, l = l - u - 1) : l = u;
        }
        s -= 1;
        let d = o - t[s];
        return {
            line: s + 1,
            column: d
        };
    }
    function e(param) {
        let { line: o, column: s } = param;
        o -= 1, o = Math.min(Math.max(o, 0), t.length - 1);
        var _t_;
        let l = t[o], d = (_t_ = t[o + 1]) !== null && _t_ !== void 0 ? _t_ : l;
        return Math.min(Math.max(l + s, 0), d);
    }
    return {
        find: i,
        findOffset: e
    };
}
function ei(param) {
    let { ast: r } = param;
    let t = new W((o)=>Xr(o.code)), i = new W((o)=>({
            url: o.file,
            content: o.code,
            ignore: !1
        })), e = {
        file: null,
        sources: [],
        mappings: []
    };
    j(r, (o)=>{
        if (!o.src || !o.dst) return;
        let s = i.get(o.src[0]);
        if (!s.content) return;
        let l = t.get(o.src[0]), d = t.get(o.dst[0]), u = s.content.slice(o.src[1], o.src[2]), f = 0;
        for (let p of u.split("\n")){
            if (p.trim() !== "") {
                let w = l.find(o.src[1] + f), v = d.find(o.dst[1]);
                e.mappings.push({
                    name: null,
                    originalPosition: {
                        source: s,
                        ...w
                    },
                    generatedPosition: v
                });
            }
            f += p.length, f += 1;
        }
        let g = l.find(o.src[2]), m = d.find(o.dst[2]);
        e.mappings.push({
            name: null,
            originalPosition: {
                source: s,
                ...g
            },
            generatedPosition: m
        });
    });
    for (let o of t.keys())e.sources.push(i.get(o));
    return e.mappings.sort((o, s)=>{
        var _o_originalPosition, _s_originalPosition, _o_originalPosition1, _s_originalPosition1;
        var _o_originalPosition_line, _s_originalPosition_line, _o_originalPosition_column, _s_originalPosition_column;
        return o.generatedPosition.line - s.generatedPosition.line || o.generatedPosition.column - s.generatedPosition.column || ((_o_originalPosition_line = (_o_originalPosition = o.originalPosition) === null || _o_originalPosition === void 0 ? void 0 : _o_originalPosition.line) !== null && _o_originalPosition_line !== void 0 ? _o_originalPosition_line : 0) - ((_s_originalPosition_line = (_s_originalPosition = s.originalPosition) === null || _s_originalPosition === void 0 ? void 0 : _s_originalPosition.line) !== null && _s_originalPosition_line !== void 0 ? _s_originalPosition_line : 0) || ((_o_originalPosition_column = (_o_originalPosition1 = o.originalPosition) === null || _o_originalPosition1 === void 0 ? void 0 : _o_originalPosition1.column) !== null && _o_originalPosition_column !== void 0 ? _o_originalPosition_column : 0) - ((_s_originalPosition_column = (_s_originalPosition1 = s.originalPosition) === null || _s_originalPosition1 === void 0 ? void 0 : _s_originalPosition1.column) !== null && _s_originalPosition_column !== void 0 ? _s_originalPosition_column : 0);
    }), e;
}
var ti = /^(-?\d+)\.\.(-?\d+)(?:\.\.(-?\d+))?$/;
function nt(r) {
    let t = r.indexOf("{");
    if (t === -1) return [
        r
    ];
    let i = [], e = r.slice(0, t), o = r.slice(t), s = 0, l = o.lastIndexOf("}");
    for(let m = 0; m < o.length; m++){
        let p = o[m];
        if (p === "{") s++;
        else if (p === "}" && (s--, s === 0)) {
            l = m;
            break;
        }
    }
    if (l === -1) throw new Error("The pattern `".concat(r, "` is not balanced."));
    let d = o.slice(1, l), u = o.slice(l + 1), f;
    cn(d) ? f = pn(d) : f = (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["b"])(d, ","), f = f.flatMap((m)=>nt(m));
    let g = nt(u);
    for (let m of g)for (let p of f)i.push(e + p + m);
    return i;
}
function cn(r) {
    return ti.test(r);
}
function pn(r) {
    let t = r.match(ti);
    if (!t) return [
        r
    ];
    let [, i, e, o] = t, s = o ? parseInt(o, 10) : void 0, l = [];
    if (/^-?\d+$/.test(i) && /^-?\d+$/.test(e)) {
        let d = parseInt(i, 10), u = parseInt(e, 10);
        if (s === void 0 && (s = d <= u ? 1 : -1), s === 0) throw new Error("Step cannot be zero in sequence expansion.");
        let f = d < u;
        f && s < 0 && (s = -s), !f && s > 0 && (s = -s);
        for(let g = d; f ? g <= u : g >= u; g += s)l.push(g.toString());
    }
    return l;
}
function ri(r, t) {
    let i = new Set, e = new Set, o = [];
    function s(l) {
        let d = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
        if (r.has(l) && !i.has(l)) {
            var _t_onCircularDependency;
            e.has(l) && ((_t_onCircularDependency = t.onCircularDependency) === null || _t_onCircularDependency === void 0 ? void 0 : _t_onCircularDependency.call(t, d, l)), e.add(l);
            var _r_get;
            for (let u of (_r_get = r.get(l)) !== null && _r_get !== void 0 ? _r_get : [])d.push(l), s(u, d), d.pop();
            i.add(l), e.delete(l), o.push(l);
        }
    }
    for (let l of r.keys())s(l);
    return o;
}
var dn = /^[a-z]+$/, dt = ((o)=>(o[o.None = 0] = "None", o[o.AtProperty = 1] = "AtProperty", o[o.ColorMix = 2] = "ColorMix", o[o.All = 3] = "All", o))(dt || {});
function mn() {
    throw new Error("No `loadModule` function provided to `compile`");
}
function gn() {
    throw new Error("No `loadStylesheet` function provided to `compile`");
}
function hn(r) {
    let t = 0, i = null;
    for (let e of (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["b"])(r, " "))e === "reference" ? t |= 2 : e === "inline" ? t |= 1 : e === "default" ? t |= 4 : e === "static" ? t |= 8 : e.startsWith("prefix(") && e.endsWith(")") && (i = e.slice(7, -1));
    return [
        t,
        i
    ];
}
var Ae = ((u)=>(u[u.None = 0] = "None", u[u.AtApply = 1] = "AtApply", u[u.AtImport = 2] = "AtImport", u[u.JsPluginCompat = 4] = "JsPluginCompat", u[u.ThemeFunction = 8] = "ThemeFunction", u[u.Utilities = 16] = "Utilities", u[u.Variants = 32] = "Variants", u[u.AtTheme = 64] = "AtTheme", u))(Ae || {});
async function ii(r) {
    let { base: t = "", from: i, loadModule: e = mn, loadStylesheet: o = gn } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var _u_get;
    let s = 0;
    r = [
        ae({
            base: t
        }, r)
    ], s |= await $t(r, t, o, 0, i !== void 0);
    let l = null, d = new Be, u = new Map, f = new Map, g = [], m = null, p = null, w = [], v = [], y1 = [], x = [], S = null;
    j(r, (b, param)=>{
        let { parent: O, replaceWith: R, context: _ } = param;
        if (b.kind === "at-rule") {
            if (b.name === "@tailwind" && (b.params === "utilities" || b.params.startsWith("utilities"))) {
                if (p !== null) {
                    R([]);
                    return;
                }
                if (_.reference) {
                    R([]);
                    return;
                }
                let D = (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["b"])(b.params, " ");
                for (let G of D)if (G.startsWith("source(")) {
                    let K = G.slice(7, -1);
                    if (K === "none") {
                        S = K;
                        continue;
                    }
                    if (K[0] === '"' && K[K.length - 1] !== '"' || K[0] === "'" && K[K.length - 1] !== "'" || K[0] !== "'" && K[0] !== '"') throw new Error("`source(\u2026)` paths must be quoted.");
                    var __sourceBase;
                    S = {
                        base: (__sourceBase = _.sourceBase) !== null && __sourceBase !== void 0 ? __sourceBase : _.base,
                        pattern: K.slice(1, -1)
                    };
                }
                p = b, s |= 16;
            }
            if (b.name === "@utility") {
                if (O !== null) throw new Error("`@utility` cannot be nested.");
                if (b.nodes.length === 0) throw new Error("`@utility ".concat(b.params, "` is empty. Utilities should include at least one property."));
                let D = dr(b);
                if (D === null) {
                    if (!b.params.endsWith("-*")) {
                        if (b.params.endsWith("*")) throw new Error("`@utility ".concat(b.params, "` defines an invalid utility name. A functional utility must end in `-*`."));
                        if (b.params.includes("*")) throw new Error("`@utility ".concat(b.params, "` defines an invalid utility name. The dynamic portion marked by `-*` must appear once at the end."));
                    }
                    throw new Error("`@utility ".concat(b.params, "` defines an invalid utility name. Utilities should be alphanumeric and start with a lowercase letter."));
                }
                g.push(D);
            }
            if (b.name === "@source") {
                if (b.nodes.length > 0) throw new Error("`@source` cannot have a body.");
                if (O !== null) throw new Error("`@source` cannot be nested.");
                let D = !1, G = !1, K = b.params;
                if (K[0] === "n" && K.startsWith("not ") && (D = !0, K = K.slice(4)), K[0] === "i" && K.startsWith("inline(") && (G = !0, K = K.slice(7, -1)), K[0] === '"' && K[K.length - 1] !== '"' || K[0] === "'" && K[K.length - 1] !== "'" || K[0] !== "'" && K[0] !== '"') throw new Error("`@source` paths must be quoted.");
                let U = K.slice(1, -1);
                if (G) {
                    let q = D ? x : y1, M = (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["b"])(U, " ");
                    for (let re of M)for (let a of nt(re))q.push(a);
                } else v.push({
                    base: _.base,
                    pattern: U,
                    negated: D
                });
                R([]);
                return;
            }
            if (b.name === "@variant" && (O === null ? b.nodes.length === 0 ? b.name = "@custom-variant" : (j(b.nodes, (D)=>{
                if (D.kind === "at-rule" && D.name === "@slot") return b.name = "@custom-variant", 2;
            }), b.name === "@variant" && w.push(b)) : w.push(b)), b.name === "@custom-variant") {
                if (O !== null) throw new Error("`@custom-variant` cannot be nested.");
                R([]);
                let [D, G] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["b"])(b.params, " ");
                if (!Xe.test(D)) throw new Error("`@custom-variant ".concat(D, "` defines an invalid variant name. Variants should only contain alphanumeric, dashes, or underscore characters and start with a lowercase letter or number."));
                if (b.nodes.length > 0 && G) throw new Error("`@custom-variant ".concat(D, "` cannot have both a selector and a body."));
                if (b.nodes.length === 0) {
                    if (!G) throw new Error("`@custom-variant ".concat(D, "` has no selector or body."));
                    let K = (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["b"])(G.slice(1, -1), ",");
                    if (K.length === 0 || K.some((M)=>M.trim() === "")) throw new Error("`@custom-variant ".concat(D, " (").concat(K.join(","), ")` selector is invalid."));
                    let U = [], q = [];
                    for (let M of K)M = M.trim(), M[0] === "@" ? U.push(M) : q.push(M);
                    u.set(D, (M)=>{
                        M.variants.static(D, (re)=>{
                            let a = [];
                            q.length > 0 && a.push(B(q.join(", "), re.nodes));
                            for (let c of U)a.push(Y(c, re.nodes));
                            re.nodes = a;
                        }, {
                            compounds: ye([
                                ...q,
                                ...U
                            ])
                        });
                    }), f.set(D, new Set);
                    return;
                } else {
                    let K = new Set;
                    j(b.nodes, (U)=>{
                        U.kind === "at-rule" && U.name === "@variant" && K.add(U.params);
                    }), u.set(D, (U)=>{
                        U.variants.fromAst(D, b.nodes, U);
                    }), f.set(D, K);
                    return;
                }
            }
            if (b.name === "@media") {
                let D = (0, __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["b"])(b.params, " "), G = [];
                for (let K of D)if (K.startsWith("source(")) {
                    let U = K.slice(7, -1);
                    j(b.nodes, (q, param)=>{
                        let { replaceWith: M } = param;
                        if (q.kind === "at-rule" && q.name === "@tailwind" && q.params === "utilities") return q.params += " source(".concat(U, ")"), M([
                            ae({
                                sourceBase: _.base
                            }, [
                                q
                            ])
                        ]), 2;
                    });
                } else if (K.startsWith("theme(")) {
                    let U = K.slice(6, -1), q = U.includes("reference");
                    j(b.nodes, (M)=>{
                        if (M.kind !== "at-rule") {
                            if (q) throw new Error('Files imported with `@import "\u2026" theme(reference)` must only contain `@theme` blocks.\nUse `@reference "\u2026";` instead.');
                            return 0;
                        }
                        if (M.name === "@theme") return M.params += " " + U, 1;
                    });
                } else if (K.startsWith("prefix(")) {
                    let U = K.slice(7, -1);
                    j(b.nodes, (q)=>{
                        if (q.kind === "at-rule" && q.name === "@theme") return q.params += " prefix(".concat(U, ")"), 1;
                    });
                } else K === "important" ? l = !0 : K === "reference" ? b.nodes = [
                    ae({
                        reference: !0
                    }, b.nodes)
                ] : G.push(K);
                G.length > 0 ? b.params = G.join(" ") : D.length > 0 && R(b.nodes);
            }
            if (b.name === "@theme") {
                let [D, G] = hn(b.params);
                if (s |= 64, _.reference && (D |= 2), G) {
                    if (!dn.test(G)) throw new Error('The prefix "'.concat(G, '" is invalid. Prefixes must be lowercase ASCII letters (a-z) only.'));
                    d.prefix = G;
                }
                return j(b.nodes, (K)=>{
                    if (K.kind === "at-rule" && K.name === "@keyframes") return d.addKeyframes(K), 1;
                    if (K.kind === "comment") return;
                    if (K.kind === "declaration" && K.property.startsWith("--")) {
                        var _K_value;
                        d.add(ge(K.property), (_K_value = K.value) !== null && _K_value !== void 0 ? _K_value : "", D, K.src);
                        return;
                    }
                    let U = ie([
                        z(b.name, b.params, [
                            K
                        ])
                    ]).split("\n").map((q, M, re)=>"".concat(M === 0 || M >= re.length - 2 ? " " : ">", " ").concat(q)).join("\n");
                    throw new Error("`@theme` blocks must only contain custom properties or `@keyframes`.\n\n".concat(U));
                }), m ? R([]) : (m = B(":root, :host", []), m.src = b.src, R([
                    m
                ])), 1;
            }
        }
    });
    let C = br(d);
    if (l && (C.important = l), x.length > 0) for (let b of x)C.invalidCandidates.add(b);
    s |= await Qr({
        designSystem: C,
        base: t,
        ast: r,
        loadModule: e,
        sources: v
    });
    for (let b of u.keys())C.variants.static(b, ()=>{});
    for (let b of ri(f, {
        onCircularDependency (O, R) {
            let _ = ie(O.map((D, G)=>{
                var _O_;
                return z("@custom-variant", D, [
                    z("@variant", (_O_ = O[G + 1]) !== null && _O_ !== void 0 ? _O_ : R, [])
                ]);
            })).replaceAll(";", " { \u2026 }").replace("@custom-variant ".concat(R, " {"), "@custom-variant ".concat(R, " { /* ← */"));
            throw new Error("Circular dependency detected in custom variants:\n\n".concat(_));
        }
    }))(_u_get = u.get(b)) === null || _u_get === void 0 ? void 0 : _u_get(C);
    for (let b of g)b(C);
    if (m) {
        let b = [];
        for (let [R, _] of C.theme.entries()){
            if (_.options & 2) continue;
            let D = n(fe(R), _.value);
            D.src = _.src, b.push(D);
        }
        let O = C.theme.getKeyframes();
        for (let R of O)r.push(ae({
            theme: !0
        }, [
            F([
                R
            ])
        ]));
        m.nodes = [
            ae({
                theme: !0
            }, b)
        ];
    }
    if (s |= Ct(r, C), s |= xe(r, C), s |= Ke(r, C), p) {
        let b = p;
        b.kind = "context", b.context = {};
    }
    return j(r, (b, param)=>{
        let { replaceWith: O } = param;
        if (b.kind === "at-rule") return b.name === "@utility" && O([]), 1;
    }), {
        designSystem: C,
        ast: r,
        sources: v,
        root: S,
        utilitiesNode: p,
        features: s,
        inlineCandidates: y1
    };
}
async function vn(r) {
    let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    let { designSystem: i, ast: e, sources: o, root: s, utilitiesNode: l, features: d, inlineCandidates: u } = await ii(r, t);
    e.unshift(We("! tailwindcss v".concat(Kt, " | MIT License | https://tailwindcss.com ")));
    function f(v) {
        i.invalidCandidates.add(v);
    }
    let g = new Set, m = null, p = 0, w = !1;
    for (let v of u)i.invalidCandidates.has(v) || (g.add(v), w = !0);
    return {
        sources: o,
        root: s,
        features: d,
        build (v) {
            if (d === 0) return r;
            if (!l) return m !== null && m !== void 0 ? m : m = ve(e, i, t.polyfills), m;
            let y1 = w, x = !1;
            w = !1;
            let S = g.size;
            for (let b of v)if (!i.invalidCandidates.has(b)) if (b[0] === "-" && b[1] === "-") {
                let O = i.theme.markUsedVariable(b);
                y1 || (y1 = O), x || (x = O);
            } else g.add(b), y1 || (y1 = g.size !== S);
            if (!y1) return m !== null && m !== void 0 ? m : m = ve(e, i, t.polyfills), m;
            let C = pe(g, i, {
                onInvalidCandidate: f
            }).astNodes;
            return t.from && j(C, (b)=>{
                var _b;
                var _src;
                (_src = (_b = b).src) !== null && _src !== void 0 ? _src : _b.src = l.src;
            }), !x && p === C.length ? (m !== null && m !== void 0 ? m : m = ve(e, i, t.polyfills), m) : (p = C.length, l.nodes = C, m = ve(e, i, t.polyfills), m);
        }
    };
}
async function Ol(r) {
    let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    let i = me(r, {
        from: t.from
    }), e = await vn(i, t), o = i, s = r;
    return {
        ...e,
        build (l) {
            let d = e.build(l);
            return d === o || (s = ie(d, !!t.from), o = d), s;
        },
        buildSourceMap () {
            return ei({
                ast: o
            });
        }
    };
}
async function _l(r) {
    let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    return (await ii(me(r), t)).designSystem;
}
function wn() {
    throw new Error("It looks like you're trying to use `tailwindcss` directly as a PostCSS plugin. The PostCSS plugin has moved to a separate package, so to continue using Tailwind CSS with PostCSS you'll need to install `@tailwindcss/postcss` and update your PostCSS configuration.");
}
;
function r(t) {
    return this.prefix ? "--".concat(t.slice(3 + this.prefix.length)) : t;
}
function e(t, i) {
    for (let e of i){
        let o = t !== null ? "".concat(e, "-").concat(t) : e;
        if (!this.values.has(o)) if (t !== null && t.includes(".")) {
            if (o = "".concat(e, "-").concat(t.replaceAll(".", "_")), !this.values.has(o)) continue;
        } else continue;
        if (!Lt(o, e)) return o;
    }
    return null;
}
function t(t) {
    let i = this.values.get(t);
    if (!i) return null;
    let e = null;
    return i.options & 2 && (e = i.value), "var(".concat(fe(this.prefixKey(t))).concat(e ? ", ".concat(e) : "", ")");
}
}),
"[project]/Documents/vsc/HTV/frontend/node_modules/tailwindcss/dist/lib.mjs [app-client] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([]);
var __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$MC3TVECV$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/Documents/vsc/HTV/frontend/node_modules/tailwindcss/dist/chunk-MC3TVECV.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$G32FJCSR$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/Documents/vsc/HTV/frontend/node_modules/tailwindcss/dist/chunk-G32FJCSR.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$HTB5LLOP$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/Documents/vsc/HTV/frontend/node_modules/tailwindcss/dist/chunk-HTB5LLOP.mjs [app-client] (ecmascript)");
;
;
;
;
}),
"[project]/Documents/vsc/HTV/frontend/node_modules/tailwindcss/dist/lib.mjs [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Features",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$MC3TVECV$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["b"],
    "Polyfills",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$MC3TVECV$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["a"],
    "__unstable__loadDesignSystem",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$MC3TVECV$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["e"],
    "compile",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$MC3TVECV$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["d"],
    "compileAst",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$MC3TVECV$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["c"],
    "default",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$MC3TVECV$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["f"]
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$lib$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/Documents/vsc/HTV/frontend/node_modules/tailwindcss/dist/lib.mjs [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$tailwindcss$2f$dist$2f$chunk$2d$MC3TVECV$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/Documents/vsc/HTV/frontend/node_modules/tailwindcss/dist/chunk-MC3TVECV.mjs [app-client] (ecmascript)");
}),
"[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/shared/lib/router/utils/disable-smooth-scroll.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

var __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "disableSmoothScrollDuringRouteTransition", {
    enumerable: true,
    get: function() {
        return disableSmoothScrollDuringRouteTransition;
    }
});
const _warnonce = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/shared/lib/utils/warn-once.js [app-client] (ecmascript)");
function disableSmoothScrollDuringRouteTransition(fn, options) {
    if (options === void 0) options = {};
    // if only the hash is changed, we don't need to disable smooth scrolling
    // we only care to prevent smooth scrolling when navigating to a new page to avoid jarring UX
    if (options.onlyHashChange) {
        fn();
        return;
    }
    const htmlElement = document.documentElement;
    const hasDataAttribute = htmlElement.dataset.scrollBehavior === 'smooth';
    // Since this is a breaking change, this is temporarily flagged
    // and will be false by default.
    // In the next major (v16), this will be automatically enabled
    if ("TURBOPACK compile-time falsy", 0) //TURBOPACK unreachable
    ;
    else {
        // Old behavior: always manipulate styles, but warn about upcoming change
        // Warn if smooth scrolling is detected but no data attribute is present
        if (("TURBOPACK compile-time value", "development") === 'development' && !hasDataAttribute && getComputedStyle(htmlElement).scrollBehavior === 'smooth') {
            (0, _warnonce.warnOnce)('Detected `scroll-behavior: smooth` on the `<html>` element. In a future version, ' + 'Next.js will no longer automatically disable smooth scrolling during route transitions. ' + 'To prepare for this change, add `data-scroll-behavior="smooth"` to your <html> element. ' + 'Learn more: https://nextjs.org/docs/messages/missing-data-scroll-behavior');
        }
    }
    // Proceed with temporarily disabling smooth scrolling
    const existing = htmlElement.style.scrollBehavior;
    htmlElement.style.scrollBehavior = 'auto';
    if (!options.dontForceLayout) {
        // In Chrome-based browsers we need to force reflow before calling `scrollTo`.
        // Otherwise it will not pickup the change in scrollBehavior
        // More info here: https://github.com/vercel/next.js/issues/40719#issuecomment-1336248042
        htmlElement.getClientRects();
    }
    fn();
    htmlElement.style.scrollBehavior = existing;
} //# sourceMappingURL=disable-smooth-scroll.js.map
}),
"[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/client/components/bfcache.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

var __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useRouterBFCache", {
    enumerable: true,
    get: function() {
        return useRouterBFCache;
    }
});
const _react = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
// When the flag is disabled, only track the currently active tree
const MAX_BF_CACHE_ENTRIES = ("TURBOPACK compile-time falsy", 0) ? "TURBOPACK unreachable" : 1;
function useRouterBFCache(activeTree, activeStateKey) {
    // The currently active entry. The entries form a linked list, sorted in
    // order of most recently active. This allows us to reuse parts of the list
    // without cloning, unless there's a reordering or removal.
    // TODO: Once we start tracking back/forward history at each route level,
    // we should use the history order instead. In other words, when traversing
    // to an existing entry as a result of a popstate event, we should maintain
    // the existing order instead of moving it to the front of the list. I think
    // an initial implementation of this could be to pass an incrementing id
    // to history.pushState/replaceState, then use that here for ordering.
    const [prevActiveEntry, setPrevActiveEntry] = (0, _react.useState)(()=>{
        const initialEntry = {
            tree: activeTree,
            stateKey: activeStateKey,
            next: null
        };
        return initialEntry;
    });
    if (prevActiveEntry.tree === activeTree) {
        // Fast path. The active tree hasn't changed, so we can reuse the
        // existing state.
        return prevActiveEntry;
    }
    // The route tree changed. Note that this doesn't mean that the tree changed
    // *at this level* — the change may be due to a child route. Either way, we
    // need to either add or update the router tree in the bfcache.
    //
    // The rest of the code looks more complicated than it actually is because we
    // can't mutate the state in place; we have to copy-on-write.
    // Create a new entry for the active cache key. This is the head of the new
    // linked list.
    const newActiveEntry = {
        tree: activeTree,
        stateKey: activeStateKey,
        next: null
    };
    // We need to append the old list onto the new list. If the head of the new
    // list was already present in the cache, then we'll need to clone everything
    // that came before it. Then we can reuse the rest.
    let n = 1;
    let oldEntry = prevActiveEntry;
    let clonedEntry = newActiveEntry;
    while(oldEntry !== null && n < MAX_BF_CACHE_ENTRIES){
        if (oldEntry.stateKey === activeStateKey) {
            // Fast path. This entry in the old list that corresponds to the key that
            // is now active. We've already placed a clone of this entry at the front
            // of the new list. We can reuse the rest of the old list without cloning.
            // NOTE: We don't need to worry about eviction in this case because we
            // haven't increased the size of the cache, and we assume the max size
            // is constant across renders. If we were to change it to a dynamic limit,
            // then the implementation would need to account for that.
            clonedEntry.next = oldEntry.next;
            break;
        } else {
            // Clone the entry and append it to the list.
            n++;
            const entry = {
                tree: oldEntry.tree,
                stateKey: oldEntry.stateKey,
                next: null
            };
            clonedEntry.next = entry;
            clonedEntry = entry;
        }
        oldEntry = oldEntry.next;
    }
    setPrevActiveEntry(newActiveEntry);
    return newActiveEntry;
}
if ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {
    Object.defineProperty(exports.default, '__esModule', {
        value: true
    });
    Object.assign(exports.default, exports);
    module.exports = exports.default;
} //# sourceMappingURL=bfcache.js.map
}),
"[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/client/components/layout-router.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

var __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, /**
 * OuterLayoutRouter handles the current segment as well as <Offscreen> rendering of other segments.
 * It can be rendered next to each other with a different `parallelRouterKey`, allowing for Parallel routes.
 */ "default", {
    enumerable: true,
    get: function() {
        return OuterLayoutRouter;
    }
});
const _interop_require_default = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/@swc/helpers/cjs/_interop_require_default.cjs [app-client] (ecmascript)");
const _interop_require_wildcard = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/@swc/helpers/cjs/_interop_require_wildcard.cjs [app-client] (ecmascript)");
const _jsxruntime = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
const _routerreducertypes = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/client/components/router-reducer/router-reducer-types.js [app-client] (ecmascript)");
const _react = /*#__PURE__*/ _interop_require_wildcard._(__turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)"));
const _reactdom = /*#__PURE__*/ _interop_require_default._(__turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/compiled/react-dom/index.js [app-client] (ecmascript)"));
const _approutercontextsharedruntime = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/shared/lib/app-router-context.shared-runtime.js [app-client] (ecmascript)");
const _fetchserverresponse = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/client/components/router-reducer/fetch-server-response.js [app-client] (ecmascript)");
const _unresolvedthenable = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/client/components/unresolved-thenable.js [app-client] (ecmascript)");
const _errorboundary = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/client/components/error-boundary.js [app-client] (ecmascript)");
const _matchsegments = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/client/components/match-segments.js [app-client] (ecmascript)");
const _disablesmoothscroll = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/shared/lib/router/utils/disable-smooth-scroll.js [app-client] (ecmascript)");
const _redirectboundary = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/client/components/redirect-boundary.js [app-client] (ecmascript)");
const _errorboundary1 = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/client/components/http-access-fallback/error-boundary.js [app-client] (ecmascript)");
const _createroutercachekey = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/client/components/router-reducer/create-router-cache-key.js [app-client] (ecmascript)");
const _hasinterceptionrouteincurrenttree = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/client/components/router-reducer/reducers/has-interception-route-in-current-tree.js [app-client] (ecmascript)");
const _useactionqueue = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/client/components/use-action-queue.js [app-client] (ecmascript)");
const _bfcache = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/client/components/bfcache.js [app-client] (ecmascript)");
const _apppaths = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/shared/lib/router/utils/app-paths.js [app-client] (ecmascript)");
const Activity = ("TURBOPACK compile-time falsy", 0) ? "TURBOPACK unreachable" : null;
/**
 * Add refetch marker to router state at the point of the current layout segment.
 * This ensures the response returned is not further down than the current layout segment.
 */ function walkAddRefetch(segmentPathToWalk, treeToRecreate) {
    if (segmentPathToWalk) {
        const [segment, parallelRouteKey] = segmentPathToWalk;
        const isLast = segmentPathToWalk.length === 2;
        if ((0, _matchsegments.matchSegment)(treeToRecreate[0], segment)) {
            if (treeToRecreate[1].hasOwnProperty(parallelRouteKey)) {
                if (isLast) {
                    const subTree = walkAddRefetch(undefined, treeToRecreate[1][parallelRouteKey]);
                    return [
                        treeToRecreate[0],
                        {
                            ...treeToRecreate[1],
                            [parallelRouteKey]: [
                                subTree[0],
                                subTree[1],
                                subTree[2],
                                'refetch'
                            ]
                        }
                    ];
                }
                return [
                    treeToRecreate[0],
                    {
                        ...treeToRecreate[1],
                        [parallelRouteKey]: walkAddRefetch(segmentPathToWalk.slice(2), treeToRecreate[1][parallelRouteKey])
                    }
                ];
            }
        }
    }
    return treeToRecreate;
}
const __DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE = _reactdom.default.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;
// TODO-APP: Replace with new React API for finding dom nodes without a `ref` when available
/**
 * Wraps ReactDOM.findDOMNode with additional logic to hide React Strict Mode warning
 */ function findDOMNode(instance) {
    // Tree-shake for server bundle
    if (typeof window === 'undefined') return null;
    // __DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE.findDOMNode is null during module init.
    // We need to lazily reference it.
    const internal_reactDOMfindDOMNode = __DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE.findDOMNode;
    return internal_reactDOMfindDOMNode(instance);
}
const rectProperties = [
    'bottom',
    'height',
    'left',
    'right',
    'top',
    'width',
    'x',
    'y'
];
/**
 * Check if a HTMLElement is hidden or fixed/sticky position
 */ function shouldSkipElement(element) {
    // we ignore fixed or sticky positioned elements since they'll likely pass the "in-viewport" check
    // and will result in a situation we bail on scroll because of something like a fixed nav,
    // even though the actual page content is offscreen
    if ([
        'sticky',
        'fixed'
    ].includes(getComputedStyle(element).position)) {
        if ("TURBOPACK compile-time truthy", 1) {
            console.warn('Skipping auto-scroll behavior due to `position: sticky` or `position: fixed` on element:', element);
        }
        return true;
    }
    // Uses `getBoundingClientRect` to check if the element is hidden instead of `offsetParent`
    // because `offsetParent` doesn't consider document/body
    const rect = element.getBoundingClientRect();
    return rectProperties.every((item)=>rect[item] === 0);
}
/**
 * Check if the top corner of the HTMLElement is in the viewport.
 */ function topOfElementInViewport(element, viewportHeight) {
    const rect = element.getBoundingClientRect();
    return rect.top >= 0 && rect.top <= viewportHeight;
}
/**
 * Find the DOM node for a hash fragment.
 * If `top` the page has to scroll to the top of the page. This mirrors the browser's behavior.
 * If the hash fragment is an id, the page has to scroll to the element with that id.
 * If the hash fragment is a name, the page has to scroll to the first element with that name.
 */ function getHashFragmentDomNode(hashFragment) {
    // If the hash fragment is `top` the page has to scroll to the top of the page.
    if (hashFragment === 'top') {
        return document.body;
    }
    var _document_getElementById;
    // If the hash fragment is an id, the page has to scroll to the element with that id.
    return (_document_getElementById = document.getElementById(hashFragment)) != null ? _document_getElementById : document.getElementsByName(hashFragment)[0];
}
class InnerScrollAndFocusHandler extends _react.default.Component {
    componentDidMount() {
        this.handlePotentialScroll();
    }
    componentDidUpdate() {
        // Because this property is overwritten in handlePotentialScroll it's fine to always run it when true as it'll be set to false for subsequent renders.
        if (this.props.focusAndScrollRef.apply) {
            this.handlePotentialScroll();
        }
    }
    render() {
        return this.props.children;
    }
    constructor(...args){
        super(...args), this.handlePotentialScroll = ()=>{
            // Handle scroll and focus, it's only applied once in the first useEffect that triggers that changed.
            const { focusAndScrollRef, segmentPath } = this.props;
            if (focusAndScrollRef.apply) {
                // segmentPaths is an array of segment paths that should be scrolled to
                // if the current segment path is not in the array, the scroll is not applied
                // unless the array is empty, in which case the scroll is always applied
                if (focusAndScrollRef.segmentPaths.length !== 0 && !focusAndScrollRef.segmentPaths.some((scrollRefSegmentPath)=>segmentPath.every((segment, index)=>(0, _matchsegments.matchSegment)(segment, scrollRefSegmentPath[index])))) {
                    return;
                }
                let domNode = null;
                const hashFragment = focusAndScrollRef.hashFragment;
                if (hashFragment) {
                    domNode = getHashFragmentDomNode(hashFragment);
                }
                // `findDOMNode` is tricky because it returns just the first child if the component is a fragment.
                // This already caused a bug where the first child was a <link/> in head.
                if (!domNode) {
                    domNode = findDOMNode(this);
                }
                // If there is no DOM node this layout-router level is skipped. It'll be handled higher-up in the tree.
                if (!(domNode instanceof Element)) {
                    return;
                }
                // Verify if the element is a HTMLElement and if we want to consider it for scroll behavior.
                // If the element is skipped, try to select the next sibling and try again.
                while(!(domNode instanceof HTMLElement) || shouldSkipElement(domNode)){
                    if ("TURBOPACK compile-time truthy", 1) {
                        var _domNode_parentElement;
                        if (((_domNode_parentElement = domNode.parentElement) == null ? void 0 : _domNode_parentElement.localName) === 'head') {
                        // TODO: We enter this state when metadata was rendered as part of the page or via Next.js.
                        // This is always a bug in Next.js and caused by React hoisting metadata.
                        // We need to replace `findDOMNode` in favor of Fragment Refs (when available) so that we can skip over metadata.
                        }
                    }
                    // No siblings found that match the criteria are found, so handle scroll higher up in the tree instead.
                    if (domNode.nextElementSibling === null) {
                        return;
                    }
                    domNode = domNode.nextElementSibling;
                }
                // State is mutated to ensure that the focus and scroll is applied only once.
                focusAndScrollRef.apply = false;
                focusAndScrollRef.hashFragment = null;
                focusAndScrollRef.segmentPaths = [];
                (0, _disablesmoothscroll.disableSmoothScrollDuringRouteTransition)(()=>{
                    // In case of hash scroll, we only need to scroll the element into view
                    if (hashFragment) {
                        ;
                        domNode.scrollIntoView();
                        return;
                    }
                    // Store the current viewport height because reading `clientHeight` causes a reflow,
                    // and it won't change during this function.
                    const htmlElement = document.documentElement;
                    const viewportHeight = htmlElement.clientHeight;
                    // If the element's top edge is already in the viewport, exit early.
                    if (topOfElementInViewport(domNode, viewportHeight)) {
                        return;
                    }
                    // Otherwise, try scrolling go the top of the document to be backward compatible with pages
                    // scrollIntoView() called on `<html/>` element scrolls horizontally on chrome and firefox (that shouldn't happen)
                    // We could use it to scroll horizontally following RTL but that also seems to be broken - it will always scroll left
                    // scrollLeft = 0 also seems to ignore RTL and manually checking for RTL is too much hassle so we will scroll just vertically
                    htmlElement.scrollTop = 0;
                    // Scroll to domNode if domNode is not in viewport when scrolled to top of document
                    if (!topOfElementInViewport(domNode, viewportHeight)) {
                        // Scroll into view doesn't scroll horizontally by default when not needed
                        ;
                        domNode.scrollIntoView();
                    }
                }, {
                    // We will force layout by querying domNode position
                    dontForceLayout: true,
                    onlyHashChange: focusAndScrollRef.onlyHashChange
                });
                // Mutate after scrolling so that it can be read by `disableSmoothScrollDuringRouteTransition`
                focusAndScrollRef.onlyHashChange = false;
                // Set focus on the element
                domNode.focus();
            }
        };
    }
}
function ScrollAndFocusHandler(param) {
    let { segmentPath, children } = param;
    const context = (0, _react.useContext)(_approutercontextsharedruntime.GlobalLayoutRouterContext);
    if (!context) {
        throw Object.defineProperty(new Error('invariant global layout router not mounted'), "__NEXT_ERROR_CODE", {
            value: "E473",
            enumerable: false,
            configurable: true
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(InnerScrollAndFocusHandler, {
        segmentPath: segmentPath,
        focusAndScrollRef: context.focusAndScrollRef,
        children: children
    });
}
/**
 * InnerLayoutRouter handles rendering the provided segment based on the cache.
 */ function InnerLayoutRouter(param) {
    let { tree, segmentPath, cacheNode, url } = param;
    const context = (0, _react.useContext)(_approutercontextsharedruntime.GlobalLayoutRouterContext);
    if (!context) {
        throw Object.defineProperty(new Error('invariant global layout router not mounted'), "__NEXT_ERROR_CODE", {
            value: "E473",
            enumerable: false,
            configurable: true
        });
    }
    const { tree: fullTree } = context;
    // `rsc` represents the renderable node for this segment.
    // If this segment has a `prefetchRsc`, it's the statically prefetched data.
    // We should use that on initial render instead of `rsc`. Then we'll switch
    // to `rsc` when the dynamic response streams in.
    //
    // If no prefetch data is available, then we go straight to rendering `rsc`.
    const resolvedPrefetchRsc = cacheNode.prefetchRsc !== null ? cacheNode.prefetchRsc : cacheNode.rsc;
    // We use `useDeferredValue` to handle switching between the prefetched and
    // final values. The second argument is returned on initial render, then it
    // re-renders with the first argument.
    const rsc = (0, _react.useDeferredValue)(cacheNode.rsc, resolvedPrefetchRsc);
    // `rsc` is either a React node or a promise for a React node, except we
    // special case `null` to represent that this segment's data is missing. If
    // it's a promise, we need to unwrap it so we can determine whether or not the
    // data is missing.
    const resolvedRsc = typeof rsc === 'object' && rsc !== null && typeof rsc.then === 'function' ? (0, _react.use)(rsc) : rsc;
    if (!resolvedRsc) {
        // The data for this segment is not available, and there's no pending
        // navigation that will be able to fulfill it. We need to fetch more from
        // the server and patch the cache.
        // Check if there's already a pending request.
        let lazyData = cacheNode.lazyData;
        if (lazyData === null) {
            /**
       * Router state with refetch marker added
       */ // TODO-APP: remove ''
            const refetchTree = walkAddRefetch([
                '',
                ...segmentPath
            ], fullTree);
            const includeNextUrl = (0, _hasinterceptionrouteincurrenttree.hasInterceptionRouteInCurrentTree)(fullTree);
            const navigatedAt = Date.now();
            cacheNode.lazyData = lazyData = (0, _fetchserverresponse.fetchServerResponse)(new URL(url, location.origin), {
                flightRouterState: refetchTree,
                nextUrl: includeNextUrl ? context.nextUrl : null
            }).then((serverResponse)=>{
                (0, _react.startTransition)(()=>{
                    (0, _useactionqueue.dispatchAppRouterAction)({
                        type: _routerreducertypes.ACTION_SERVER_PATCH,
                        previousTree: fullTree,
                        serverResponse,
                        navigatedAt
                    });
                });
                return serverResponse;
            });
            // Suspend while waiting for lazyData to resolve
            (0, _react.use)(lazyData);
        }
        // Suspend infinitely as `changeByServerResponse` will cause a different part of the tree to be rendered.
        // A falsey `resolvedRsc` indicates missing data -- we should not commit that branch, and we need to wait for the data to arrive.
        (0, _react.use)(_unresolvedthenable.unresolvedThenable);
    }
    // If we get to this point, then we know we have something we can render.
    const subtree = /*#__PURE__*/ (0, _jsxruntime.jsx)(_approutercontextsharedruntime.LayoutRouterContext.Provider, {
        value: {
            parentTree: tree,
            parentCacheNode: cacheNode,
            parentSegmentPath: segmentPath,
            // TODO-APP: overriding of url for parallel routes
            url: url
        },
        children: resolvedRsc
    });
    // Ensure root layout is not wrapped in a div as the root layout renders `<html>`
    return subtree;
}
/**
 * Renders suspense boundary with the provided "loading" property as the fallback.
 * If no loading property is provided it renders the children without a suspense boundary.
 */ function LoadingBoundary(param) {
    let { loading, children } = param;
    // If loading is a promise, unwrap it. This happens in cases where we haven't
    // yet received the loading data from the server — which includes whether or
    // not this layout has a loading component at all.
    //
    // It's OK to suspend here instead of inside the fallback because this
    // promise will resolve simultaneously with the data for the segment itself.
    // So it will never suspend for longer than it would have if we didn't use
    // a Suspense fallback at all.
    let loadingModuleData;
    if (typeof loading === 'object' && loading !== null && typeof loading.then === 'function') {
        const promiseForLoading = loading;
        loadingModuleData = (0, _react.use)(promiseForLoading);
    } else {
        loadingModuleData = loading;
    }
    if (loadingModuleData) {
        const loadingRsc = loadingModuleData[0];
        const loadingStyles = loadingModuleData[1];
        const loadingScripts = loadingModuleData[2];
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_react.Suspense, {
            fallback: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                children: [
                    loadingStyles,
                    loadingScripts,
                    loadingRsc
                ]
            }),
            children: children
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_jsxruntime.Fragment, {
        children: children
    });
}
function OuterLayoutRouter(param) {
    let { parallelRouterKey, error, errorStyles, errorScripts, templateStyles, templateScripts, template, notFound, forbidden, unauthorized, segmentViewBoundaries } = param;
    const context = (0, _react.useContext)(_approutercontextsharedruntime.LayoutRouterContext);
    if (!context) {
        throw Object.defineProperty(new Error('invariant expected layout router to be mounted'), "__NEXT_ERROR_CODE", {
            value: "E56",
            enumerable: false,
            configurable: true
        });
    }
    const { parentTree, parentCacheNode, parentSegmentPath, url } = context;
    // Get the CacheNode for this segment by reading it from the parent segment's
    // child map.
    const parentParallelRoutes = parentCacheNode.parallelRoutes;
    let segmentMap = parentParallelRoutes.get(parallelRouterKey);
    // If the parallel router cache node does not exist yet, create it.
    // This writes to the cache when there is no item in the cache yet. It never *overwrites* existing cache items which is why it's safe in concurrent mode.
    if (!segmentMap) {
        segmentMap = new Map();
        parentParallelRoutes.set(parallelRouterKey, segmentMap);
    }
    const parentTreeSegment = parentTree[0];
    const segmentPath = parentSegmentPath === null ? // the code. We should clean this up.
    [
        parallelRouterKey
    ] : parentSegmentPath.concat([
        parentTreeSegment,
        parallelRouterKey
    ]);
    // The "state" key of a segment is the one passed to React — it represents the
    // identity of the UI tree. Whenever the state key changes, the tree is
    // recreated and the state is reset. In the App Router model, search params do
    // not cause state to be lost, so two segments with the same segment path but
    // different search params should have the same state key.
    //
    // The "cache" key of a segment, however, *does* include the search params, if
    // it's possible that the segment accessed the search params on the server.
    // (This only applies to page segments; layout segments cannot access search
    // params on the server.)
    const activeTree = parentTree[1][parallelRouterKey];
    const activeSegment = activeTree[0];
    const activeStateKey = (0, _createroutercachekey.createRouterCacheKey)(activeSegment, true) // no search params
    ;
    // At each level of the route tree, not only do we render the currently
    // active segment — we also render the last N segments that were active at
    // this level inside a hidden <Activity> boundary, to preserve their state
    // if or when the user navigates to them again.
    //
    // bfcacheEntry is a linked list of FlightRouterStates.
    let bfcacheEntry = (0, _bfcache.useRouterBFCache)(activeTree, activeStateKey);
    let children = [];
    do {
        const tree = bfcacheEntry.tree;
        const stateKey = bfcacheEntry.stateKey;
        const segment = tree[0];
        const cacheKey = (0, _createroutercachekey.createRouterCacheKey)(segment);
        // Read segment path from the parallel router cache node.
        let cacheNode = segmentMap.get(cacheKey);
        if (cacheNode === undefined) {
            // When data is not available during rendering client-side we need to fetch
            // it from the server.
            const newLazyCacheNode = {
                lazyData: null,
                rsc: null,
                prefetchRsc: null,
                head: null,
                prefetchHead: null,
                parallelRoutes: new Map(),
                loading: null,
                navigatedAt: -1
            };
            // Flight data fetch kicked off during render and put into the cache.
            cacheNode = newLazyCacheNode;
            segmentMap.set(cacheKey, newLazyCacheNode);
        }
        /*
    - Error boundary
      - Only renders error boundary if error component is provided.
      - Rendered for each segment to ensure they have their own error state.
      - When gracefully degrade for bots, skip rendering error boundary.
    - Loading boundary
      - Only renders suspense boundary if loading components is provided.
      - Rendered for each segment to ensure they have their own loading state.
      - Passed to the router during rendering to ensure it can be immediately rendered when suspending on a Flight fetch.
  */ let segmentBoundaryTriggerNode = null;
        let segmentViewStateNode = null;
        if ("TURBOPACK compile-time truthy", 1) {
            const { SegmentBoundaryTriggerNode, SegmentViewStateNode } = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js [app-client] (ecmascript)");
            const pagePrefix = (0, _apppaths.normalizeAppPath)(url);
            segmentViewStateNode = /*#__PURE__*/ (0, _jsxruntime.jsx)(SegmentViewStateNode, {
                page: pagePrefix
            }, pagePrefix);
            segmentBoundaryTriggerNode = /*#__PURE__*/ (0, _jsxruntime.jsx)(_jsxruntime.Fragment, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(SegmentBoundaryTriggerNode, {})
            });
        }
        // TODO: The loading module data for a segment is stored on the parent, then
        // applied to each of that parent segment's parallel route slots. In the
        // simple case where there's only one parallel route (the `children` slot),
        // this is no different from if the loading module data where stored on the
        // child directly. But I'm not sure this actually makes sense when there are
        // multiple parallel routes. It's not a huge issue because you always have
        // the option to define a narrower loading boundary for a particular slot. But
        // this sort of smells like an implementation accident to me.
        const loadingModuleData = parentCacheNode.loading;
        let child = /*#__PURE__*/ (0, _jsxruntime.jsxs)(_approutercontextsharedruntime.TemplateContext.Provider, {
            value: /*#__PURE__*/ (0, _jsxruntime.jsxs)(ScrollAndFocusHandler, {
                segmentPath: segmentPath,
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_errorboundary.ErrorBoundary, {
                        errorComponent: error,
                        errorStyles: errorStyles,
                        errorScripts: errorScripts,
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(LoadingBoundary, {
                            loading: loadingModuleData,
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_errorboundary1.HTTPAccessFallbackBoundary, {
                                notFound: notFound,
                                forbidden: forbidden,
                                unauthorized: unauthorized,
                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_redirectboundary.RedirectBoundary, {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(InnerLayoutRouter, {
                                            url: url,
                                            tree: tree,
                                            cacheNode: cacheNode,
                                            segmentPath: segmentPath
                                        }),
                                        segmentBoundaryTriggerNode
                                    ]
                                })
                            })
                        })
                    }),
                    segmentViewStateNode
                ]
            }),
            children: [
                templateStyles,
                templateScripts,
                template
            ]
        }, stateKey);
        if ("TURBOPACK compile-time truthy", 1) {
            const { SegmentStateProvider } = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js [app-client] (ecmascript)");
            child = /*#__PURE__*/ (0, _jsxruntime.jsxs)(SegmentStateProvider, {
                children: [
                    child,
                    segmentViewBoundaries
                ]
            }, stateKey);
        }
        if ("TURBOPACK compile-time falsy", 0) //TURBOPACK unreachable
        ;
        children.push(child);
        bfcacheEntry = bfcacheEntry.next;
    }while (bfcacheEntry !== null)
    return children;
}
if ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {
    Object.defineProperty(exports.default, '__esModule', {
        value: true
    });
    Object.assign(exports.default, exports);
    module.exports = exports.default;
} //# sourceMappingURL=layout-router.js.map
}),
"[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/client/components/render-from-template-context.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return RenderFromTemplateContext;
    }
});
const _interop_require_wildcard = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/@swc/helpers/cjs/_interop_require_wildcard.cjs [app-client] (ecmascript)");
const _jsxruntime = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
const _react = /*#__PURE__*/ _interop_require_wildcard._(__turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)"));
const _approutercontextsharedruntime = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/shared/lib/app-router-context.shared-runtime.js [app-client] (ecmascript)");
function RenderFromTemplateContext() {
    const children = (0, _react.useContext)(_approutercontextsharedruntime.TemplateContext);
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_jsxruntime.Fragment, {
        children: children
    });
}
if ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {
    Object.defineProperty(exports.default, '__esModule', {
        value: true
    });
    Object.assign(exports.default, exports);
    module.exports = exports.default;
} //# sourceMappingURL=render-from-template-context.js.map
}),
"[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/server/web/spec-extension/adapters/reflect.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "ReflectAdapter", {
    enumerable: true,
    get: function() {
        return ReflectAdapter;
    }
});
class ReflectAdapter {
    static get(target, prop, receiver) {
        const value = Reflect.get(target, prop, receiver);
        if (typeof value === 'function') {
            return value.bind(target);
        }
        return value;
    }
    static set(target, prop, value, receiver) {
        return Reflect.set(target, prop, value, receiver);
    }
    static has(target, prop) {
        return Reflect.has(target, prop);
    }
    static deleteProperty(target, prop) {
        return Reflect.deleteProperty(target, prop);
    }
} //# sourceMappingURL=reflect.js.map
}),
"[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/shared/lib/utils/reflect-utils.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

// This regex will have fast negatives meaning valid identifiers may not pass
// this test. However this is only used during static generation to provide hints
// about why a page bailed out of some or all prerendering and we can use bracket notation
// for example while `ಠ_ಠ` is a valid identifier it's ok to print `searchParams['ಠ_ಠ']`
// even if this would have been fine too `searchParams.ಠ_ಠ`
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    describeHasCheckingStringProperty: null,
    describeStringPropertyAccess: null,
    wellKnownProperties: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    describeHasCheckingStringProperty: function() {
        return describeHasCheckingStringProperty;
    },
    describeStringPropertyAccess: function() {
        return describeStringPropertyAccess;
    },
    wellKnownProperties: function() {
        return wellKnownProperties;
    }
});
const isDefinitelyAValidIdentifier = /^[A-Za-z_$][A-Za-z0-9_$]*$/;
function describeStringPropertyAccess(target, prop) {
    if (isDefinitelyAValidIdentifier.test(prop)) {
        return "`" + target + "." + prop + "`";
    }
    return "`" + target + "[" + JSON.stringify(prop) + "]`";
}
function describeHasCheckingStringProperty(target, prop) {
    const stringifiedProp = JSON.stringify(prop);
    return "`Reflect.has(" + target + ", " + stringifiedProp + ")`, `" + stringifiedProp + " in " + target + "`, or similar";
}
const wellKnownProperties = new Set([
    'hasOwnProperty',
    'isPrototypeOf',
    'propertyIsEnumerable',
    'toString',
    'valueOf',
    'toLocaleString',
    // Promise prototype
    // fallthrough
    'then',
    'catch',
    'finally',
    // React Promise extension
    // fallthrough
    'status',
    // React introspection
    'displayName',
    '_debugInfo',
    // Common tested properties
    // fallthrough
    'toJSON',
    '$$typeof',
    '__esModule'
]); //# sourceMappingURL=reflect-utils.js.map
}),
"[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/client/request/search-params.browser.dev.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

var __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "createRenderSearchParamsFromClient", {
    enumerable: true,
    get: function() {
        return createRenderSearchParamsFromClient;
    }
});
const _reflect = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/server/web/spec-extension/adapters/reflect.js [app-client] (ecmascript)");
const _reflectutils = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/shared/lib/utils/reflect-utils.js [app-client] (ecmascript)");
const CachedSearchParams = new WeakMap();
function makeUntrackedExoticSearchParamsWithDevWarnings(underlyingSearchParams) {
    const cachedSearchParams = CachedSearchParams.get(underlyingSearchParams);
    if (cachedSearchParams) {
        return cachedSearchParams;
    }
    const proxiedProperties = new Set();
    const unproxiedProperties = [];
    const promise = Promise.resolve(underlyingSearchParams);
    Object.keys(underlyingSearchParams).forEach((prop)=>{
        if (_reflectutils.wellKnownProperties.has(prop)) {
            // These properties cannot be shadowed because they need to be the
            // true underlying value for Promises to work correctly at runtime
            unproxiedProperties.push(prop);
        } else {
            proxiedProperties.add(prop);
            promise[prop] = underlyingSearchParams[prop];
        }
    });
    const proxiedPromise = new Proxy(promise, {
        get (target, prop, receiver) {
            if (typeof prop === 'string') {
                if (!_reflectutils.wellKnownProperties.has(prop) && (proxiedProperties.has(prop) || // We are accessing a property that doesn't exist on the promise nor
                // the underlying searchParams.
                Reflect.has(target, prop) === false)) {
                    const expression = (0, _reflectutils.describeStringPropertyAccess)('searchParams', prop);
                    warnForSyncAccess(expression);
                }
            }
            return _reflect.ReflectAdapter.get(target, prop, receiver);
        },
        set (target, prop, value, receiver) {
            if (typeof prop === 'string') {
                proxiedProperties.delete(prop);
            }
            return Reflect.set(target, prop, value, receiver);
        },
        has (target, prop) {
            if (typeof prop === 'string') {
                if (!_reflectutils.wellKnownProperties.has(prop) && (proxiedProperties.has(prop) || // We are accessing a property that doesn't exist on the promise nor
                // the underlying searchParams.
                Reflect.has(target, prop) === false)) {
                    const expression = (0, _reflectutils.describeHasCheckingStringProperty)('searchParams', prop);
                    warnForSyncAccess(expression);
                }
            }
            return Reflect.has(target, prop);
        },
        ownKeys (target) {
            warnForSyncSpread();
            return Reflect.ownKeys(target);
        }
    });
    CachedSearchParams.set(underlyingSearchParams, proxiedPromise);
    return proxiedPromise;
}
// Similar to `makeUntrackedExoticSearchParamsWithDevWarnings`, but just logging
// the sync access without actually defining the search params on the promise.
function makeUntrackedSearchParamsWithDevWarnings(underlyingSearchParams) {
    const cachedSearchParams = CachedSearchParams.get(underlyingSearchParams);
    if (cachedSearchParams) {
        return cachedSearchParams;
    }
    const proxiedProperties = new Set();
    const unproxiedProperties = [];
    const promise = Promise.resolve(underlyingSearchParams);
    Object.keys(underlyingSearchParams).forEach((prop)=>{
        if (_reflectutils.wellKnownProperties.has(prop)) {
            // These properties cannot be shadowed because they need to be the
            // true underlying value for Promises to work correctly at runtime
            unproxiedProperties.push(prop);
        } else {
            proxiedProperties.add(prop);
        }
    });
    const proxiedPromise = new Proxy(promise, {
        get (target, prop, receiver) {
            if (typeof prop === 'string') {
                if (!_reflectutils.wellKnownProperties.has(prop) && (proxiedProperties.has(prop) || // We are accessing a property that doesn't exist on the promise nor
                // the underlying searchParams.
                Reflect.has(target, prop) === false)) {
                    const expression = (0, _reflectutils.describeStringPropertyAccess)('searchParams', prop);
                    warnForSyncAccess(expression);
                }
            }
            return _reflect.ReflectAdapter.get(target, prop, receiver);
        },
        set (target, prop, value, receiver) {
            if (typeof prop === 'string') {
                proxiedProperties.delete(prop);
            }
            return Reflect.set(target, prop, value, receiver);
        },
        has (target, prop) {
            if (typeof prop === 'string') {
                if (!_reflectutils.wellKnownProperties.has(prop) && (proxiedProperties.has(prop) || // We are accessing a property that doesn't exist on the promise nor
                // the underlying searchParams.
                Reflect.has(target, prop) === false)) {
                    const expression = (0, _reflectutils.describeHasCheckingStringProperty)('searchParams', prop);
                    warnForSyncAccess(expression);
                }
            }
            return Reflect.has(target, prop);
        },
        ownKeys (target) {
            warnForSyncSpread();
            return Reflect.ownKeys(target);
        }
    });
    CachedSearchParams.set(underlyingSearchParams, proxiedPromise);
    return proxiedPromise;
}
function warnForSyncAccess(expression) {
    console.error("A searchParam property was accessed directly with " + expression + ". " + "`searchParams` should be unwrapped with `React.use()` before accessing its properties. " + "Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis");
}
function warnForSyncSpread() {
    console.error("The keys of `searchParams` were accessed directly. " + "`searchParams` should be unwrapped with `React.use()` before accessing its properties. " + "Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis");
}
function createRenderSearchParamsFromClient(underlyingSearchParams) {
    if ("TURBOPACK compile-time falsy", 0) //TURBOPACK unreachable
    ;
    return makeUntrackedExoticSearchParamsWithDevWarnings(underlyingSearchParams);
}
if ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {
    Object.defineProperty(exports.default, '__esModule', {
        value: true
    });
    Object.assign(exports.default, exports);
    module.exports = exports.default;
} //# sourceMappingURL=search-params.browser.dev.js.map
}),
"[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/client/request/search-params.browser.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

var __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "createRenderSearchParamsFromClient", {
    enumerable: true,
    get: function() {
        return createRenderSearchParamsFromClient;
    }
});
const createRenderSearchParamsFromClient = ("TURBOPACK compile-time truthy", 1) ? __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/client/request/search-params.browser.dev.js [app-client] (ecmascript)").createRenderSearchParamsFromClient : "TURBOPACK unreachable";
if ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {
    Object.defineProperty(exports.default, '__esModule', {
        value: true
    });
    Object.assign(exports.default, exports);
    module.exports = exports.default;
} //# sourceMappingURL=search-params.browser.js.map
}),
"[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/client/request/params.browser.dev.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

var __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "createRenderParamsFromClient", {
    enumerable: true,
    get: function() {
        return createRenderParamsFromClient;
    }
});
const _reflect = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/server/web/spec-extension/adapters/reflect.js [app-client] (ecmascript)");
const _invarianterror = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/shared/lib/invariant-error.js [app-client] (ecmascript)");
const _reflectutils = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/shared/lib/utils/reflect-utils.js [app-client] (ecmascript)");
const CachedParams = new WeakMap();
function makeDynamicallyTrackedExoticParamsWithDevWarnings(underlyingParams) {
    const cachedParams = CachedParams.get(underlyingParams);
    if (cachedParams) {
        return cachedParams;
    }
    // We don't use makeResolvedReactPromise here because params
    // supports copying with spread and we don't want to unnecessarily
    // instrument the promise with spreadable properties of ReactPromise.
    const promise = Promise.resolve(underlyingParams);
    const proxiedProperties = new Set();
    const unproxiedProperties = [];
    Object.keys(underlyingParams).forEach((prop)=>{
        if (_reflectutils.wellKnownProperties.has(prop)) {
        // These properties cannot be shadowed because they need to be the
        // true underlying value for Promises to work correctly at runtime
        } else {
            proxiedProperties.add(prop);
            promise[prop] = underlyingParams[prop];
        }
    });
    const proxiedPromise = new Proxy(promise, {
        get (target, prop, receiver) {
            if (typeof prop === 'string') {
                if (proxiedProperties.has(prop)) {
                    const expression = (0, _reflectutils.describeStringPropertyAccess)('params', prop);
                    warnForSyncAccess(expression);
                }
            }
            return _reflect.ReflectAdapter.get(target, prop, receiver);
        },
        set (target, prop, value, receiver) {
            if (typeof prop === 'string') {
                proxiedProperties.delete(prop);
            }
            return _reflect.ReflectAdapter.set(target, prop, value, receiver);
        },
        ownKeys (target) {
            warnForEnumeration(unproxiedProperties);
            return Reflect.ownKeys(target);
        }
    });
    CachedParams.set(underlyingParams, proxiedPromise);
    return proxiedPromise;
}
// Similar to `makeDynamicallyTrackedExoticParamsWithDevWarnings`, but just
// logging the sync access without actually defining the params on the promise.
function makeDynamicallyTrackedParamsWithDevWarnings(underlyingParams) {
    const cachedParams = CachedParams.get(underlyingParams);
    if (cachedParams) {
        return cachedParams;
    }
    // We don't use makeResolvedReactPromise here because params
    // supports copying with spread and we don't want to unnecessarily
    // instrument the promise with spreadable properties of ReactPromise.
    const promise = Promise.resolve(underlyingParams);
    const proxiedProperties = new Set();
    const unproxiedProperties = [];
    Object.keys(underlyingParams).forEach((prop)=>{
        if (_reflectutils.wellKnownProperties.has(prop)) {
        // These properties cannot be shadowed because they need to be the
        // true underlying value for Promises to work correctly at runtime
        } else {
            proxiedProperties.add(prop);
        }
    });
    const proxiedPromise = new Proxy(promise, {
        get (target, prop, receiver) {
            if (typeof prop === 'string') {
                if (proxiedProperties.has(prop)) {
                    const expression = (0, _reflectutils.describeStringPropertyAccess)('params', prop);
                    warnForSyncAccess(expression);
                }
            }
            return _reflect.ReflectAdapter.get(target, prop, receiver);
        },
        set (target, prop, value, receiver) {
            if (typeof prop === 'string') {
                proxiedProperties.delete(prop);
            }
            return _reflect.ReflectAdapter.set(target, prop, value, receiver);
        },
        ownKeys (target) {
            warnForEnumeration(unproxiedProperties);
            return Reflect.ownKeys(target);
        }
    });
    CachedParams.set(underlyingParams, proxiedPromise);
    return proxiedPromise;
}
function warnForSyncAccess(expression) {
    console.error("A param property was accessed directly with " + expression + ". `params` is now a Promise and should be unwrapped with `React.use()` before accessing properties of the underlying params object. In this version of Next.js direct access to param properties is still supported to facilitate migration but in a future version you will be required to unwrap `params` with `React.use()`.");
}
function warnForEnumeration(missingProperties) {
    if (missingProperties.length) {
        const describedMissingProperties = describeListOfPropertyNames(missingProperties);
        console.error("params are being enumerated incompletely missing these properties: " + describedMissingProperties + ". " + "`params` should be unwrapped with `React.use()` before using its value. " + "Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis");
    } else {
        console.error("params are being enumerated. " + "`params` should be unwrapped with `React.use()` before using its value. " + "Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis");
    }
}
function describeListOfPropertyNames(properties) {
    switch(properties.length){
        case 0:
            throw Object.defineProperty(new _invarianterror.InvariantError('Expected describeListOfPropertyNames to be called with a non-empty list of strings.'), "__NEXT_ERROR_CODE", {
                value: "E531",
                enumerable: false,
                configurable: true
            });
        case 1:
            return "`" + properties[0] + "`";
        case 2:
            return "`" + properties[0] + "` and `" + properties[1] + "`";
        default:
            {
                let description = '';
                for(let i = 0; i < properties.length - 1; i++){
                    description += "`" + properties[i] + "`, ";
                }
                description += ", and `" + properties[properties.length - 1] + "`";
                return description;
            }
    }
}
function createRenderParamsFromClient(clientParams) {
    if ("TURBOPACK compile-time falsy", 0) //TURBOPACK unreachable
    ;
    return makeDynamicallyTrackedExoticParamsWithDevWarnings(clientParams);
}
if ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {
    Object.defineProperty(exports.default, '__esModule', {
        value: true
    });
    Object.assign(exports.default, exports);
    module.exports = exports.default;
} //# sourceMappingURL=params.browser.dev.js.map
}),
"[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/client/request/params.browser.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

var __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "createRenderParamsFromClient", {
    enumerable: true,
    get: function() {
        return createRenderParamsFromClient;
    }
});
const createRenderParamsFromClient = ("TURBOPACK compile-time truthy", 1) ? __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/client/request/params.browser.dev.js [app-client] (ecmascript)").createRenderParamsFromClient : "TURBOPACK unreachable";
if ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {
    Object.defineProperty(exports.default, '__esModule', {
        value: true
    });
    Object.assign(exports.default, exports);
    module.exports = exports.default;
} //# sourceMappingURL=params.browser.js.map
}),
"[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/server/create-deduped-by-callsite-server-error-logger.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

var __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "createDedupedByCallsiteServerErrorLoggerDev", {
    enumerable: true,
    get: function() {
        return createDedupedByCallsiteServerErrorLoggerDev;
    }
});
const _react = /*#__PURE__*/ _interop_require_wildcard(__turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)"));
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const errorRef = {
    current: null
};
// React.cache is currently only available in canary/experimental React channels.
const cache = typeof _react.cache === 'function' ? _react.cache : (fn)=>fn;
// When Cache Components is enabled, we record these as errors so that they
// are captured by the dev overlay as it's more critical to fix these
// when enabled.
const logErrorOrWarn = ("TURBOPACK compile-time falsy", 0) ? "TURBOPACK unreachable" : console.warn;
// We don't want to dedupe across requests.
// The developer might've just attempted to fix the warning so we should warn again if it still happens.
const flushCurrentErrorIfNew = cache((key)=>{
    try {
        logErrorOrWarn(errorRef.current);
    } finally{
        errorRef.current = null;
    }
});
function createDedupedByCallsiteServerErrorLoggerDev(getMessage) {
    return function logDedupedError() {
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
            args[_key] = arguments[_key];
        }
        const message = getMessage(...args);
        if ("TURBOPACK compile-time truthy", 1) {
            var _stack;
            const callStackFrames = (_stack = new Error().stack) == null ? void 0 : _stack.split('\n');
            if (callStackFrames === undefined || callStackFrames.length < 4) {
                logErrorOrWarn(message);
            } else {
                // Error:
                //   logDedupedError
                //   asyncApiBeingAccessedSynchronously
                //   <userland callsite>
                // TODO: This breaks if sourcemaps with ignore lists are enabled.
                const key = callStackFrames[4];
                errorRef.current = message;
                flushCurrentErrorIfNew(key);
            }
        } else //TURBOPACK unreachable
        ;
    };
} //# sourceMappingURL=create-deduped-by-callsite-server-error-logger.js.map
}),
"[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/server/app-render/after-task-async-storage-instance.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "afterTaskAsyncStorageInstance", {
    enumerable: true,
    get: function() {
        return afterTaskAsyncStorageInstance;
    }
});
const _asynclocalstorage = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/server/app-render/async-local-storage.js [app-client] (ecmascript)");
const afterTaskAsyncStorageInstance = (0, _asynclocalstorage.createAsyncLocalStorage)(); //# sourceMappingURL=after-task-async-storage-instance.js.map
}),
"[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/server/app-render/after-task-async-storage.external.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "afterTaskAsyncStorage", {
    enumerable: true,
    get: function() {
        return _aftertaskasyncstorageinstance.afterTaskAsyncStorageInstance;
    }
});
const _aftertaskasyncstorageinstance = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/server/app-render/after-task-async-storage-instance.js [app-client] (ecmascript)"); //# sourceMappingURL=after-task-async-storage.external.js.map
}),
"[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/server/request/utils.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    isRequestAPICallableInsideAfter: null,
    throwForSearchParamsAccessInUseCache: null,
    throwWithStaticGenerationBailoutError: null,
    throwWithStaticGenerationBailoutErrorWithDynamicError: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    isRequestAPICallableInsideAfter: function() {
        return isRequestAPICallableInsideAfter;
    },
    throwForSearchParamsAccessInUseCache: function() {
        return throwForSearchParamsAccessInUseCache;
    },
    throwWithStaticGenerationBailoutError: function() {
        return throwWithStaticGenerationBailoutError;
    },
    throwWithStaticGenerationBailoutErrorWithDynamicError: function() {
        return throwWithStaticGenerationBailoutErrorWithDynamicError;
    }
});
const _staticgenerationbailout = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/client/components/static-generation-bailout.js [app-client] (ecmascript)");
const _aftertaskasyncstorageexternal = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/server/app-render/after-task-async-storage.external.js [app-client] (ecmascript)");
function throwWithStaticGenerationBailoutError(route, expression) {
    throw Object.defineProperty(new _staticgenerationbailout.StaticGenBailoutError("Route ".concat(route, " couldn't be rendered statically because it used ").concat(expression, ". See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering")), "__NEXT_ERROR_CODE", {
        value: "E576",
        enumerable: false,
        configurable: true
    });
}
function throwWithStaticGenerationBailoutErrorWithDynamicError(route, expression) {
    throw Object.defineProperty(new _staticgenerationbailout.StaticGenBailoutError("Route ".concat(route, ' with `dynamic = "error"` couldn\'t be rendered statically because it used ').concat(expression, ". See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering")), "__NEXT_ERROR_CODE", {
        value: "E543",
        enumerable: false,
        configurable: true
    });
}
function throwForSearchParamsAccessInUseCache(workStore, constructorOpt) {
    var _workStore;
    const error = Object.defineProperty(new Error("Route ".concat(workStore.route, ' used "searchParams" inside "use cache". Accessing dynamic request data inside a cache scope is not supported. If you need some search params inside a cached function await "searchParams" outside of the cached function and pass only the required search params as arguments to the cached function. See more info here: https://nextjs.org/docs/messages/next-request-in-use-cache')), "__NEXT_ERROR_CODE", {
        value: "E779",
        enumerable: false,
        configurable: true
    });
    Error.captureStackTrace(error, constructorOpt);
    var _invalidDynamicUsageError;
    (_invalidDynamicUsageError = (_workStore = workStore).invalidDynamicUsageError) !== null && _invalidDynamicUsageError !== void 0 ? _invalidDynamicUsageError : _workStore.invalidDynamicUsageError = error;
    throw error;
}
function isRequestAPICallableInsideAfter() {
    const afterTaskStore = _aftertaskasyncstorageexternal.afterTaskAsyncStorage.getStore();
    return (afterTaskStore == null ? void 0 : afterTaskStore.rootTaskSpawnPhase) === 'action';
} //# sourceMappingURL=utils.js.map
}),
"[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/server/request/search-params.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

var __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    createPrerenderSearchParamsForClientPage: null,
    createSearchParamsFromClient: null,
    createServerSearchParamsForMetadata: null,
    createServerSearchParamsForServerPage: null,
    makeErroringSearchParamsForUseCache: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    createPrerenderSearchParamsForClientPage: function() {
        return createPrerenderSearchParamsForClientPage;
    },
    createSearchParamsFromClient: function() {
        return createSearchParamsFromClient;
    },
    createServerSearchParamsForMetadata: function() {
        return createServerSearchParamsForMetadata;
    },
    createServerSearchParamsForServerPage: function() {
        return createServerSearchParamsForServerPage;
    },
    makeErroringSearchParamsForUseCache: function() {
        return makeErroringSearchParamsForUseCache;
    }
});
const _reflect = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/server/web/spec-extension/adapters/reflect.js [app-client] (ecmascript)");
const _dynamicrendering = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/server/app-render/dynamic-rendering.js [app-client] (ecmascript)");
const _workunitasyncstorageexternal = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/server/app-render/work-unit-async-storage.external.js [app-client] (ecmascript)");
const _invarianterror = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/shared/lib/invariant-error.js [app-client] (ecmascript)");
const _dynamicrenderingutils = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/server/dynamic-rendering-utils.js [app-client] (ecmascript)");
const _creatededupedbycallsiteservererrorlogger = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/server/create-deduped-by-callsite-server-error-logger.js [app-client] (ecmascript)");
const _reflectutils = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/shared/lib/utils/reflect-utils.js [app-client] (ecmascript)");
const _utils = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/server/request/utils.js [app-client] (ecmascript)");
function createSearchParamsFromClient(underlyingSearchParams, workStore) {
    const workUnitStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();
    if (workUnitStore) {
        switch(workUnitStore.type){
            case 'prerender':
            case 'prerender-client':
            case 'prerender-ppr':
            case 'prerender-legacy':
                return createStaticPrerenderSearchParams(workStore, workUnitStore);
            case 'prerender-runtime':
                throw Object.defineProperty(new _invarianterror.InvariantError('createSearchParamsFromClient should not be called in a runtime prerender.'), "__NEXT_ERROR_CODE", {
                    value: "E769",
                    enumerable: false,
                    configurable: true
                });
            case 'cache':
            case 'private-cache':
            case 'unstable-cache':
                throw Object.defineProperty(new _invarianterror.InvariantError('createSearchParamsFromClient should not be called in cache contexts.'), "__NEXT_ERROR_CODE", {
                    value: "E739",
                    enumerable: false,
                    configurable: true
                });
            case 'request':
                return createRenderSearchParams(underlyingSearchParams, workStore);
            default:
                workUnitStore;
        }
    }
    (0, _workunitasyncstorageexternal.throwInvariantForMissingStore)();
}
const createServerSearchParamsForMetadata = createServerSearchParamsForServerPage;
function createServerSearchParamsForServerPage(underlyingSearchParams, workStore) {
    const workUnitStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();
    if (workUnitStore) {
        switch(workUnitStore.type){
            case 'prerender':
            case 'prerender-client':
            case 'prerender-ppr':
            case 'prerender-legacy':
                return createStaticPrerenderSearchParams(workStore, workUnitStore);
            case 'cache':
            case 'private-cache':
            case 'unstable-cache':
                throw Object.defineProperty(new _invarianterror.InvariantError('createServerSearchParamsForServerPage should not be called in cache contexts.'), "__NEXT_ERROR_CODE", {
                    value: "E747",
                    enumerable: false,
                    configurable: true
                });
            case 'prerender-runtime':
                return createRuntimePrerenderSearchParams(underlyingSearchParams, workUnitStore);
            case 'request':
                return createRenderSearchParams(underlyingSearchParams, workStore);
            default:
                workUnitStore;
        }
    }
    (0, _workunitasyncstorageexternal.throwInvariantForMissingStore)();
}
function createPrerenderSearchParamsForClientPage(workStore) {
    if (workStore.forceStatic) {
        // When using forceStatic we override all other logic and always just return an empty
        // dictionary object.
        return Promise.resolve({});
    }
    const workUnitStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();
    if (workUnitStore) {
        switch(workUnitStore.type){
            case 'prerender':
            case 'prerender-client':
                // We're prerendering in a mode that aborts (cacheComponents) and should stall
                // the promise to ensure the RSC side is considered dynamic
                return (0, _dynamicrenderingutils.makeHangingPromise)(workUnitStore.renderSignal, workStore.route, '`searchParams`');
            case 'prerender-runtime':
                throw Object.defineProperty(new _invarianterror.InvariantError('createPrerenderSearchParamsForClientPage should not be called in a runtime prerender.'), "__NEXT_ERROR_CODE", {
                    value: "E768",
                    enumerable: false,
                    configurable: true
                });
            case 'cache':
            case 'private-cache':
            case 'unstable-cache':
                throw Object.defineProperty(new _invarianterror.InvariantError('createPrerenderSearchParamsForClientPage should not be called in cache contexts.'), "__NEXT_ERROR_CODE", {
                    value: "E746",
                    enumerable: false,
                    configurable: true
                });
            case 'prerender-ppr':
            case 'prerender-legacy':
            case 'request':
                return Promise.resolve({});
            default:
                workUnitStore;
        }
    }
    (0, _workunitasyncstorageexternal.throwInvariantForMissingStore)();
}
function createStaticPrerenderSearchParams(workStore, prerenderStore) {
    if (workStore.forceStatic) {
        // When using forceStatic we override all other logic and always just return an empty
        // dictionary object.
        return Promise.resolve({});
    }
    switch(prerenderStore.type){
        case 'prerender':
        case 'prerender-client':
            // We are in a cacheComponents (PPR or otherwise) prerender
            return makeHangingSearchParams(workStore, prerenderStore);
        case 'prerender-ppr':
        case 'prerender-legacy':
            // We are in a legacy static generation and need to interrupt the
            // prerender when search params are accessed.
            return makeErroringExoticSearchParams(workStore, prerenderStore);
        default:
            return prerenderStore;
    }
}
function createRuntimePrerenderSearchParams(underlyingSearchParams, workUnitStore) {
    return (0, _dynamicrendering.delayUntilRuntimeStage)(workUnitStore, ("TURBOPACK compile-time falsy", 0) ? "TURBOPACK unreachable" : makeUntrackedExoticSearchParams(underlyingSearchParams));
}
function createRenderSearchParams(underlyingSearchParams, workStore) {
    if (workStore.forceStatic) {
        // When using forceStatic we override all other logic and always just return an empty
        // dictionary object.
        return Promise.resolve({});
    } else {
        if ("TURBOPACK compile-time truthy", 1) {
            // Semantically we only need the dev tracking when running in `next dev`
            // but since you would never use next dev with production NODE_ENV we use this
            // as a proxy so we can statically exclude this code from production builds.
            if ("TURBOPACK compile-time falsy", 0) //TURBOPACK unreachable
            ;
            return makeDynamicallyTrackedExoticSearchParamsWithDevWarnings(underlyingSearchParams, workStore);
        } else //TURBOPACK unreachable
        ;
    }
}
const CachedSearchParams = new WeakMap();
const CachedSearchParamsForUseCache = new WeakMap();
function makeHangingSearchParams(workStore, prerenderStore) {
    const cachedSearchParams = CachedSearchParams.get(prerenderStore);
    if (cachedSearchParams) {
        return cachedSearchParams;
    }
    const promise = (0, _dynamicrenderingutils.makeHangingPromise)(prerenderStore.renderSignal, workStore.route, '`searchParams`');
    const proxiedPromise = new Proxy(promise, {
        get (target, prop, receiver) {
            if (Object.hasOwn(promise, prop)) {
                // The promise has this property directly. we must return it.
                // We know it isn't a dynamic access because it can only be something
                // that was previously written to the promise and thus not an underlying searchParam value
                return _reflect.ReflectAdapter.get(target, prop, receiver);
            }
            switch(prop){
                case 'then':
                    {
                        const expression = '`await searchParams`, `searchParams.then`, or similar';
                        (0, _dynamicrendering.annotateDynamicAccess)(expression, prerenderStore);
                        return _reflect.ReflectAdapter.get(target, prop, receiver);
                    }
                case 'status':
                    {
                        const expression = '`use(searchParams)`, `searchParams.status`, or similar';
                        (0, _dynamicrendering.annotateDynamicAccess)(expression, prerenderStore);
                        return _reflect.ReflectAdapter.get(target, prop, receiver);
                    }
                default:
                    {
                        return _reflect.ReflectAdapter.get(target, prop, receiver);
                    }
            }
        }
    });
    CachedSearchParams.set(prerenderStore, proxiedPromise);
    return proxiedPromise;
}
function makeErroringExoticSearchParams(workStore, prerenderStore) {
    const cachedSearchParams = CachedSearchParams.get(workStore);
    if (cachedSearchParams) {
        return cachedSearchParams;
    }
    const underlyingSearchParams = {};
    // For search params we don't construct a ReactPromise because we want to interrupt
    // rendering on any property access that was not set from outside and so we only want
    // to have properties like value and status if React sets them.
    const promise = Promise.resolve(underlyingSearchParams);
    const proxiedPromise = new Proxy(promise, {
        get (target, prop, receiver) {
            if (Object.hasOwn(promise, prop)) {
                // The promise has this property directly. we must return it.
                // We know it isn't a dynamic access because it can only be something
                // that was previously written to the promise and thus not an underlying searchParam value
                return _reflect.ReflectAdapter.get(target, prop, receiver);
            }
            switch(prop){
                case 'then':
                    {
                        const expression = '`await searchParams`, `searchParams.then`, or similar';
                        if (workStore.dynamicShouldError) {
                            (0, _utils.throwWithStaticGenerationBailoutErrorWithDynamicError)(workStore.route, expression);
                        } else if (prerenderStore.type === 'prerender-ppr') {
                            // PPR Prerender (no cacheComponents)
                            (0, _dynamicrendering.postponeWithTracking)(workStore.route, expression, prerenderStore.dynamicTracking);
                        } else {
                            // Legacy Prerender
                            (0, _dynamicrendering.throwToInterruptStaticGeneration)(expression, workStore, prerenderStore);
                        }
                        return;
                    }
                case 'status':
                    {
                        const expression = '`use(searchParams)`, `searchParams.status`, or similar';
                        if (workStore.dynamicShouldError) {
                            (0, _utils.throwWithStaticGenerationBailoutErrorWithDynamicError)(workStore.route, expression);
                        } else if (prerenderStore.type === 'prerender-ppr') {
                            // PPR Prerender (no cacheComponents)
                            (0, _dynamicrendering.postponeWithTracking)(workStore.route, expression, prerenderStore.dynamicTracking);
                        } else {
                            // Legacy Prerender
                            (0, _dynamicrendering.throwToInterruptStaticGeneration)(expression, workStore, prerenderStore);
                        }
                        return;
                    }
                default:
                    {
                        if (typeof prop === 'string' && !_reflectutils.wellKnownProperties.has(prop)) {
                            const expression = (0, _reflectutils.describeStringPropertyAccess)('searchParams', prop);
                            if (workStore.dynamicShouldError) {
                                (0, _utils.throwWithStaticGenerationBailoutErrorWithDynamicError)(workStore.route, expression);
                            } else if (prerenderStore.type === 'prerender-ppr') {
                                // PPR Prerender (no cacheComponents)
                                (0, _dynamicrendering.postponeWithTracking)(workStore.route, expression, prerenderStore.dynamicTracking);
                            } else {
                                // Legacy Prerender
                                (0, _dynamicrendering.throwToInterruptStaticGeneration)(expression, workStore, prerenderStore);
                            }
                        }
                        return _reflect.ReflectAdapter.get(target, prop, receiver);
                    }
            }
        },
        has (target, prop) {
            // We don't expect key checking to be used except for testing the existence of
            // searchParams so we make all has tests trigger dynamic. this means that `promise.then`
            // can resolve to the then function on the Promise prototype but 'then' in promise will assume
            // you are testing whether the searchParams has a 'then' property.
            if (typeof prop === 'string') {
                const expression = (0, _reflectutils.describeHasCheckingStringProperty)('searchParams', prop);
                if (workStore.dynamicShouldError) {
                    (0, _utils.throwWithStaticGenerationBailoutErrorWithDynamicError)(workStore.route, expression);
                } else if (prerenderStore.type === 'prerender-ppr') {
                    // PPR Prerender (no cacheComponents)
                    (0, _dynamicrendering.postponeWithTracking)(workStore.route, expression, prerenderStore.dynamicTracking);
                } else {
                    // Legacy Prerender
                    (0, _dynamicrendering.throwToInterruptStaticGeneration)(expression, workStore, prerenderStore);
                }
                return false;
            }
            return _reflect.ReflectAdapter.has(target, prop);
        },
        ownKeys () {
            const expression = '`{...searchParams}`, `Object.keys(searchParams)`, or similar';
            if (workStore.dynamicShouldError) {
                (0, _utils.throwWithStaticGenerationBailoutErrorWithDynamicError)(workStore.route, expression);
            } else if (prerenderStore.type === 'prerender-ppr') {
                // PPR Prerender (no cacheComponents)
                (0, _dynamicrendering.postponeWithTracking)(workStore.route, expression, prerenderStore.dynamicTracking);
            } else {
                // Legacy Prerender
                (0, _dynamicrendering.throwToInterruptStaticGeneration)(expression, workStore, prerenderStore);
            }
        }
    });
    CachedSearchParams.set(workStore, proxiedPromise);
    return proxiedPromise;
}
function makeErroringSearchParamsForUseCache(workStore) {
    const cachedSearchParams = CachedSearchParamsForUseCache.get(workStore);
    if (cachedSearchParams) {
        return cachedSearchParams;
    }
    const promise = Promise.resolve({});
    const proxiedPromise = new Proxy(promise, {
        get: function get(target, prop, receiver) {
            if (Object.hasOwn(promise, prop)) {
                // The promise has this property directly. we must return it. We know it
                // isn't a dynamic access because it can only be something that was
                // previously written to the promise and thus not an underlying
                // searchParam value
                return _reflect.ReflectAdapter.get(target, prop, receiver);
            }
            if (typeof prop === 'string' && (prop === 'then' || !_reflectutils.wellKnownProperties.has(prop))) {
                (0, _utils.throwForSearchParamsAccessInUseCache)(workStore, get);
            }
            return _reflect.ReflectAdapter.get(target, prop, receiver);
        },
        has: function has(target, prop) {
            // We don't expect key checking to be used except for testing the existence of
            // searchParams so we make all has tests throw an error. this means that `promise.then`
            // can resolve to the then function on the Promise prototype but 'then' in promise will assume
            // you are testing whether the searchParams has a 'then' property.
            if (typeof prop === 'string' && (prop === 'then' || !_reflectutils.wellKnownProperties.has(prop))) {
                (0, _utils.throwForSearchParamsAccessInUseCache)(workStore, has);
            }
            return _reflect.ReflectAdapter.has(target, prop);
        },
        ownKeys: function ownKeys() {
            (0, _utils.throwForSearchParamsAccessInUseCache)(workStore, ownKeys);
        }
    });
    CachedSearchParamsForUseCache.set(workStore, proxiedPromise);
    return proxiedPromise;
}
function makeUntrackedExoticSearchParams(underlyingSearchParams) {
    const cachedSearchParams = CachedSearchParams.get(underlyingSearchParams);
    if (cachedSearchParams) {
        return cachedSearchParams;
    }
    // We don't use makeResolvedReactPromise here because searchParams
    // supports copying with spread and we don't want to unnecessarily
    // instrument the promise with spreadable properties of ReactPromise.
    const promise = Promise.resolve(underlyingSearchParams);
    CachedSearchParams.set(underlyingSearchParams, promise);
    Object.keys(underlyingSearchParams).forEach((prop)=>{
        if (!_reflectutils.wellKnownProperties.has(prop)) {
            Object.defineProperty(promise, prop, {
                get () {
                    const workUnitStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();
                    if (workUnitStore) {
                        (0, _dynamicrendering.trackDynamicDataInDynamicRender)(workUnitStore);
                    }
                    return underlyingSearchParams[prop];
                },
                set (value) {
                    Object.defineProperty(promise, prop, {
                        value,
                        writable: true,
                        enumerable: true
                    });
                },
                enumerable: true,
                configurable: true
            });
        }
    });
    return promise;
}
function makeUntrackedSearchParams(underlyingSearchParams) {
    const cachedSearchParams = CachedSearchParams.get(underlyingSearchParams);
    if (cachedSearchParams) {
        return cachedSearchParams;
    }
    const promise = Promise.resolve(underlyingSearchParams);
    CachedSearchParams.set(underlyingSearchParams, promise);
    return promise;
}
function makeDynamicallyTrackedExoticSearchParamsWithDevWarnings(underlyingSearchParams, store) {
    const cachedSearchParams = CachedSearchParams.get(underlyingSearchParams);
    if (cachedSearchParams) {
        return cachedSearchParams;
    }
    const proxiedProperties = new Set();
    const unproxiedProperties = [];
    // We have an unfortunate sequence of events that requires this initialization logic. We want to instrument the underlying
    // searchParams object to detect if you are accessing values in dev. This is used for warnings and for things like the static prerender
    // indicator. However when we pass this proxy to our Promise.resolve() below the VM checks if the resolved value is a promise by looking
    // at the `.then` property. To our dynamic tracking logic this is indistinguishable from a `then` searchParam and so we would normally trigger
    // dynamic tracking. However we know that this .then is not real dynamic access, it's just how thenables resolve in sequence. So we introduce
    // this initialization concept so we omit the dynamic check until after we've constructed our resolved promise.
    let promiseInitialized = false;
    const proxiedUnderlying = new Proxy(underlyingSearchParams, {
        get (target, prop, receiver) {
            if (typeof prop === 'string' && promiseInitialized) {
                if (store.dynamicShouldError) {
                    const expression = (0, _reflectutils.describeStringPropertyAccess)('searchParams', prop);
                    (0, _utils.throwWithStaticGenerationBailoutErrorWithDynamicError)(store.route, expression);
                }
                const workUnitStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();
                if (workUnitStore) {
                    (0, _dynamicrendering.trackDynamicDataInDynamicRender)(workUnitStore);
                }
            }
            return _reflect.ReflectAdapter.get(target, prop, receiver);
        },
        has (target, prop) {
            if (typeof prop === 'string') {
                if (store.dynamicShouldError) {
                    const expression = (0, _reflectutils.describeHasCheckingStringProperty)('searchParams', prop);
                    (0, _utils.throwWithStaticGenerationBailoutErrorWithDynamicError)(store.route, expression);
                }
            }
            return Reflect.has(target, prop);
        },
        ownKeys (target) {
            if (store.dynamicShouldError) {
                const expression = '`{...searchParams}`, `Object.keys(searchParams)`, or similar';
                (0, _utils.throwWithStaticGenerationBailoutErrorWithDynamicError)(store.route, expression);
            }
            return Reflect.ownKeys(target);
        }
    });
    // We don't use makeResolvedReactPromise here because searchParams
    // supports copying with spread and we don't want to unnecessarily
    // instrument the promise with spreadable properties of ReactPromise.
    const promise = (0, _dynamicrenderingutils.makeDevtoolsIOAwarePromise)(underlyingSearchParams);
    promise.then(()=>{
        promiseInitialized = true;
    });
    Object.keys(underlyingSearchParams).forEach((prop)=>{
        if (_reflectutils.wellKnownProperties.has(prop)) {
            // These properties cannot be shadowed because they need to be the
            // true underlying value for Promises to work correctly at runtime
            unproxiedProperties.push(prop);
        } else {
            proxiedProperties.add(prop);
            Object.defineProperty(promise, prop, {
                get () {
                    return proxiedUnderlying[prop];
                },
                set (newValue) {
                    Object.defineProperty(promise, prop, {
                        value: newValue,
                        writable: true,
                        enumerable: true
                    });
                },
                enumerable: true,
                configurable: true
            });
        }
    });
    const proxiedPromise = new Proxy(promise, {
        get (target, prop, receiver) {
            if (prop === 'then' && store.dynamicShouldError) {
                const expression = '`searchParams.then`';
                (0, _utils.throwWithStaticGenerationBailoutErrorWithDynamicError)(store.route, expression);
            }
            if (typeof prop === 'string') {
                if (!_reflectutils.wellKnownProperties.has(prop) && (proxiedProperties.has(prop) || // We are accessing a property that doesn't exist on the promise nor
                // the underlying searchParams.
                Reflect.has(target, prop) === false)) {
                    const expression = (0, _reflectutils.describeStringPropertyAccess)('searchParams', prop);
                    syncIODev(store.route, expression);
                }
            }
            return _reflect.ReflectAdapter.get(target, prop, receiver);
        },
        set (target, prop, value, receiver) {
            if (typeof prop === 'string') {
                proxiedProperties.delete(prop);
            }
            return Reflect.set(target, prop, value, receiver);
        },
        has (target, prop) {
            if (typeof prop === 'string') {
                if (!_reflectutils.wellKnownProperties.has(prop) && (proxiedProperties.has(prop) || // We are accessing a property that doesn't exist on the promise nor
                // the underlying searchParams.
                Reflect.has(target, prop) === false)) {
                    const expression = (0, _reflectutils.describeHasCheckingStringProperty)('searchParams', prop);
                    syncIODev(store.route, expression);
                }
            }
            return Reflect.has(target, prop);
        },
        ownKeys (target) {
            const expression = '`Object.keys(searchParams)` or similar';
            syncIODev(store.route, expression, unproxiedProperties);
            return Reflect.ownKeys(target);
        }
    });
    CachedSearchParams.set(underlyingSearchParams, proxiedPromise);
    return proxiedPromise;
}
// Similar to `makeDynamicallyTrackedExoticSearchParamsWithDevWarnings`, but
// just logging the sync access without actually defining the search params on
// the promise.
function makeUntrackedSearchParamsWithDevWarnings(underlyingSearchParams, store) {
    const cachedSearchParams = CachedSearchParams.get(underlyingSearchParams);
    if (cachedSearchParams) {
        return cachedSearchParams;
    }
    const proxiedProperties = new Set();
    const unproxiedProperties = [];
    const promise = (0, _dynamicrenderingutils.makeDevtoolsIOAwarePromise)(underlyingSearchParams);
    Object.keys(underlyingSearchParams).forEach((prop)=>{
        if (_reflectutils.wellKnownProperties.has(prop)) {
            // These properties cannot be shadowed because they need to be the
            // true underlying value for Promises to work correctly at runtime
            unproxiedProperties.push(prop);
        } else {
            proxiedProperties.add(prop);
        }
    });
    const proxiedPromise = new Proxy(promise, {
        get (target, prop, receiver) {
            if (typeof prop === 'string') {
                if (!_reflectutils.wellKnownProperties.has(prop) && (proxiedProperties.has(prop) || // We are accessing a property that doesn't exist on the promise nor
                // the underlying searchParams.
                Reflect.has(target, prop) === false)) {
                    const expression = (0, _reflectutils.describeStringPropertyAccess)('searchParams', prop);
                    warnForSyncAccess(store.route, expression);
                }
            }
            return _reflect.ReflectAdapter.get(target, prop, receiver);
        },
        set (target, prop, value, receiver) {
            if (typeof prop === 'string') {
                proxiedProperties.delete(prop);
            }
            return Reflect.set(target, prop, value, receiver);
        },
        has (target, prop) {
            if (typeof prop === 'string') {
                if (!_reflectutils.wellKnownProperties.has(prop) && (proxiedProperties.has(prop) || // We are accessing a property that doesn't exist on the promise nor
                // the underlying searchParams.
                Reflect.has(target, prop) === false)) {
                    const expression = (0, _reflectutils.describeHasCheckingStringProperty)('searchParams', prop);
                    warnForSyncAccess(store.route, expression);
                }
            }
            return Reflect.has(target, prop);
        },
        ownKeys (target) {
            const expression = '`Object.keys(searchParams)` or similar';
            warnForIncompleteEnumeration(store.route, expression, unproxiedProperties);
            return Reflect.ownKeys(target);
        }
    });
    CachedSearchParams.set(underlyingSearchParams, proxiedPromise);
    return proxiedPromise;
}
function syncIODev(route, expression, missingProperties) {
    // In all cases we warn normally
    if (missingProperties && missingProperties.length > 0) {
        warnForIncompleteEnumeration(route, expression, missingProperties);
    } else {
        warnForSyncAccess(route, expression);
    }
    const workUnitStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();
    if (workUnitStore) {
        switch(workUnitStore.type){
            case 'request':
                if (workUnitStore.prerenderPhase === true) {
                    // When we're rendering dynamically in dev, we need to advance out of
                    // the Prerender environment when we read Request data synchronously.
                    (0, _dynamicrendering.trackSynchronousRequestDataAccessInDev)(workUnitStore);
                }
                break;
            case 'prerender':
            case 'prerender-client':
            case 'prerender-runtime':
            case 'prerender-ppr':
            case 'prerender-legacy':
            case 'cache':
            case 'private-cache':
            case 'unstable-cache':
                break;
            default:
                workUnitStore;
        }
    }
}
const warnForSyncAccess = (0, _creatededupedbycallsiteservererrorlogger.createDedupedByCallsiteServerErrorLoggerDev)(createSearchAccessError);
const warnForIncompleteEnumeration = (0, _creatededupedbycallsiteservererrorlogger.createDedupedByCallsiteServerErrorLoggerDev)(createIncompleteEnumerationError);
function createSearchAccessError(route, expression) {
    const prefix = route ? 'Route "'.concat(route, '" ') : 'This route ';
    return Object.defineProperty(new Error("".concat(prefix, "used ").concat(expression, ". ") + "`searchParams` should be awaited before using its properties. " + "Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis"), "__NEXT_ERROR_CODE", {
        value: "E249",
        enumerable: false,
        configurable: true
    });
}
function createIncompleteEnumerationError(route, expression, missingProperties) {
    const prefix = route ? 'Route "'.concat(route, '" ') : 'This route ';
    return Object.defineProperty(new Error("".concat(prefix, "used ").concat(expression, ". ") + "`searchParams` should be awaited before using its properties. " + "The following properties were not available through enumeration " + "because they conflict with builtin or well-known property names: " + "".concat(describeListOfPropertyNames(missingProperties), ". ") + "Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis"), "__NEXT_ERROR_CODE", {
        value: "E2",
        enumerable: false,
        configurable: true
    });
}
function describeListOfPropertyNames(properties) {
    switch(properties.length){
        case 0:
            throw Object.defineProperty(new _invarianterror.InvariantError('Expected describeListOfPropertyNames to be called with a non-empty list of strings.'), "__NEXT_ERROR_CODE", {
                value: "E531",
                enumerable: false,
                configurable: true
            });
        case 1:
            return "`".concat(properties[0], "`");
        case 2:
            return "`".concat(properties[0], "` and `").concat(properties[1], "`");
        default:
            {
                let description = '';
                for(let i = 0; i < properties.length - 1; i++){
                    description += "`".concat(properties[i], "`, ");
                }
                description += ", and `".concat(properties[properties.length - 1], "`");
                return description;
            }
    }
} //# sourceMappingURL=search-params.js.map
}),
"[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/server/app-render/dynamic-access-async-storage-instance.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "dynamicAccessAsyncStorageInstance", {
    enumerable: true,
    get: function() {
        return dynamicAccessAsyncStorageInstance;
    }
});
const _asynclocalstorage = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/server/app-render/async-local-storage.js [app-client] (ecmascript)");
const dynamicAccessAsyncStorageInstance = (0, _asynclocalstorage.createAsyncLocalStorage)(); //# sourceMappingURL=dynamic-access-async-storage-instance.js.map
}),
"[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/server/app-render/dynamic-access-async-storage.external.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "dynamicAccessAsyncStorage", {
    enumerable: true,
    get: function() {
        return _dynamicaccessasyncstorageinstance.dynamicAccessAsyncStorageInstance;
    }
});
const _dynamicaccessasyncstorageinstance = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/server/app-render/dynamic-access-async-storage-instance.js [app-client] (ecmascript)"); //# sourceMappingURL=dynamic-access-async-storage.external.js.map
}),
"[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/server/request/params.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

var __TURBOPACK__imported__module__$5b$project$5d2f$Documents$2f$vsc$2f$HTV$2f$frontend$2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    createParamsFromClient: null,
    createPrerenderParamsForClientSegment: null,
    createServerParamsForMetadata: null,
    createServerParamsForRoute: null,
    createServerParamsForServerSegment: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    createParamsFromClient: function() {
        return createParamsFromClient;
    },
    createPrerenderParamsForClientSegment: function() {
        return createPrerenderParamsForClientSegment;
    },
    createServerParamsForMetadata: function() {
        return createServerParamsForMetadata;
    },
    createServerParamsForRoute: function() {
        return createServerParamsForRoute;
    },
    createServerParamsForServerSegment: function() {
        return createServerParamsForServerSegment;
    }
});
const _workasyncstorageexternal = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/server/app-render/work-async-storage.external.js [app-client] (ecmascript)");
const _reflect = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/server/web/spec-extension/adapters/reflect.js [app-client] (ecmascript)");
const _dynamicrendering = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/server/app-render/dynamic-rendering.js [app-client] (ecmascript)");
const _workunitasyncstorageexternal = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/server/app-render/work-unit-async-storage.external.js [app-client] (ecmascript)");
const _invarianterror = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/shared/lib/invariant-error.js [app-client] (ecmascript)");
const _reflectutils = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/shared/lib/utils/reflect-utils.js [app-client] (ecmascript)");
const _dynamicrenderingutils = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/server/dynamic-rendering-utils.js [app-client] (ecmascript)");
const _creatededupedbycallsiteservererrorlogger = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/server/create-deduped-by-callsite-server-error-logger.js [app-client] (ecmascript)");
const _dynamicaccessasyncstorageexternal = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/server/app-render/dynamic-access-async-storage.external.js [app-client] (ecmascript)");
function createParamsFromClient(underlyingParams, workStore) {
    const workUnitStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();
    if (workUnitStore) {
        switch(workUnitStore.type){
            case 'prerender':
            case 'prerender-client':
            case 'prerender-ppr':
            case 'prerender-legacy':
                return createStaticPrerenderParams(underlyingParams, workStore, workUnitStore);
            case 'cache':
            case 'private-cache':
            case 'unstable-cache':
                throw Object.defineProperty(new _invarianterror.InvariantError('createParamsFromClient should not be called in cache contexts.'), "__NEXT_ERROR_CODE", {
                    value: "E736",
                    enumerable: false,
                    configurable: true
                });
            case 'prerender-runtime':
                throw Object.defineProperty(new _invarianterror.InvariantError('createParamsFromClient should not be called in a runtime prerender.'), "__NEXT_ERROR_CODE", {
                    value: "E770",
                    enumerable: false,
                    configurable: true
                });
            case 'request':
                if ("TURBOPACK compile-time truthy", 1) {
                    // Semantically we only need the dev tracking when running in `next dev`
                    // but since you would never use next dev with production NODE_ENV we use this
                    // as a proxy so we can statically exclude this code from production builds.
                    const devFallbackParams = workUnitStore.devFallbackParams;
                    return createRenderParamsInDev(underlyingParams, devFallbackParams, workStore);
                } else //TURBOPACK unreachable
                ;
            default:
                workUnitStore;
        }
    }
    (0, _workunitasyncstorageexternal.throwInvariantForMissingStore)();
}
const createServerParamsForMetadata = createServerParamsForServerSegment;
function createServerParamsForRoute(underlyingParams, workStore) {
    const workUnitStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();
    if (workUnitStore) {
        switch(workUnitStore.type){
            case 'prerender':
            case 'prerender-client':
            case 'prerender-ppr':
            case 'prerender-legacy':
                return createStaticPrerenderParams(underlyingParams, workStore, workUnitStore);
            case 'cache':
            case 'private-cache':
            case 'unstable-cache':
                throw Object.defineProperty(new _invarianterror.InvariantError('createServerParamsForRoute should not be called in cache contexts.'), "__NEXT_ERROR_CODE", {
                    value: "E738",
                    enumerable: false,
                    configurable: true
                });
            case 'prerender-runtime':
                return createRuntimePrerenderParams(underlyingParams, workUnitStore);
            case 'request':
                if ("TURBOPACK compile-time truthy", 1) {
                    // Semantically we only need the dev tracking when running in `next dev`
                    // but since you would never use next dev with production NODE_ENV we use this
                    // as a proxy so we can statically exclude this code from production builds.
                    const devFallbackParams = workUnitStore.devFallbackParams;
                    return createRenderParamsInDev(underlyingParams, devFallbackParams, workStore);
                } else //TURBOPACK unreachable
                ;
            default:
                workUnitStore;
        }
    }
    (0, _workunitasyncstorageexternal.throwInvariantForMissingStore)();
}
function createServerParamsForServerSegment(underlyingParams, workStore) {
    const workUnitStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();
    if (workUnitStore) {
        switch(workUnitStore.type){
            case 'prerender':
            case 'prerender-client':
            case 'prerender-ppr':
            case 'prerender-legacy':
                return createStaticPrerenderParams(underlyingParams, workStore, workUnitStore);
            case 'cache':
            case 'private-cache':
            case 'unstable-cache':
                throw Object.defineProperty(new _invarianterror.InvariantError('createServerParamsForServerSegment should not be called in cache contexts.'), "__NEXT_ERROR_CODE", {
                    value: "E743",
                    enumerable: false,
                    configurable: true
                });
            case 'prerender-runtime':
                return createRuntimePrerenderParams(underlyingParams, workUnitStore);
            case 'request':
                if ("TURBOPACK compile-time truthy", 1) {
                    // Semantically we only need the dev tracking when running in `next dev`
                    // but since you would never use next dev with production NODE_ENV we use this
                    // as a proxy so we can statically exclude this code from production builds.
                    const devFallbackParams = workUnitStore.devFallbackParams;
                    return createRenderParamsInDev(underlyingParams, devFallbackParams, workStore);
                } else //TURBOPACK unreachable
                ;
            default:
                workUnitStore;
        }
    }
    (0, _workunitasyncstorageexternal.throwInvariantForMissingStore)();
}
function createPrerenderParamsForClientSegment(underlyingParams) {
    const workStore = _workasyncstorageexternal.workAsyncStorage.getStore();
    if (!workStore) {
        throw Object.defineProperty(new _invarianterror.InvariantError('Missing workStore in createPrerenderParamsForClientSegment'), "__NEXT_ERROR_CODE", {
            value: "E773",
            enumerable: false,
            configurable: true
        });
    }
    const workUnitStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();
    if (workUnitStore) {
        switch(workUnitStore.type){
            case 'prerender':
            case 'prerender-client':
                const fallbackParams = workUnitStore.fallbackRouteParams;
                if (fallbackParams) {
                    for(let key in underlyingParams){
                        if (fallbackParams.has(key)) {
                            // This params object has one or more fallback params, so we need
                            // to consider the awaiting of this params object "dynamic". Since
                            // we are in cacheComponents mode we encode this as a promise that never
                            // resolves.
                            return (0, _dynamicrenderingutils.makeHangingPromise)(workUnitStore.renderSignal, workStore.route, '`params`');
                        }
                    }
                }
                break;
            case 'cache':
            case 'private-cache':
            case 'unstable-cache':
                throw Object.defineProperty(new _invarianterror.InvariantError('createPrerenderParamsForClientSegment should not be called in cache contexts.'), "__NEXT_ERROR_CODE", {
                    value: "E734",
                    enumerable: false,
                    configurable: true
                });
            case 'prerender-ppr':
            case 'prerender-legacy':
            case 'prerender-runtime':
            case 'request':
                break;
            default:
                workUnitStore;
        }
    }
    // We're prerendering in a mode that does not abort. We resolve the promise without
    // any tracking because we're just transporting a value from server to client where the tracking
    // will be applied.
    return Promise.resolve(underlyingParams);
}
function createStaticPrerenderParams(underlyingParams, workStore, prerenderStore) {
    switch(prerenderStore.type){
        case 'prerender':
        case 'prerender-client':
            {
                const fallbackParams = prerenderStore.fallbackRouteParams;
                if (fallbackParams) {
                    for(const key in underlyingParams){
                        if (fallbackParams.has(key)) {
                            // This params object has one or more fallback params, so we need
                            // to consider the awaiting of this params object "dynamic". Since
                            // we are in cacheComponents mode we encode this as a promise that never
                            // resolves.
                            return makeHangingParams(underlyingParams, workStore, prerenderStore);
                        }
                    }
                }
                break;
            }
        case 'prerender-ppr':
            {
                const fallbackParams = prerenderStore.fallbackRouteParams;
                if (fallbackParams) {
                    for(const key in underlyingParams){
                        if (fallbackParams.has(key)) {
                            return makeErroringExoticParams(underlyingParams, fallbackParams, workStore, prerenderStore);
                        }
                    }
                }
                break;
            }
        case 'prerender-legacy':
            break;
        default:
            prerenderStore;
    }
    if ("TURBOPACK compile-time falsy", 0) //TURBOPACK unreachable
    ;
    else {
        return makeUntrackedExoticParams(underlyingParams);
    }
}
function createRuntimePrerenderParams(underlyingParams, workUnitStore) {
    return (0, _dynamicrendering.delayUntilRuntimeStage)(workUnitStore, ("TURBOPACK compile-time falsy", 0) ? "TURBOPACK unreachable" : makeUntrackedExoticParams(underlyingParams));
}
function createRenderParamsInProd(underlyingParams) {
    if ("TURBOPACK compile-time falsy", 0) //TURBOPACK unreachable
    ;
    return makeUntrackedExoticParams(underlyingParams);
}
function createRenderParamsInDev(underlyingParams, devFallbackParams, workStore) {
    let hasFallbackParams = false;
    if (devFallbackParams) {
        for(let key in underlyingParams){
            if (devFallbackParams.has(key)) {
                hasFallbackParams = true;
                break;
            }
        }
    }
    if ("TURBOPACK compile-time falsy", 0) //TURBOPACK unreachable
    ;
    return makeDynamicallyTrackedExoticParamsWithDevWarnings(underlyingParams, hasFallbackParams, workStore);
}
const CachedParams = new WeakMap();
const fallbackParamsProxyHandler = {
    get: function get(target, prop, receiver) {
        if (prop === 'then' || prop === 'catch' || prop === 'finally') {
            const originalMethod = _reflect.ReflectAdapter.get(target, prop, receiver);
            return ({
                [prop]: function() {
                    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
                        args[_key] = arguments[_key];
                    }
                    const store = _dynamicaccessasyncstorageexternal.dynamicAccessAsyncStorage.getStore();
                    if (store) {
                        store.abortController.abort(Object.defineProperty(new Error("Accessed fallback `params` during prerendering."), "__NEXT_ERROR_CODE", {
                            value: "E691",
                            enumerable: false,
                            configurable: true
                        }));
                    }
                    return new Proxy(originalMethod.apply(target, args), fallbackParamsProxyHandler);
                }
            })[prop];
        }
        return _reflect.ReflectAdapter.get(target, prop, receiver);
    }
};
function makeHangingParams(underlyingParams, workStore, prerenderStore) {
    const cachedParams = CachedParams.get(underlyingParams);
    if (cachedParams) {
        return cachedParams;
    }
    const promise = new Proxy((0, _dynamicrenderingutils.makeHangingPromise)(prerenderStore.renderSignal, workStore.route, '`params`'), fallbackParamsProxyHandler);
    CachedParams.set(underlyingParams, promise);
    return promise;
}
function makeErroringExoticParams(underlyingParams, fallbackParams, workStore, prerenderStore) {
    const cachedParams = CachedParams.get(underlyingParams);
    if (cachedParams) {
        return cachedParams;
    }
    const augmentedUnderlying = {
        ...underlyingParams
    };
    // We don't use makeResolvedReactPromise here because params
    // supports copying with spread and we don't want to unnecessarily
    // instrument the promise with spreadable properties of ReactPromise.
    const promise = Promise.resolve(augmentedUnderlying);
    CachedParams.set(underlyingParams, promise);
    Object.keys(underlyingParams).forEach((prop)=>{
        if (_reflectutils.wellKnownProperties.has(prop)) {
        // These properties cannot be shadowed because they need to be the
        // true underlying value for Promises to work correctly at runtime
        } else {
            if (fallbackParams.has(prop)) {
                Object.defineProperty(augmentedUnderlying, prop, {
                    get () {
                        const expression = (0, _reflectutils.describeStringPropertyAccess)('params', prop);
                        // In most dynamic APIs we also throw if `dynamic = "error"` however
                        // for params is only dynamic when we're generating a fallback shell
                        // and even when `dynamic = "error"` we still support generating dynamic
                        // fallback shells
                        // TODO remove this comment when cacheComponents is the default since there
                        // will be no `dynamic = "error"`
                        if (prerenderStore.type === 'prerender-ppr') {
                            // PPR Prerender (no cacheComponents)
                            (0, _dynamicrendering.postponeWithTracking)(workStore.route, expression, prerenderStore.dynamicTracking);
                        } else {
                            // Legacy Prerender
                            (0, _dynamicrendering.throwToInterruptStaticGeneration)(expression, workStore, prerenderStore);
                        }
                    },
                    enumerable: true
                });
                Object.defineProperty(promise, prop, {
                    get () {
                        const expression = (0, _reflectutils.describeStringPropertyAccess)('params', prop);
                        // In most dynamic APIs we also throw if `dynamic = "error"` however
                        // for params is only dynamic when we're generating a fallback shell
                        // and even when `dynamic = "error"` we still support generating dynamic
                        // fallback shells
                        // TODO remove this comment when cacheComponents is the default since there
                        // will be no `dynamic = "error"`
                        if (prerenderStore.type === 'prerender-ppr') {
                            // PPR Prerender (no cacheComponents)
                            (0, _dynamicrendering.postponeWithTracking)(workStore.route, expression, prerenderStore.dynamicTracking);
                        } else {
                            // Legacy Prerender
                            (0, _dynamicrendering.throwToInterruptStaticGeneration)(expression, workStore, prerenderStore);
                        }
                    },
                    set (newValue) {
                        Object.defineProperty(promise, prop, {
                            value: newValue,
                            writable: true,
                            enumerable: true
                        });
                    },
                    enumerable: true,
                    configurable: true
                });
            } else {
                ;
                promise[prop] = underlyingParams[prop];
            }
        }
    });
    return promise;
}
function makeUntrackedExoticParams(underlyingParams) {
    const cachedParams = CachedParams.get(underlyingParams);
    if (cachedParams) {
        return cachedParams;
    }
    // We don't use makeResolvedReactPromise here because params
    // supports copying with spread and we don't want to unnecessarily
    // instrument the promise with spreadable properties of ReactPromise.
    const promise = Promise.resolve(underlyingParams);
    CachedParams.set(underlyingParams, promise);
    Object.keys(underlyingParams).forEach((prop)=>{
        if (_reflectutils.wellKnownProperties.has(prop)) {
        // These properties cannot be shadowed because they need to be the
        // true underlying value for Promises to work correctly at runtime
        } else {
            ;
            promise[prop] = underlyingParams[prop];
        }
    });
    return promise;
}
function makeUntrackedParams(underlyingParams) {
    const cachedParams = CachedParams.get(underlyingParams);
    if (cachedParams) {
        return cachedParams;
    }
    const promise = Promise.resolve(underlyingParams);
    CachedParams.set(underlyingParams, promise);
    return promise;
}
function makeDynamicallyTrackedExoticParamsWithDevWarnings(underlyingParams, hasFallbackParams, store) {
    const cachedParams = CachedParams.get(underlyingParams);
    if (cachedParams) {
        return cachedParams;
    }
    // We don't use makeResolvedReactPromise here because params
    // supports copying with spread and we don't want to unnecessarily
    // instrument the promise with spreadable properties of ReactPromise.
    const promise = hasFallbackParams ? (0, _dynamicrenderingutils.makeDevtoolsIOAwarePromise)(underlyingParams) : Promise.resolve(underlyingParams);
    const proxiedProperties = new Set();
    const unproxiedProperties = [];
    Object.keys(underlyingParams).forEach((prop)=>{
        if (_reflectutils.wellKnownProperties.has(prop)) {
            // These properties cannot be shadowed because they need to be the
            // true underlying value for Promises to work correctly at runtime
            unproxiedProperties.push(prop);
        } else {
            proxiedProperties.add(prop);
            promise[prop] = underlyingParams[prop];
        }
    });
    const proxiedPromise = new Proxy(promise, {
        get (target, prop, receiver) {
            if (typeof prop === 'string') {
                if (proxiedProperties.has(prop)) {
                    const expression = (0, _reflectutils.describeStringPropertyAccess)('params', prop);
                    syncIODev(store.route, expression);
                }
            }
            return _reflect.ReflectAdapter.get(target, prop, receiver);
        },
        set (target, prop, value, receiver) {
            if (typeof prop === 'string') {
                proxiedProperties.delete(prop);
            }
            return _reflect.ReflectAdapter.set(target, prop, value, receiver);
        },
        ownKeys (target) {
            const expression = '`...params` or similar expression';
            syncIODev(store.route, expression, unproxiedProperties);
            return Reflect.ownKeys(target);
        }
    });
    CachedParams.set(underlyingParams, proxiedPromise);
    return proxiedPromise;
}
// Similar to `makeDynamicallyTrackedExoticParamsWithDevWarnings`, but just
// logging the sync access without actually defining the params on the promise.
function makeDynamicallyTrackedParamsWithDevWarnings(underlyingParams, hasFallbackParams, store) {
    const cachedParams = CachedParams.get(underlyingParams);
    if (cachedParams) {
        return cachedParams;
    }
    // We don't use makeResolvedReactPromise here because params
    // supports copying with spread and we don't want to unnecessarily
    // instrument the promise with spreadable properties of ReactPromise.
    const promise = hasFallbackParams ? (0, _dynamicrenderingutils.makeDevtoolsIOAwarePromise)(underlyingParams) : Promise.resolve(underlyingParams);
    const proxiedProperties = new Set();
    const unproxiedProperties = [];
    Object.keys(underlyingParams).forEach((prop)=>{
        if (_reflectutils.wellKnownProperties.has(prop)) {
            // These properties cannot be shadowed because they need to be the
            // true underlying value for Promises to work correctly at runtime
            unproxiedProperties.push(prop);
        } else {
            proxiedProperties.add(prop);
        }
    });
    const proxiedPromise = new Proxy(promise, {
        get (target, prop, receiver) {
            if (typeof prop === 'string') {
                if (proxiedProperties.has(prop)) {
                    const expression = (0, _reflectutils.describeStringPropertyAccess)('params', prop);
                    warnForSyncAccess(store.route, expression);
                }
            }
            return _reflect.ReflectAdapter.get(target, prop, receiver);
        },
        set (target, prop, value, receiver) {
            if (typeof prop === 'string') {
                proxiedProperties.delete(prop);
            }
            return _reflect.ReflectAdapter.set(target, prop, value, receiver);
        },
        ownKeys (target) {
            const expression = '`...params` or similar expression';
            warnForIncompleteEnumeration(store.route, expression, unproxiedProperties);
            return Reflect.ownKeys(target);
        }
    });
    CachedParams.set(underlyingParams, proxiedPromise);
    return proxiedPromise;
}
function syncIODev(route, expression, missingProperties) {
    const workUnitStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();
    if (workUnitStore) {
        switch(workUnitStore.type){
            case 'request':
                if (workUnitStore.prerenderPhase === true) {
                    // When we're rendering dynamically in dev, we need to advance out of
                    // the Prerender environment when we read Request data synchronously.
                    (0, _dynamicrendering.trackSynchronousRequestDataAccessInDev)(workUnitStore);
                }
                break;
            case 'prerender':
            case 'prerender-client':
            case 'prerender-runtime':
            case 'prerender-ppr':
            case 'prerender-legacy':
            case 'cache':
            case 'private-cache':
            case 'unstable-cache':
                break;
            default:
                workUnitStore;
        }
    }
    // In all cases we warn normally
    if (missingProperties && missingProperties.length > 0) {
        warnForIncompleteEnumeration(route, expression, missingProperties);
    } else {
        warnForSyncAccess(route, expression);
    }
}
const warnForSyncAccess = (0, _creatededupedbycallsiteservererrorlogger.createDedupedByCallsiteServerErrorLoggerDev)(createParamsAccessError);
const warnForIncompleteEnumeration = (0, _creatededupedbycallsiteservererrorlogger.createDedupedByCallsiteServerErrorLoggerDev)(createIncompleteEnumerationError);
function createParamsAccessError(route, expression) {
    const prefix = route ? 'Route "'.concat(route, '" ') : 'This route ';
    return Object.defineProperty(new Error("".concat(prefix, "used ").concat(expression, ". ") + "`params` should be awaited before using its properties. " + "Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis"), "__NEXT_ERROR_CODE", {
        value: "E307",
        enumerable: false,
        configurable: true
    });
}
function createIncompleteEnumerationError(route, expression, missingProperties) {
    const prefix = route ? 'Route "'.concat(route, '" ') : 'This route ';
    return Object.defineProperty(new Error("".concat(prefix, "used ").concat(expression, ". ") + "`params` should be awaited before using its properties. " + "The following properties were not available through enumeration " + "because they conflict with builtin property names: " + "".concat(describeListOfPropertyNames(missingProperties), ". ") + "Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis"), "__NEXT_ERROR_CODE", {
        value: "E482",
        enumerable: false,
        configurable: true
    });
}
function describeListOfPropertyNames(properties) {
    switch(properties.length){
        case 0:
            throw Object.defineProperty(new _invarianterror.InvariantError('Expected describeListOfPropertyNames to be called with a non-empty list of strings.'), "__NEXT_ERROR_CODE", {
                value: "E531",
                enumerable: false,
                configurable: true
            });
        case 1:
            return "`".concat(properties[0], "`");
        case 2:
            return "`".concat(properties[0], "` and `").concat(properties[1], "`");
        default:
            {
                let description = '';
                for(let i = 0; i < properties.length - 1; i++){
                    description += "`".concat(properties[i], "`, ");
                }
                description += ", and `".concat(properties[properties.length - 1], "`");
                return description;
            }
    }
} //# sourceMappingURL=params.js.map
}),
"[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/client/components/client-page.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "ClientPageRoot", {
    enumerable: true,
    get: function() {
        return ClientPageRoot;
    }
});
const _jsxruntime = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
const _invarianterror = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/shared/lib/invariant-error.js [app-client] (ecmascript)");
function ClientPageRoot(param) {
    let { Component, searchParams, params, promises } = param;
    if (typeof window === 'undefined') {
        const { workAsyncStorage } = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/server/app-render/work-async-storage.external.js [app-client] (ecmascript)");
        let clientSearchParams;
        let clientParams;
        // We are going to instrument the searchParams prop with tracking for the
        // appropriate context. We wrap differently in prerendering vs rendering
        const store = workAsyncStorage.getStore();
        if (!store) {
            throw Object.defineProperty(new _invarianterror.InvariantError('Expected workStore to exist when handling searchParams in a client Page.'), "__NEXT_ERROR_CODE", {
                value: "E564",
                enumerable: false,
                configurable: true
            });
        }
        const { createSearchParamsFromClient } = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/server/request/search-params.js [app-client] (ecmascript)");
        clientSearchParams = createSearchParamsFromClient(searchParams, store);
        const { createParamsFromClient } = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/server/request/params.js [app-client] (ecmascript)");
        clientParams = createParamsFromClient(params, store);
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(Component, {
            params: clientParams,
            searchParams: clientSearchParams
        });
    } else {
        const { createRenderSearchParamsFromClient } = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/client/request/search-params.browser.js [app-client] (ecmascript)");
        const clientSearchParams = createRenderSearchParamsFromClient(searchParams);
        const { createRenderParamsFromClient } = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/client/request/params.browser.js [app-client] (ecmascript)");
        const clientParams = createRenderParamsFromClient(params);
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(Component, {
            params: clientParams,
            searchParams: clientSearchParams
        });
    }
}
if ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {
    Object.defineProperty(exports.default, '__esModule', {
        value: true
    });
    Object.assign(exports.default, exports);
    module.exports = exports.default;
} //# sourceMappingURL=client-page.js.map
}),
"[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/client/components/client-segment.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "ClientSegmentRoot", {
    enumerable: true,
    get: function() {
        return ClientSegmentRoot;
    }
});
const _jsxruntime = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
const _invarianterror = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/shared/lib/invariant-error.js [app-client] (ecmascript)");
function ClientSegmentRoot(param) {
    let { Component, slots, params, promise } = param;
    if (typeof window === 'undefined') {
        const { workAsyncStorage } = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/server/app-render/work-async-storage.external.js [app-client] (ecmascript)");
        let clientParams;
        // We are going to instrument the searchParams prop with tracking for the
        // appropriate context. We wrap differently in prerendering vs rendering
        const store = workAsyncStorage.getStore();
        if (!store) {
            throw Object.defineProperty(new _invarianterror.InvariantError('Expected workStore to exist when handling params in a client segment such as a Layout or Template.'), "__NEXT_ERROR_CODE", {
                value: "E600",
                enumerable: false,
                configurable: true
            });
        }
        const { createParamsFromClient } = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/server/request/params.js [app-client] (ecmascript)");
        clientParams = createParamsFromClient(params, store);
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(Component, {
            ...slots,
            params: clientParams
        });
    } else {
        const { createRenderParamsFromClient } = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/client/request/params.browser.js [app-client] (ecmascript)");
        const clientParams = createRenderParamsFromClient(params);
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(Component, {
            ...slots,
            params: clientParams
        });
    }
}
if ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {
    Object.defineProperty(exports.default, '__esModule', {
        value: true
    });
    Object.assign(exports.default, exports);
    module.exports = exports.default;
} //# sourceMappingURL=client-segment.js.map
}),
"[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/lib/metadata/generate/icon-mark.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "IconMark", {
    enumerable: true,
    get: function() {
        return IconMark;
    }
});
const _jsxruntime = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
const IconMark = ()=>{
    if (typeof window !== 'undefined') {
        return null;
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("meta", {
        name: "\xabnxt-icon\xbb"
    });
}; //# sourceMappingURL=icon-mark.js.map
}),
"[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/client/components/metadata/async-metadata.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "AsyncMetadataOutlet", {
    enumerable: true,
    get: function() {
        return AsyncMetadataOutlet;
    }
});
const _jsxruntime = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
const _react = __turbopack_context__.r("[project]/Documents/vsc/HTV/frontend/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
function MetadataOutlet(param) {
    let { promise } = param;
    const { error, digest } = (0, _react.use)(promise);
    if (error) {
        if (digest) {
            // The error will lose its original digest after passing from server layer to client layer；
            // We recover the digest property here to override the React created one if original digest exists.
            ;
            error.digest = digest;
        }
        throw error;
    }
    return null;
}
function AsyncMetadataOutlet(param) {
    let { promise } = param;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_react.Suspense, {
        fallback: null,
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(MetadataOutlet, {
            promise: promise
        })
    });
}
if ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {
    Object.defineProperty(exports.default, '__esModule', {
        value: true
    });
    Object.assign(exports.default, exports);
    module.exports = exports.default;
} //# sourceMappingURL=async-metadata.js.map
}),
]);

//# sourceMappingURL=ce80c_8f1835de._.js.map